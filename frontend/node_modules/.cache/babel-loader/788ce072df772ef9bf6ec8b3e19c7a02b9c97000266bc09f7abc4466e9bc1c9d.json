{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hsson\\\\IdeaProjects\\\\2024-2-CSC4004-6-Hotsix\\\\frontend\\\\src\\\\components\\\\ContentCarousel.js\",\n  _s = $RefreshSig$();\n// src/components/ContentCarousel.js\nimport React, { useRef, useEffect, useState } from \"react\";\nimport axios from \"axios\"; // axios 추가\nimport \"../styles/ContentCarousel.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ContentCarousel() {\n  _s();\n  const containerRefs = useRef([]);\n  const [gptResponse, setGptResponse] = useState([]);\n  const [sections, setSections] = useState([{\n    title: \"사용자 맞춤\",\n    items: []\n  }, {\n    title: \"기념일 기념\",\n    items: Array.from({\n      length: 10\n    }, (_, i) => ({\n      title: `추천 ${i + 1}`\n    }))\n  }, {\n    title: \"인기 장소\",\n    items: Array.from({\n      length: 10\n    }, (_, i) => ({\n      title: `드라마 ${i + 1}`\n    }))\n  }, {\n    title: \"계절별\",\n    items: Array.from({\n      length: 10\n    }, (_, i) => ({\n      title: `애니 ${i + 1}`\n    }))\n  }]);\n  useEffect(() => {\n    const fetchGptResponse = async () => {\n      // 실제 사용자 데이터로 대체하세요\n      const userInfo = {\n        MBTI: \"ISFP\",\n        preferredArea: \"서울특별시 중구 퇴계로\",\n        expectedBudgetRange: \"10~20만원\",\n        requiredCourse: \"카페, 영화\",\n        preferredCourse: \"산책\",\n        activityPreference: \"비선호\",\n        transportType: \"대중교통\"\n      };\n      try {\n        const response = await axios.post('http://localhost:8080/api/gpt/ask', userInfo);\n        const {\n          text\n        } = response.data;\n\n        // GPT 응답 파싱\n        const contentItems = text.split('\\n').filter(item => item.trim() !== '').map(item => item.trim());\n        console.log('파싱된 GPT 응답:', contentItems); // 디버깅용\n\n        setGptResponse(contentItems);\n\n        // GPT 응답을 '사용자 맞춤' 섹션의 items로 설정\n        setSections(prevSections => {\n          const newSections = [...prevSections];\n          newSections[0] = {\n            ...newSections[0],\n            items: contentItems.map(item => ({\n              title: item\n            }))\n          };\n          return newSections;\n        });\n      } catch (error) {\n        console.error(\"GPT 응답 가져오는 중 오류 발생:\", error);\n      }\n    };\n    fetchGptResponse();\n  }, []);\n\n  // 스크롤 이동량 설정\n  const scrollAmount = 200; // 예시로 한 번에 200px씩 이동\n\n  const scroll = (direction, index) => {\n    var _container$querySelec;\n    const container = containerRefs.current[index];\n    if (!container) return; // 컨테이너가 없을 경우 대비\n\n    const itemWidth = ((_container$querySelec = container.querySelector(\".carousel-item\")) === null || _container$querySelec === void 0 ? void 0 : _container$querySelec.offsetWidth) || 0;\n    const totalWidth = itemWidth * (sections[index].items.length || 0);\n    if (direction === \"left\") {\n      container.scrollLeft -= scrollAmount; // 왼쪽으로 스크롤\n\n      // 처음에 도달하면 끝으로 돌아가도록 설정\n      if (container.scrollLeft < 0) {\n        container.scrollLeft = totalWidth - container.clientWidth; // 끝으로 이동\n      }\n    } else {\n      container.scrollLeft += scrollAmount; // 오른쪽으로 스크롤\n\n      // 끝에 도달하면 처음으로 돌아가도록 설정\n      if (container.scrollLeft >= totalWidth - container.clientWidth) {\n        container.scrollLeft = 0; // 처음으로 돌아감\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: sections.map((section, index) => /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"carousel-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"carousel-title\",\n        children: section.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"carousel-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"carousel-button prev\",\n          onClick: () => scroll(\"left\", index),\n          children: \"\\u2039\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"carousel-content\",\n          ref: el => containerRefs.current[index] = el,\n          children: section.items.map((item, itemIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"carousel-item\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"content-number\",\n              children: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 19\n            }, this)\n          }, itemIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"carousel-button next\",\n          onClick: () => scroll(\"right\", index),\n          children: \"\\u203A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n}\n_s(ContentCarousel, \"alCIJZfMf3ifJomNnQGp/QfI6G4=\");\n_c = ContentCarousel;\nexport default ContentCarousel;\nvar _c;\n$RefreshReg$(_c, \"ContentCarousel\");","map":{"version":3,"names":["React","useRef","useEffect","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","ContentCarousel","_s","containerRefs","gptResponse","setGptResponse","sections","setSections","title","items","Array","from","length","_","i","fetchGptResponse","userInfo","MBTI","preferredArea","expectedBudgetRange","requiredCourse","preferredCourse","activityPreference","transportType","response","post","text","data","contentItems","split","filter","item","trim","map","console","log","prevSections","newSections","error","scrollAmount","scroll","direction","index","_container$querySelec","container","current","itemWidth","querySelector","offsetWidth","totalWidth","scrollLeft","clientWidth","children","section","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","el","itemIndex","_c","$RefreshReg$"],"sources":["C:/Users/hsson/IdeaProjects/2024-2-CSC4004-6-Hotsix/frontend/src/components/ContentCarousel.js"],"sourcesContent":["// src/components/ContentCarousel.js\r\nimport React, { useRef, useEffect, useState } from \"react\";\r\nimport axios from \"axios\"; // axios 추가\r\nimport \"../styles/ContentCarousel.css\";\r\n\r\nfunction ContentCarousel() {\r\n  const containerRefs = useRef([]);\r\n  const [gptResponse, setGptResponse] = useState([]);\r\n\r\n  const [sections, setSections] = useState([\r\n    { title: \"사용자 맞춤\", items: [] },\r\n    { title: \"기념일 기념\", items: Array.from({ length: 10 }, (_, i) => ({ title: `추천 ${i + 1}` })) },\r\n    { title: \"인기 장소\", items: Array.from({ length: 10 }, (_, i) => ({ title: `드라마 ${i + 1}` })) },\r\n    { title: \"계절별\", items: Array.from({ length: 10 }, (_, i) => ({ title: `애니 ${i + 1}` })) },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    const fetchGptResponse = async () => {\r\n      // 실제 사용자 데이터로 대체하세요\r\n      const userInfo = {\r\n        MBTI: \"ISFP\",\r\n        preferredArea: \"서울특별시 중구 퇴계로\",\r\n        expectedBudgetRange: \"10~20만원\",\r\n        requiredCourse: \"카페, 영화\",\r\n        preferredCourse: \"산책\",\r\n        activityPreference: \"비선호\",\r\n        transportType: \"대중교통\",\r\n      };\r\n\r\n      try {\r\n        const response = await axios.post('http://localhost:8080/api/gpt/ask', userInfo);\r\n        const { text } = response.data;\r\n\r\n        // GPT 응답 파싱\r\n        const contentItems = text.split('\\n').filter(item => item.trim() !== '').map(item => item.trim());\r\n        console.log('파싱된 GPT 응답:', contentItems); // 디버깅용\r\n\r\n        setGptResponse(contentItems);\r\n\r\n        // GPT 응답을 '사용자 맞춤' 섹션의 items로 설정\r\n        setSections(prevSections => {\r\n          const newSections = [...prevSections];\r\n          newSections[0] = {\r\n            ...newSections[0],\r\n            items: contentItems.map(item => ({ title: item })),\r\n          };\r\n          return newSections;\r\n        });\r\n      } catch (error) {\r\n        console.error(\"GPT 응답 가져오는 중 오류 발생:\", error);\r\n      }\r\n    };\r\n\r\n    fetchGptResponse();\r\n  }, []);\r\n\r\n  // 스크롤 이동량 설정\r\n  const scrollAmount = 200; // 예시로 한 번에 200px씩 이동\r\n\r\n  const scroll = (direction, index) => {\r\n    const container = containerRefs.current[index];\r\n    if (!container) return; // 컨테이너가 없을 경우 대비\r\n\r\n    const itemWidth = container.querySelector(\".carousel-item\")?.offsetWidth || 0;\r\n    const totalWidth = itemWidth * (sections[index].items.length || 0);\r\n\r\n    if (direction === \"left\") {\r\n      container.scrollLeft -= scrollAmount; // 왼쪽으로 스크롤\r\n\r\n      // 처음에 도달하면 끝으로 돌아가도록 설정\r\n      if (container.scrollLeft < 0) {\r\n        container.scrollLeft = totalWidth - container.clientWidth; // 끝으로 이동\r\n      }\r\n    } else {\r\n      container.scrollLeft += scrollAmount; // 오른쪽으로 스크롤\r\n\r\n      // 끝에 도달하면 처음으로 돌아가도록 설정\r\n      if (container.scrollLeft >= totalWidth - container.clientWidth) {\r\n        container.scrollLeft = 0; // 처음으로 돌아감\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {sections.map((section, index) => (\r\n        <section className=\"carousel-section\" key={index}>\r\n          <h2 className=\"carousel-title\">{section.title}</h2>\r\n          <div className=\"carousel-container\">\r\n            <button\r\n              className=\"carousel-button prev\"\r\n              onClick={() => scroll(\"left\", index)}\r\n            >\r\n              ‹\r\n            </button>\r\n            <div\r\n              className=\"carousel-content\"\r\n              ref={(el) => (containerRefs.current[index] = el)}\r\n            >\r\n              {section.items.map((item, itemIndex) => (\r\n                <div className=\"carousel-item\" key={itemIndex}>\r\n                  <div className=\"content-number\">{item.title}</div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <button\r\n              className=\"carousel-button next\"\r\n              onClick={() => scroll(\"right\", index)}\r\n            >\r\n              ›\r\n            </button>\r\n          </div>\r\n        </section>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ContentCarousel;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;AAC3B,OAAO,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEvC,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAMC,aAAa,GAAGV,MAAM,CAAC,EAAE,CAAC;EAChC,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,CACvC;IAAEa,KAAK,EAAE,QAAQ;IAAEC,KAAK,EAAE;EAAG,CAAC,EAC9B;IAAED,KAAK,EAAE,QAAQ;IAAEC,KAAK,EAAEC,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAE;IAAG,CAAC,EAAE,CAACC,CAAC,EAAEC,CAAC,MAAM;MAAEN,KAAK,EAAE,MAAMM,CAAC,GAAG,CAAC;IAAG,CAAC,CAAC;EAAE,CAAC,EAC5F;IAAEN,KAAK,EAAE,OAAO;IAAEC,KAAK,EAAEC,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAE;IAAG,CAAC,EAAE,CAACC,CAAC,EAAEC,CAAC,MAAM;MAAEN,KAAK,EAAE,OAAOM,CAAC,GAAG,CAAC;IAAG,CAAC,CAAC;EAAE,CAAC,EAC5F;IAAEN,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAEC,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAE;IAAG,CAAC,EAAE,CAACC,CAAC,EAAEC,CAAC,MAAM;MAAEN,KAAK,EAAE,MAAMM,CAAC,GAAG,CAAC;IAAG,CAAC,CAAC;EAAE,CAAC,CAC1F,CAAC;EAEFpB,SAAS,CAAC,MAAM;IACd,MAAMqB,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC;MACA,MAAMC,QAAQ,GAAG;QACfC,IAAI,EAAE,MAAM;QACZC,aAAa,EAAE,cAAc;QAC7BC,mBAAmB,EAAE,SAAS;QAC9BC,cAAc,EAAE,QAAQ;QACxBC,eAAe,EAAE,IAAI;QACrBC,kBAAkB,EAAE,KAAK;QACzBC,aAAa,EAAE;MACjB,CAAC;MAED,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAM5B,KAAK,CAAC6B,IAAI,CAAC,mCAAmC,EAAET,QAAQ,CAAC;QAChF,MAAM;UAAEU;QAAK,CAAC,GAAGF,QAAQ,CAACG,IAAI;;QAE9B;QACA,MAAMC,YAAY,GAAGF,IAAI,CAACG,KAAK,CAAC,IAAI,CAAC,CAACC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,CAAC,CAACC,GAAG,CAACF,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC;QACjGE,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEP,YAAY,CAAC,CAAC,CAAC;;QAE1CvB,cAAc,CAACuB,YAAY,CAAC;;QAE5B;QACArB,WAAW,CAAC6B,YAAY,IAAI;UAC1B,MAAMC,WAAW,GAAG,CAAC,GAAGD,YAAY,CAAC;UACrCC,WAAW,CAAC,CAAC,CAAC,GAAG;YACf,GAAGA,WAAW,CAAC,CAAC,CAAC;YACjB5B,KAAK,EAAEmB,YAAY,CAACK,GAAG,CAACF,IAAI,KAAK;cAAEvB,KAAK,EAAEuB;YAAK,CAAC,CAAC;UACnD,CAAC;UACD,OAAOM,WAAW;QACpB,CAAC,CAAC;MACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdJ,OAAO,CAACI,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDvB,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMwB,YAAY,GAAG,GAAG,CAAC,CAAC;;EAE1B,MAAMC,MAAM,GAAGA,CAACC,SAAS,EAAEC,KAAK,KAAK;IAAA,IAAAC,qBAAA;IACnC,MAAMC,SAAS,GAAGzC,aAAa,CAAC0C,OAAO,CAACH,KAAK,CAAC;IAC9C,IAAI,CAACE,SAAS,EAAE,OAAO,CAAC;;IAExB,MAAME,SAAS,GAAG,EAAAH,qBAAA,GAAAC,SAAS,CAACG,aAAa,CAAC,gBAAgB,CAAC,cAAAJ,qBAAA,uBAAzCA,qBAAA,CAA2CK,WAAW,KAAI,CAAC;IAC7E,MAAMC,UAAU,GAAGH,SAAS,IAAIxC,QAAQ,CAACoC,KAAK,CAAC,CAACjC,KAAK,CAACG,MAAM,IAAI,CAAC,CAAC;IAElE,IAAI6B,SAAS,KAAK,MAAM,EAAE;MACxBG,SAAS,CAACM,UAAU,IAAIX,YAAY,CAAC,CAAC;;MAEtC;MACA,IAAIK,SAAS,CAACM,UAAU,GAAG,CAAC,EAAE;QAC5BN,SAAS,CAACM,UAAU,GAAGD,UAAU,GAAGL,SAAS,CAACO,WAAW,CAAC,CAAC;MAC7D;IACF,CAAC,MAAM;MACLP,SAAS,CAACM,UAAU,IAAIX,YAAY,CAAC,CAAC;;MAEtC;MACA,IAAIK,SAAS,CAACM,UAAU,IAAID,UAAU,GAAGL,SAAS,CAACO,WAAW,EAAE;QAC9DP,SAAS,CAACM,UAAU,GAAG,CAAC,CAAC,CAAC;MAC5B;IACF;EACF,CAAC;EAED,oBACEpD,OAAA,CAAAE,SAAA;IAAAoD,QAAA,EACG9C,QAAQ,CAAC2B,GAAG,CAAC,CAACoB,OAAO,EAAEX,KAAK,kBAC3B5C,OAAA;MAASwD,SAAS,EAAC,kBAAkB;MAAAF,QAAA,gBACnCtD,OAAA;QAAIwD,SAAS,EAAC,gBAAgB;QAAAF,QAAA,EAAEC,OAAO,CAAC7C;MAAK;QAAA+C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACnD5D,OAAA;QAAKwD,SAAS,EAAC,oBAAoB;QAAAF,QAAA,gBACjCtD,OAAA;UACEwD,SAAS,EAAC,sBAAsB;UAChCK,OAAO,EAAEA,CAAA,KAAMnB,MAAM,CAAC,MAAM,EAAEE,KAAK,CAAE;UAAAU,QAAA,EACtC;QAED;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACT5D,OAAA;UACEwD,SAAS,EAAC,kBAAkB;UAC5BM,GAAG,EAAGC,EAAE,IAAM1D,aAAa,CAAC0C,OAAO,CAACH,KAAK,CAAC,GAAGmB,EAAI;UAAAT,QAAA,EAEhDC,OAAO,CAAC5C,KAAK,CAACwB,GAAG,CAAC,CAACF,IAAI,EAAE+B,SAAS,kBACjChE,OAAA;YAAKwD,SAAS,EAAC,eAAe;YAAAF,QAAA,eAC5BtD,OAAA;cAAKwD,SAAS,EAAC,gBAAgB;cAAAF,QAAA,EAAErB,IAAI,CAACvB;YAAK;cAAA+C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM;UAAC,GADhBI,SAAS;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAExC,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACN5D,OAAA;UACEwD,SAAS,EAAC,sBAAsB;UAChCK,OAAO,EAAEA,CAAA,KAAMnB,MAAM,CAAC,OAAO,EAAEE,KAAK,CAAE;UAAAU,QAAA,EACvC;QAED;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA,GAzBmChB,KAAK;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OA0BvC,CACV;EAAC,gBACF,CAAC;AAEP;AAACxD,EAAA,CA/GQD,eAAe;AAAA8D,EAAA,GAAf9D,eAAe;AAiHxB,eAAeA,eAAe;AAAC,IAAA8D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}