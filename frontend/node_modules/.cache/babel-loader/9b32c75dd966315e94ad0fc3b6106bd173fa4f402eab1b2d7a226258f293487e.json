{"ast":null,"code":"// src/components/Header.js\nimport'../styles/Header.css';import useState from'react';import React from'react';import{useNavigate}from'react-router-dom';function Header(_ref){let{isLoggedIn,setIsLoggedIn,onHomeClick,onCommunityClick,onMyPageClick,onLoginClick,onSignupClick,onSurveyClick,onRecommendationCourseClick}=_ref;const navigate=useNavigate();const[isDropdownOpen,setIsDropdownOpen]=React.useState(false);const[profileImagePath,setProfileImagePath]=React.useState('');// const [isLoggedIn, setIsLoggedIn] = React.useState(!!sessionStorage.getItem(\"ID\"));\n// const navigate = useNavigate();\nconst id=sessionStorage.getItem(\"ID\");// 로그인 상태 확인\nReact.useEffect(()=>{console.log(\"Session ID found:\",id);setIsLoggedIn(!!id);},[window.location.pathname]);// URL 변경 시 상태 동기화\n//유저 프로필 요청\nReact.useEffect(()=>{if(id){fetch(`/userProfile/${id}`,{// API 요청\nmethod:'GET',headers:{'Content-Type':'application/json'// 필요시 Authorization 헤더 추가\n// 'Authorization': `Bearer ${sessionStorage.getItem('token')}`\n}}).then(response=>{if(!response.ok){throw new Error('Failed to fetch user data');}return response.json();}).then(data=>{setProfileImagePath(data.profileImagePath);// 사용자 이름 설정\nconsole.log('profileImagePath : '+data.profileImagePath);console.log(\"Profile Image Path:\",profileImagePath);}).catch(error=>{console.error('Error fetching user data:',error);});}},[id]);const toggleDropdown=()=>{setIsDropdownOpen(!isDropdownOpen);};const closeDropdown=event=>{if(!event.target.closest('.profile-icon')&&isDropdownOpen){setIsDropdownOpen(false);}};const handleLogout=()=>{sessionStorage.removeItem(\"token\");sessionStorage.removeItem(\"ID\");setIsLoggedIn(false);onHomeClick();navigate('/');};React.useEffect(()=>{document.addEventListener('click',closeDropdown);return()=>{document.removeEventListener('click',closeDropdown);};},[isDropdownOpen]);return/*#__PURE__*/React.createElement('header',{className:'header'},/*#__PURE__*/React.createElement('div',{className:'left-group'},/*#__PURE__*/React.createElement('div',{className:'logo',onClick:e=>{e.preventDefault();onHomeClick();navigate('/');}},/*#__PURE__*/React.createElement('img',{src:'/asset/image.jpeg',alt:'어디갈래 로고'})),/*#__PURE__*/React.createElement('nav',{className:'nav'},/*#__PURE__*/React.createElement('a',{href:'#',onClick:e=>{e.preventDefault();onCommunityClick();navigate('/community');}},'커뮤니티'),isLoggedIn?//로그인 되어 있는 경우\n[/*#__PURE__*/React.createElement('a',{href:'#',onClick:e=>{e.preventDefault();onRecommendationCourseClick();navigate('/recommendation-course');}},'사용자 맞춤 코스 추천')]://로그인 안되어 있는 경우\n[/*#__PURE__*/React.createElement('a',{href:'#',onClick:e=>{e.preventDefault();onRecommendationCourseClick();navigate('/login');}},'사용자 맞춤 코스 추천')])),/*#__PURE__*/React.createElement('div',{className:'right-group'},//로그아웃 상태\n!isLoggedIn?[/*#__PURE__*/React.createElement('a',{key:'login',// 고유한 key 추가\nhref:'#',onClick:e=>{e.preventDefault();onLoginClick();navigate('/login');},className:'auth-link'},'로그인'),/*#__PURE__*/React.createElement('a',{key:'signup',// 고유한 key 추가\nhref:'#',onClick:e=>{e.preventDefault();onSignupClick();navigate('/signup');},className:'auth-link'},'회원가입')]//로그인 상태\n:[/*#__PURE__*/React.createElement('a',{key:'logout',// 고유한 key 추가\nhref:'#',onClick:e=>{e.preventDefault();handleLogout();},className:'auth-link'},'로그아웃'),/*#__PURE__*/React.createElement('div',{key:'profile-icon',// 고유한 key 추가\nclassName:'profile-icon',onClick:toggleDropdown},/*#__PURE__*/React.createElement('img',{key:'profile-img',// 고유한 key 추가\n// 절대경로 : resources/static/ 에서 시작\nsrc:'/asset/Images/userProfile/'+profileImagePath,alt:'/asset/Images/altImage/alt.png'}),isDropdownOpen&&/*#__PURE__*/React.createElement('div',{className:'dropdown-menu',key:'dropdown-menu'},/*#__PURE__*/// 고유한 key 추가\nReact.createElement('a',{key:'mypage',// 고유한 key 추가\nhref:'#',onClick:e=>{e.preventDefault();onMyPageClick();navigate('/mypage');}},'마이페이지'),/*#__PURE__*/React.createElement('a',{key:'settings',// 고유한 key 추가\nhref:'#',onClick:()=>alert('설정 클릭됨')},'설정')))]));}export default Header;","map":{"version":3,"names":["useState","React","useNavigate","Header","_ref","isLoggedIn","setIsLoggedIn","onHomeClick","onCommunityClick","onMyPageClick","onLoginClick","onSignupClick","onSurveyClick","onRecommendationCourseClick","navigate","isDropdownOpen","setIsDropdownOpen","profileImagePath","setProfileImagePath","id","sessionStorage","getItem","useEffect","console","log","window","location","pathname","fetch","method","headers","then","response","ok","Error","json","data","catch","error","toggleDropdown","closeDropdown","event","target","closest","handleLogout","removeItem","document","addEventListener","removeEventListener","createElement","className","onClick","e","preventDefault","src","alt","href","key","alert"],"sources":["C:/Users/pc/Desktop/Hotsix/frontend/src/components/Header.js"],"sourcesContent":["// src/components/Header.js\r\nimport '../styles/Header.css'; \r\nimport  useState  from 'react';\r\nimport React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\nfunction Header({ isLoggedIn, setIsLoggedIn,onHomeClick, onCommunityClick, onMyPageClick, onLoginClick, onSignupClick, onSurveyClick,onRecommendationCourseClick }) {\r\n\r\n  const navigate = useNavigate();\r\n  const [isDropdownOpen, setIsDropdownOpen] = React.useState(false);\r\n  const [profileImagePath, setProfileImagePath] = React.useState('');\r\n  // const [isLoggedIn, setIsLoggedIn] = React.useState(!!sessionStorage.getItem(\"ID\"));\r\n  // const navigate = useNavigate();\r\n\r\n  const id = sessionStorage.getItem(\"ID\");\r\n  // 로그인 상태 확인\r\n  React.useEffect(() => {\r\n    console.log(\"Session ID found:\", id);\r\n    setIsLoggedIn(!!id);\r\n  }, [window.location.pathname]); // URL 변경 시 상태 동기화\r\n\r\n  //유저 프로필 요청\r\n  React.useEffect(() => {\r\n      if(id){\r\n        fetch(`/userProfile/${id}`, { // API 요청\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 필요시 Authorization 헤더 추가\r\n                // 'Authorization': `Bearer ${sessionStorage.getItem('token')}`\r\n            },\r\n    } )\r\n        .then(response => {\r\n            if (!response.ok) {\r\n                throw new Error('Failed to fetch user data');\r\n            }\r\n            return response.json();\r\n        })\r\n        .then(data => {\r\n            setProfileImagePath(data.profileImagePath); // 사용자 이름 설정\r\n            console.log('profileImagePath : ' + data.profileImagePath);\r\n            console.log(\"Profile Image Path:\", profileImagePath);\r\n        })\r\n        .catch(error => {\r\n            console.error('Error fetching user data:', error);\r\n        })\r\n      }\r\n    }, [id]);\r\n\r\n\r\n\r\n  const toggleDropdown = () => {\r\n    setIsDropdownOpen(!isDropdownOpen);\r\n  };\r\n\r\n\r\n  const closeDropdown = (event) => {\r\n    if (!event.target.closest('.profile-icon') && isDropdownOpen) {\r\n      setIsDropdownOpen(false);\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    sessionStorage.removeItem(\"token\");\r\n    sessionStorage.removeItem(\"ID\");\r\n    setIsLoggedIn(false);\r\n    onHomeClick();\r\n    navigate('/');\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    document.addEventListener('click', closeDropdown);\r\n    return () => {\r\n      document.removeEventListener('click', closeDropdown);\r\n    };\r\n  }, [isDropdownOpen]);\r\n\r\n  return (\r\n    React.createElement('header', { className: 'header' },\r\n      React.createElement('div', { className: 'left-group' },\r\n        React.createElement('div', { className: 'logo', onClick: (e) => { e.preventDefault(); onHomeClick();  navigate('/'); } },\r\n          React.createElement('img', { src: '/asset/image.jpeg', alt: '어디갈래 로고' })\r\n        ),\r\n        React.createElement('nav', { className: 'nav' },\r\n          React.createElement('a', { href: '#', onClick: (e) => { e.preventDefault(); onCommunityClick(); navigate('/community'); } }, '커뮤니티'),\r\n            isLoggedIn ?\r\n            //로그인 되어 있는 경우\r\n            [\r\n              React.createElement('a', { href: '#', onClick: (e) => { e.preventDefault(); onRecommendationCourseClick();navigate('/recommendation-course'); }}, '사용자 맞춤 코스 추천')\r\n            ] : \r\n            //로그인 안되어 있는 경우\r\n            [\r\n              React.createElement('a', { href: '#', onClick: (e) => { e.preventDefault(); onRecommendationCourseClick();navigate('/login'); }}, '사용자 맞춤 코스 추천')\r\n            ]\r\n        ),\r\n      ),\r\n      React.createElement('div', { className: 'right-group' },\r\n\r\n        //로그아웃 상태\r\n        !isLoggedIn ? [\r\n          React.createElement('a', {\r\n              key: 'login', // 고유한 key 추가\r\n              href: '#',\r\n              onClick: (e) => { e.preventDefault(); onLoginClick(); navigate('/login'); },\r\n              className: 'auth-link'\r\n          }, '로그인'),\r\n          React.createElement('a', {\r\n              key: 'signup', // 고유한 key 추가\r\n              href: '#',\r\n              onClick: (e) => { e.preventDefault();onSignupClick();  navigate('/signup'); },\r\n              className: 'auth-link'\r\n          }, '회원가입')\r\n        ] \r\n\r\n        //로그인 상태\r\n        : [\r\n          React.createElement('a', {\r\n              key: 'logout', // 고유한 key 추가\r\n              href: '#',\r\n              onClick: (e) => { e.preventDefault();\r\n              handleLogout();\r\n              },\r\n              className: 'auth-link'\r\n          }, '로그아웃'),\r\n          React.createElement('div', {\r\n              key: 'profile-icon', // 고유한 key 추가\r\n              className: 'profile-icon',\r\n              onClick: toggleDropdown\r\n          },\r\n          React.createElement('img', {\r\n              key: 'profile-img', // 고유한 key 추가\r\n              // 절대경로 : resources/static/ 에서 시작\r\n              src:  '/asset/Images/userProfile/' + profileImagePath,\r\n              alt: '/asset/Images/altImage/alt.png'\r\n          }),\r\n          isDropdownOpen &&\r\n          React.createElement('div', { className: 'dropdown-menu', key: 'dropdown-menu' }, // 고유한 key 추가\r\n              React.createElement('a', {\r\n                  key: 'mypage', // 고유한 key 추가\r\n                  href: '#',\r\n                  onClick: (e) => { e.preventDefault(); onMyPageClick(); navigate('/mypage');}\r\n                  },\r\n                  '마이페이지'),\r\n              React.createElement('a', {\r\n                  key: 'settings', // 고유한 key 추가\r\n                  href: '#',\r\n                  onClick: () => alert('설정 클릭됨')\r\n              },\r\n                  '설정')\r\n              )\r\n            )\r\n        ]\r\n        )\r\n    )\r\n    );\r\n  }\r\n  \r\n  export default Header;\r\n      "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}