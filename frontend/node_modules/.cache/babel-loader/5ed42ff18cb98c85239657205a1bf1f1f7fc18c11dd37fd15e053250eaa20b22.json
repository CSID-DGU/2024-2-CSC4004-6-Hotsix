{"ast":null,"code":"// src/components/ContentCarousel.js\nimport React,{useRef,useEffect,useState}from\"react\";import\"../styles/ContentCarousel.css\";import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function ContentCarousel(){const containerRefs=useRef([]);// sections 상태 관리\nconst[sections,setSections]=useState([{title:\"사용자 맞춤\",items:[]},{title:\"기념일 기념\",items:Array.from({length:10},(_,i)=>({title:`경궁 ${i+1}`}))},{title:\"인기 장소\",items:Array.from({length:10},(_,i)=>({title:`드라마 ${i+1}`}))},{title:\"계절별\",items:Array.from({length:10},(_,i)=>({title:`애니 ${i+1}`}))}]);// 에러 및 로딩 상태 추가\nconst[error,setError]=useState(null);const[loading,setLoading]=useState(true);useEffect(()=>{const fetchGptResponse=async()=>{// 실제 사용자 데이터로 대체하세요\nconst userInfo={mbti:'ISFP',location:'서울특별시 중구 퇴계로',budget:'10~20만원',requiredCourse:'카페, 영화',preferredCourse:'산책',activityPreference:'비선호',transportType:'대중교통'};try{const response=await axios.post('http://localhost:8080/ask',userInfo);console.log('GPT 응답 원본:',response.data);// 디버깅용\n// 응답 데이터 구조 확인\nlet responseText='';if(typeof response.data==='object'&&response.data.text){responseText=response.data.text;}else if(typeof response.data==='string'){responseText=response.data;}else{console.error(\"응답 데이터 형식이 예상과 다릅니다:\",response.data);setError(\"응답 데이터 형식이 올바르지 않습니다.\");setLoading(false);return;}console.log('GPT 응답 텍스트:',responseText);// 디버깅용\n// GPT 응답 파싱 (줄바꿈으로 분리)\nconst contentItems=responseText.split('\\n').filter(item=>item.trim()!=='').map(item=>item.trim());console.log('파싱된 GPT 응답:',contentItems);// 디버깅용\n// sections 상태 업데이트\nsetSections(prevSections=>{const newSections=[...prevSections];newSections[0]={...newSections[0],items:contentItems.map(item=>({title:item}))};return newSections;});setLoading(false);// 로딩 완료\n}catch(error){console.error(\"GPT 응답 가져오는 중 오류 발생:\",error);if(error.response){// 서버가 응답했지만 상태 코드가 2xx가 아닌 경우\nsetError(`서버 오류: ${error.response.status} - ${error.response.data}`);}else if(error.request){// 요청이 이루어졌으나 응답을 받지 못한 경우\nsetError(\"서버로부터 응답을 받지 못했습니다.\");}else{// 오류를 발생시킨 요청을 설정하는 중에 문제가 발생한 경우\nsetError(\"요청 설정 중 오류가 발생했습니다.\");}setLoading(false);}};fetchGptResponse();},[]);// 스크롤 이동량 설정\nconst scrollAmount=200;// 예시로 한 번에 200px씩 이동\nconst scroll=(direction,index)=>{var _container$querySelec;const container=containerRefs.current[index];if(!container)return;// 컨테이너가 없을 경우 대비\nconst itemWidth=((_container$querySelec=container.querySelector(\".carousel-item\"))===null||_container$querySelec===void 0?void 0:_container$querySelec.offsetWidth)||0;const totalWidth=itemWidth*(sections[index].items.length||0);if(direction==='left'){container.scrollLeft-=scrollAmount;// 왼쪽으로 스크롤\n// 처음에 도달하면 끝으로 돌아가도록 설정\nif(container.scrollLeft<0){container.scrollLeft=totalWidth-container.clientWidth;// 끝으로 이동\n}}else{container.scrollLeft+=scrollAmount;// 오른쪽으로 스크롤\n// 끝에 도달하면 처음으로 돌아가도록 설정\nif(container.scrollLeft>=totalWidth-container.clientWidth){container.scrollLeft=0;// 처음으로 돌아감\n}}};return/*#__PURE__*/_jsxs(React.Fragment,{children:[loading&&/*#__PURE__*/_jsx(\"div\",{className:\"loading-message\",children:\"Loading...\"}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error}),!loading&&!error&&sections.map((section,index)=>/*#__PURE__*/_jsxs(\"section\",{className:\"carousel-section\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"carousel-title\",children:section.title}),/*#__PURE__*/_jsxs(\"div\",{className:\"carousel-container\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"carousel-button prev\",onClick:()=>scroll(\"left\",index),children:\"\\u2039\"}),/*#__PURE__*/_jsx(\"div\",{className:\"carousel-content\",ref:el=>containerRefs.current[index]=el,children:section.items.map((item,itemIndex)=>/*#__PURE__*/_jsx(\"div\",{className:\"carousel-item\",children:/*#__PURE__*/_jsx(\"div\",{className:\"content-number\",children:item.title})},itemIndex))}),/*#__PURE__*/_jsx(\"button\",{className:\"carousel-button next\",onClick:()=>scroll(\"right\",index),children:\"\\u203A\"})]})]},index))]});}export default ContentCarousel;","map":{"version":3,"names":["React","useRef","useEffect","useState","axios","jsx","_jsx","jsxs","_jsxs","ContentCarousel","containerRefs","sections","setSections","title","items","Array","from","length","_","i","error","setError","loading","setLoading","fetchGptResponse","userInfo","mbti","location","budget","requiredCourse","preferredCourse","activityPreference","transportType","response","post","console","log","data","responseText","text","contentItems","split","filter","item","trim","map","prevSections","newSections","status","request","scrollAmount","scroll","direction","index","_container$querySelec","container","current","itemWidth","querySelector","offsetWidth","totalWidth","scrollLeft","clientWidth","Fragment","children","className","section","onClick","ref","el","itemIndex"],"sources":["C:/Users/hsson/IdeaProjects/2024-2-CSC4004-6-Hotsix/frontend/src/components/ContentCarousel.js"],"sourcesContent":["// src/components/ContentCarousel.js\r\nimport React, { useRef, useEffect, useState } from \"react\";\r\nimport \"../styles/ContentCarousel.css\";\r\nimport axios from 'axios';\r\n\r\nfunction ContentCarousel() {\r\n  const containerRefs = useRef([]);\r\n\r\n  // sections 상태 관리\r\n  const [sections, setSections] = useState([\r\n    { title: \"사용자 맞춤\", items: [] },\r\n    { title: \"기념일 기념\", items: Array.from({ length: 10 }, (_, i) => ({ title: `경궁 ${i + 1}` })) },\r\n    { title: \"인기 장소\", items: Array.from({ length: 10 }, (_, i) => ({ title: `드라마 ${i + 1}` })) },\r\n    { title: \"계절별\", items: Array.from({ length: 10 }, (_, i) => ({ title: `애니 ${i + 1}` })) },\r\n  ]);\r\n\r\n  // 에러 및 로딩 상태 추가\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchGptResponse = async () => {\r\n      // 실제 사용자 데이터로 대체하세요\r\n      const userInfo = {\r\n        mbti: 'ISFP',\r\n        location: '서울특별시 중구 퇴계로',\r\n        budget: '10~20만원',\r\n        requiredCourse: '카페, 영화',\r\n        preferredCourse: '산책',\r\n        activityPreference: '비선호',\r\n        transportType: '대중교통',\r\n      };\r\n\r\n      try {\r\n        const response = await axios.post('http://localhost:8080/ask', userInfo);\r\n        console.log('GPT 응답 원본:', response.data); // 디버깅용\r\n\r\n        // 응답 데이터 구조 확인\r\n        let responseText = '';\r\n        if (typeof response.data === 'object' && response.data.text) {\r\n          responseText = response.data.text;\r\n        } else if (typeof response.data === 'string') {\r\n          responseText = response.data;\r\n        } else {\r\n          console.error(\"응답 데이터 형식이 예상과 다릅니다:\", response.data);\r\n          setError(\"응답 데이터 형식이 올바르지 않습니다.\");\r\n          setLoading(false);\r\n          return;\r\n        }\r\n\r\n        console.log('GPT 응답 텍스트:', responseText); // 디버깅용\r\n\r\n        // GPT 응답 파싱 (줄바꿈으로 분리)\r\n        const contentItems = responseText.split('\\n').filter(item => item.trim() !== '').map(item => item.trim());\r\n        console.log('파싱된 GPT 응답:', contentItems); // 디버깅용\r\n\r\n        // sections 상태 업데이트\r\n        setSections(prevSections => {\r\n          const newSections = [...prevSections];\r\n          newSections[0] = {\r\n            ...newSections[0],\r\n            items: contentItems.map(item => ({ title: item })),\r\n          };\r\n          return newSections;\r\n        });\r\n        setLoading(false); // 로딩 완료\r\n      } catch (error) {\r\n        console.error(\"GPT 응답 가져오는 중 오류 발생:\", error);\r\n        if (error.response) {\r\n          // 서버가 응답했지만 상태 코드가 2xx가 아닌 경우\r\n          setError(`서버 오류: ${error.response.status} - ${error.response.data}`);\r\n        } else if (error.request) {\r\n          // 요청이 이루어졌으나 응답을 받지 못한 경우\r\n          setError(\"서버로부터 응답을 받지 못했습니다.\");\r\n        } else {\r\n          // 오류를 발생시킨 요청을 설정하는 중에 문제가 발생한 경우\r\n          setError(\"요청 설정 중 오류가 발생했습니다.\");\r\n        }\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchGptResponse();\r\n  }, []);\r\n\r\n  // 스크롤 이동량 설정\r\n  const scrollAmount = 200; // 예시로 한 번에 200px씩 이동\r\n\r\n  const scroll = (direction, index) => {\r\n    const container = containerRefs.current[index];\r\n    if (!container) return; // 컨테이너가 없을 경우 대비\r\n\r\n    const itemWidth = container.querySelector(\".carousel-item\")?.offsetWidth || 0;\r\n    const totalWidth = itemWidth * (sections[index].items.length || 0);\r\n\r\n    if (direction === 'left') {\r\n      container.scrollLeft -= scrollAmount; // 왼쪽으로 스크롤\r\n\r\n      // 처음에 도달하면 끝으로 돌아가도록 설정\r\n      if (container.scrollLeft < 0) {\r\n        container.scrollLeft = totalWidth - container.clientWidth; // 끝으로 이동\r\n      }\r\n    } else {\r\n      container.scrollLeft += scrollAmount; // 오른쪽으로 스크롤\r\n\r\n      // 끝에 도달하면 처음으로 돌아가도록 설정\r\n      if (container.scrollLeft >= totalWidth - container.clientWidth) {\r\n        container.scrollLeft = 0; // 처음으로 돌아감\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {loading && <div className=\"loading-message\">Loading...</div>}\r\n      {error && <div className=\"error-message\">{error}</div>}\r\n      {!loading && !error && sections.map((section, index) => (\r\n        <section className=\"carousel-section\" key={index}>\r\n          <h2 className=\"carousel-title\">{section.title}</h2>\r\n          <div className=\"carousel-container\">\r\n            <button\r\n              className=\"carousel-button prev\"\r\n              onClick={() => scroll(\"left\", index)}\r\n            >\r\n              ‹\r\n            </button>\r\n            <div\r\n              className=\"carousel-content\"\r\n              ref={(el) => (containerRefs.current[index] = el)}\r\n            >\r\n              {section.items.map((item, itemIndex) => (\r\n                <div className=\"carousel-item\" key={itemIndex}>\r\n                  <div className=\"content-number\">{item.title}</div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <button\r\n              className=\"carousel-button next\"\r\n              onClick={() => scroll(\"right\", index)}\r\n            >\r\n              ›\r\n            </button>\r\n          </div>\r\n        </section>\r\n      ))}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default ContentCarousel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}