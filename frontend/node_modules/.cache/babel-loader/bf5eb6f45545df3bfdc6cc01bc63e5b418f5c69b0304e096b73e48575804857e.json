{"ast":null,"code":"var _s = $RefreshSig$();\n// src/components/Header.js\nimport '../styles/Header.css';\nimport useState from 'react';\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nfunction Header({\n  isLoggedIn,\n  setIsLoggedIn,\n  onHomeClick,\n  onCommunityClick,\n  onMyPageClick,\n  onLoginClick,\n  onSignupClick,\n  onSurveyClick,\n  onRecommendationCourseClick\n}) {\n  _s();\n  const navigate = useNavigate();\n  const [isDropdownOpen, setIsDropdownOpen] = React.useState(false);\n  // const [isLoggedIn, setIsLoggedIn] = React.useState(!!sessionStorage.getItem(\"ID\"));\n  // const navigate = useNavigate();\n\n  // 로그인 상태 확인\n  React.useEffect(() => {\n    const Id = sessionStorage.getItem(\"ID\");\n    console.log(\"Session ID found:\", Id);\n    setIsLoggedIn(!!Id);\n  }, [window.location.pathname]); // URL 변경 시 상태 동기화\n\n  const toggleDropdown = () => {\n    setIsDropdownOpen(!isDropdownOpen);\n  };\n  const closeDropdown = event => {\n    if (!event.target.closest('.profile-icon') && isDropdownOpen) {\n      setIsDropdownOpen(false);\n    }\n  };\n  const handleLogout = () => {\n    sessionStorage.removeItem(\"token\");\n    sessionStorage.removeItem(\"ID\");\n    setIsLoggedIn(false);\n    onHomeClick();\n    navigate('/');\n  };\n  React.useEffect(() => {\n    document.addEventListener('click', closeDropdown);\n    return () => {\n      document.removeEventListener('click', closeDropdown);\n    };\n  }, [isDropdownOpen]);\n  return /*#__PURE__*/React.createElement('header', {\n    className: 'header'\n  }, /*#__PURE__*/React.createElement('div', {\n    className: 'left-group'\n  }, /*#__PURE__*/React.createElement('div', {\n    className: 'logo',\n    onClick: e => {\n      e.preventDefault();\n      onHomeClick();\n      navigate('/');\n    }\n  }, /*#__PURE__*/React.createElement('img', {\n    src: '../asset/Images/image.jpeg',\n    alt: '어디갈래 로고'\n  })), /*#__PURE__*/React.createElement('nav', {\n    className: 'nav'\n  }, /*#__PURE__*/React.createElement('a', {\n    href: '#',\n    onClick: e => {\n      e.preventDefault();\n      onCommunityClick();\n      navigate('/community');\n    }\n  }, '커뮤니티'), isLoggedIn ?\n  //로그인 되어 있는 경우\n  [/*#__PURE__*/React.createElement('a', {\n    href: '#',\n    onClick: e => {\n      e.preventDefault();\n      onRecommendationCourseClick();\n      navigate('/recommendation-course');\n    }\n  }, '사용자 맞춤 코스 추천')] :\n  //로그인 안되어 있는 경우\n  [/*#__PURE__*/React.createElement('a', {\n    href: '#',\n    onClick: e => {\n      e.preventDefault();\n      onRecommendationCourseClick();\n      navigate('/login');\n    }\n  }, '사용자 맞춤 코스 추천')])), /*#__PURE__*/React.createElement('div', {\n    className: 'right-group'\n  }, !isLoggedIn ? [/*#__PURE__*/React.createElement('a', {\n    key: 'login',\n    // 고유한 key 추가\n    href: '#',\n    onClick: e => {\n      e.preventDefault();\n      onLoginClick();\n      navigate('/login');\n    },\n    className: 'auth-link'\n  }, '로그인'), /*#__PURE__*/React.createElement('a', {\n    key: 'signup',\n    // 고유한 key 추가\n    href: '#',\n    onClick: e => {\n      e.preventDefault();\n      onSignupClick();\n      navigate('/signup');\n    },\n    className: 'auth-link'\n  }, '회원가입')] : [/*#__PURE__*/React.createElement('a', {\n    key: 'logout',\n    // 고유한 key 추가\n    href: '#',\n    onClick: e => {\n      e.preventDefault();\n      handleLogout();\n    },\n    className: 'auth-link'\n  }, '로그아웃'), /*#__PURE__*/React.createElement('div', {\n    key: 'profile-icon',\n    // 고유한 key 추가\n    className: 'profile-icon',\n    onClick: toggleDropdown\n  }, /*#__PURE__*/React.createElement('img', {\n    key: 'profile-img',\n    // 고유한 key 추가\n    src: '../../userProfile/test.png ',\n    alt: ''\n  }), isDropdownOpen && /*#__PURE__*/React.createElement('div', {\n    className: 'dropdown-menu',\n    key: 'dropdown-menu'\n  },\n  /*#__PURE__*/\n  // 고유한 key 추가\n  React.createElement('a', {\n    key: 'mypage',\n    // 고유한 key 추가\n    href: '#',\n    onClick: e => {\n      e.preventDefault();\n      onMyPageClick();\n      navigate('/mypage');\n    }\n  }, '마이페이지'), /*#__PURE__*/React.createElement('a', {\n    key: 'settings',\n    // 고유한 key 추가\n    href: '#',\n    onClick: () => alert('설정 클릭됨')\n  }, '설정')))]));\n}\n_s(Header, \"m4gB2xZ2CgarFeFMteISl2Baiso=\", false, function () {\n  return [useNavigate];\n});\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["useState","React","useNavigate","Header","isLoggedIn","setIsLoggedIn","onHomeClick","onCommunityClick","onMyPageClick","onLoginClick","onSignupClick","onSurveyClick","onRecommendationCourseClick","_s","navigate","isDropdownOpen","setIsDropdownOpen","useEffect","Id","sessionStorage","getItem","console","log","window","location","pathname","toggleDropdown","closeDropdown","event","target","closest","handleLogout","removeItem","document","addEventListener","removeEventListener","createElement","className","onClick","e","preventDefault","src","alt","href","key","alert","_c","$RefreshReg$"],"sources":["/Users/jinmyeonghun/Desktop/3-2/공소/2024-2-CSC4004-6-Hotsix/frontend/src/components/Header.js"],"sourcesContent":["// src/components/Header.js\nimport '../styles/Header.css'; \nimport  useState  from 'react';\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n\nfunction Header({ isLoggedIn, setIsLoggedIn,onHomeClick, onCommunityClick, onMyPageClick, onLoginClick, onSignupClick, onSurveyClick,onRecommendationCourseClick }) {\n\n  const navigate = useNavigate();\n  const [isDropdownOpen, setIsDropdownOpen] = React.useState(false);\n  // const [isLoggedIn, setIsLoggedIn] = React.useState(!!sessionStorage.getItem(\"ID\"));\n  // const navigate = useNavigate();\n\n// 로그인 상태 확인\nReact.useEffect(() => {\n  const Id = sessionStorage.getItem(\"ID\");\n  console.log(\"Session ID found:\", Id);\n  setIsLoggedIn(!!Id);\n}, [window.location.pathname]); // URL 변경 시 상태 동기화\n\n  const toggleDropdown = () => {\n      setIsDropdownOpen(!isDropdownOpen);\n};\n\nconst closeDropdown = (event) => {\n  if (!event.target.closest('.profile-icon') && isDropdownOpen) {\n    setIsDropdownOpen(false);\n  }\n};\n\nconst handleLogout = () => {\n  sessionStorage.removeItem(\"token\");\n  sessionStorage.removeItem(\"ID\");\n  setIsLoggedIn(false);\n  onHomeClick();\n  navigate('/');\n};\n\nReact.useEffect(() => {\n  document.addEventListener('click', closeDropdown);\n  return () => {\n    document.removeEventListener('click', closeDropdown);\n  };\n}, [isDropdownOpen]);\n\nreturn (\n  React.createElement('header', { className: 'header' },\n    React.createElement('div', { className: 'left-group' },\n      React.createElement('div', { className: 'logo', onClick: (e) => { e.preventDefault(); onHomeClick();  navigate('/'); } },\n        React.createElement('img', { src: '../asset/Images/image.jpeg', alt: '어디갈래 로고' })\n      ),\n      React.createElement('nav', { className: 'nav' },\n        React.createElement('a', { href: '#', onClick: (e) => { e.preventDefault(); onCommunityClick(); navigate('/community'); } }, '커뮤니티'),\n          isLoggedIn ?\n          //로그인 되어 있는 경우\n          [\n            React.createElement('a', { href: '#', onClick: (e) => { e.preventDefault(); onRecommendationCourseClick();navigate('/recommendation-course'); }}, '사용자 맞춤 코스 추천')\n          ] : \n          //로그인 안되어 있는 경우\n          [\n            React.createElement('a', { href: '#', onClick: (e) => { e.preventDefault(); onRecommendationCourseClick();navigate('/login'); }}, '사용자 맞춤 코스 추천')\n          ]\n      ),\n    ),\n    React.createElement('div', { className: 'right-group' },\n      !isLoggedIn ? [\n        React.createElement('a', {\n            key: 'login', // 고유한 key 추가\n            href: '#',\n            onClick: (e) => { e.preventDefault(); onLoginClick(); navigate('/login'); },\n            className: 'auth-link'\n        }, '로그인'),\n        React.createElement('a', {\n            key: 'signup', // 고유한 key 추가\n            href: '#',\n            onClick: (e) => { e.preventDefault();onSignupClick();  navigate('/signup'); },\n            className: 'auth-link'\n        }, '회원가입')\n      ] : [\n        React.createElement('a', {\n            key: 'logout', // 고유한 key 추가\n            href: '#',\n            onClick: (e) => { e.preventDefault();\n            handleLogout();\n            },\n            className: 'auth-link'\n        }, '로그아웃'),\n        React.createElement('div', {\n            key: 'profile-icon', // 고유한 key 추가\n            className: 'profile-icon',\n            onClick: toggleDropdown\n        },\n        React.createElement('img', {\n            key: 'profile-img', // 고유한 key 추가\n            src: '../../userProfile/test.png ',\n            alt: ''\n        }),\n        isDropdownOpen &&\n        React.createElement('div', { className: 'dropdown-menu', key: 'dropdown-menu' }, // 고유한 key 추가\n            React.createElement('a', {\n                key: 'mypage', // 고유한 key 추가\n                href: '#',\n                onClick: (e) => { e.preventDefault(); onMyPageClick(); navigate('/mypage');}\n                },\n                '마이페이지'),\n            React.createElement('a', {\n                key: 'settings', // 고유한 key 추가\n                href: '#',\n                onClick: () => alert('설정 클릭됨')\n            },\n                '설정')\n            )\n          )\n       ]\n      )\n  )\n  );\n}\n  \n  export default Header;\n      "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}