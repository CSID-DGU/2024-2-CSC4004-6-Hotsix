{"ast":null,"code":"import React,{useRef,useEffect,useState}from\"react\";import\"../styles/ContentCarousel.css\";import axios from'axios';function ContentCarousel(){const containerRefs=useRef([]);const[gptResponse,setGptResponse]=useState([]);useEffect(()=>{const fetchGptResponse=async()=>{// 실제 사용자 데이터로 대체하세요\nconst userInfo={mbti:'ISFP',location:'서울특별시 중구 퇴계로',budget:'10~20만원',requiredCourse:'카페, 영화',preferredCourse:'산책',activityPreference:'비선호',transportType:'대중교통'};try{const response=await axios.post('http://localhost:8080/ask',userInfo);const responseText=response.data;// 응답 데이터 확인\nconsole.log('GPT 응답 원본:',responseText);// 디버깅용\n// GPT 응답 파싱\nconst contentItems=responseText.split(/[\\[\\]]/).filter(item=>item.trim()!==''&&item.trim()!==',').map(item=>item.trim());console.log('파싱된 GPT 응답:',contentItems);// 디버깅용\nsetGptResponse(contentItems);// GPT 응답을 사용하여 sections 상태 업데이트\nsetSections(prevSections=>{const newSections=[...prevSections];newSections[0]={...newSections[0],items:contentItems.map(item=>({title:item}))};return newSections;});}catch(error){console.error(\"GPT 응답 가져오는 중 오류 발생:\",error);}};fetchGptResponse();},[]);const[sections,setSections]=useState([{title:\"사용자 맞춤\",items:[]},{title:\"기념일 기념\",items:Array.from({length:10},(_,i)=>({title:`경복궁 ${i+1}`}))},{title:\"인기 장소\",items:Array.from({length:10},(_,i)=>({title:`드라마 ${i+1}`}))},{title:\"계절별\",items:Array.from({length:10},(_,i)=>({title:`애니 ${i+1}`}))}]);//  // GPT 응답을 '사용자 맞춤' 섹션의 items로 설정\n//  if (gptResponse.length > 0) {\n//    sections[0].items = gptResponse.map((item) => ({ title: item }));\n//  }\n// 스크롤 이동량 설정\nconst scrollAmount=200;// 예시로 한 번에 200px씩 이동\nconst scroll=(direction,index)=>{var _container$querySelec;const container=containerRefs.current[index];if(!container)return;// 컨테이너가 없을 경우 대비\nconst itemWidth=((_container$querySelec=container.querySelector(\".carousel-item\"))===null||_container$querySelec===void 0?void 0:_container$querySelec.offsetWidth)||0;const totalWidth=itemWidth*(sections[index].items.length||0);if(direction==='left'){container.scrollLeft-=scrollAmount;// 왼쪽으로 스크롤\n// 처음에 도달하면 끝으로 돌아가도록 설정\nif(container.scrollLeft<0){container.scrollLeft=totalWidth-container.clientWidth;// 끝으로 이동\n}}else{container.scrollLeft+=scrollAmount;// 오른쪽으로 스크롤\n// 끝에 도달하면 처음으로 돌아가도록 설정\nif(container.scrollLeft>=totalWidth-container.clientWidth){container.scrollLeft=0;// 처음으로 돌아감\n}}};return/*#__PURE__*/React.createElement(React.Fragment,null,sections.map((section,index)=>/*#__PURE__*/React.createElement(\"section\",{className:\"carousel-section\",key:index},/*#__PURE__*/React.createElement(\"h2\",{className:\"carousel-title\"},section.title),/*#__PURE__*/React.createElement(\"div\",{className:\"carousel-container\"},/*#__PURE__*/React.createElement(\"button\",{className:\"carousel-button prev\",onClick:()=>scroll(\"left\",index)},\"‹\"),/*#__PURE__*/React.createElement(\"div\",{className:\"carousel-content\",ref:el=>containerRefs.current[index]=el},section.items.map((item,itemIndex)=>/*#__PURE__*/React.createElement(\"div\",{className:\"carousel-item\",key:itemIndex},/*#__PURE__*/React.createElement(\"div\",{className:\"content-number\"},item.title)))),/*#__PURE__*/React.createElement(\"button\",{className:\"carousel-button next\",onClick:()=>scroll(\"right\",index)},\"›\")))));}export default ContentCarousel;","map":{"version":3,"names":["React","useRef","useEffect","useState","axios","ContentCarousel","containerRefs","gptResponse","setGptResponse","fetchGptResponse","userInfo","mbti","location","budget","requiredCourse","preferredCourse","activityPreference","transportType","response","post","responseText","data","console","log","contentItems","split","filter","item","trim","map","setSections","prevSections","newSections","items","title","error","sections","Array","from","length","_","i","scrollAmount","scroll","direction","index","_container$querySelec","container","current","itemWidth","querySelector","offsetWidth","totalWidth","scrollLeft","clientWidth","createElement","Fragment","section","className","key","onClick","ref","el","itemIndex"],"sources":["C:/Users/hsson/IdeaProjects/2024-2-CSC4004-6-Hotsix/frontend/src/components/ContentCarousel.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\r\nimport \"../styles/ContentCarousel.css\";\r\nimport axios from 'axios';\r\n\r\nfunction ContentCarousel() {\r\n  const containerRefs = useRef([]);\r\n  const [gptResponse, setGptResponse] = useState([]);\r\n\r\n\r\n  useEffect(() => {\r\n      const fetchGptResponse = async () => {\r\n        // 실제 사용자 데이터로 대체하세요\r\n        const userInfo = {\r\n          mbti: 'ISFP',\r\n          location: '서울특별시 중구 퇴계로',\r\n          budget: '10~20만원',\r\n          requiredCourse: '카페, 영화',\r\n          preferredCourse: '산책',\r\n          activityPreference: '비선호',\r\n          transportType: '대중교통',\r\n        };\r\n\r\n        try {\r\n          const response = await axios.post('http://localhost:8080/ask', userInfo);\r\n          const responseText = response.data; // 응답 데이터 확인\r\n          console.log('GPT 응답 원본:', responseText); // 디버깅용\r\n\r\n          // GPT 응답 파싱\r\n          const contentItems = responseText.split(/[\\[\\]]/).filter(item => item.trim() !== '' && item.trim() !== ',').map(item => item.trim());\r\n          console.log('파싱된 GPT 응답:', contentItems); // 디버깅용\r\n\r\n          setGptResponse(contentItems);\r\n\r\n           // GPT 응답을 사용하여 sections 상태 업데이트\r\n           setSections(prevSections => {\r\n            const newSections = [...prevSections];\r\n            newSections[0] = {\r\n               ...newSections[0],\r\n               items: contentItems.map(item => ({ title: item })),\r\n               };\r\n               return newSections;\r\n            });\r\n            } catch (error) {\r\n                console.error(\"GPT 응답 가져오는 중 오류 발생:\", error);\r\n              }\r\n            };\r\n\r\n      fetchGptResponse();\r\n  }, []);\r\n\r\n  const [sections, setSections] = useState([\r\n    { title: \"사용자 맞춤\", items: [] },\r\n    { title: \"기념일 기념\", items: Array.from({ length: 10 }, (_, i) => ({ title: `경복궁 ${i + 1}` })) },\r\n    { title: \"인기 장소\", items: Array.from({ length: 10 }, (_, i) => ({ title: `드라마 ${i + 1}` })) },\r\n    { title: \"계절별\", items: Array.from({ length: 10 }, (_, i) => ({ title: `애니 ${i + 1}` })) },\r\n  ]);\r\n\r\n//  // GPT 응답을 '사용자 맞춤' 섹션의 items로 설정\r\n//  if (gptResponse.length > 0) {\r\n//    sections[0].items = gptResponse.map((item) => ({ title: item }));\r\n//  }\r\n  // 스크롤 이동량 설정\r\n  const scrollAmount = 200; // 예시로 한 번에 200px씩 이동\r\n\r\n  const scroll = (direction, index) => {\r\n    const container = containerRefs.current[index];\r\n    if (!container) return; // 컨테이너가 없을 경우 대비\r\n\r\n     const itemWidth = container.querySelector(\".carousel-item\")?.offsetWidth || 0;\r\n     const totalWidth = itemWidth * (sections[index].items.length || 0);\r\n\r\n    if (direction === 'left') {\r\n      container.scrollLeft -= scrollAmount; // 왼쪽으로 스크롤\r\n\r\n      // 처음에 도달하면 끝으로 돌아가도록 설정\r\n      if (container.scrollLeft < 0) {\r\n        container.scrollLeft = totalWidth - container.clientWidth; // 끝으로 이동\r\n      }\r\n    } else {\r\n      container.scrollLeft += scrollAmount; // 오른쪽으로 스크롤\r\n\r\n      // 끝에 도달하면 처음으로 돌아가도록 설정\r\n      if (container.scrollLeft >= totalWidth - container.clientWidth) {\r\n        container.scrollLeft = 0; // 처음으로 돌아감\r\n      }\r\n    }\r\n  };\r\n\r\n  return React.createElement(\r\n    React.Fragment,\r\n    null,\r\n    sections.map((section, index) =>\r\n      React.createElement(\r\n        \"section\",\r\n        { className: \"carousel-section\", key: index },\r\n        React.createElement(\"h2\", { className: \"carousel-title\" }, section.title),\r\n        React.createElement(\r\n          \"div\",\r\n          { className: \"carousel-container\" },\r\n          React.createElement(\r\n            \"button\",\r\n            {\r\n              className: \"carousel-button prev\",\r\n              onClick: () => scroll(\"left\", index),\r\n            },\r\n            \"‹\"\r\n          ),\r\n          React.createElement(\r\n            \"div\",\r\n            {\r\n              className: \"carousel-content\",\r\n              ref: (el) => (containerRefs.current[index] = el),\r\n            },\r\n            section.items.map((item, itemIndex) =>\r\n              React.createElement(\r\n                \"div\",\r\n                { className: \"carousel-item\", key: itemIndex },\r\n                React.createElement(\"div\", { className: \"content-number\" }, item.title)\r\n              )\r\n            )\r\n          ),\r\n          React.createElement(\r\n            \"button\",\r\n            {\r\n              className: \"carousel-button next\",\r\n              onClick: () => scroll(\"right\", index),\r\n            },\r\n            \"›\"\r\n          )\r\n        )\r\n      )\r\n    )\r\n  );\r\n}\r\n\r\nexport default ContentCarousel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}