{"ast":null,"code":"var _s = $RefreshSig$();\n// src/components/Login.js\nimport React from 'react';\n// import { useNavigate } from 'react-router-dom';\nimport '../styles/Login.css';\nfunction Login() {\n  _s();\n  //   const navigate = useNavigate(); // useNavigate 추가\n  // 폼 리셋 함수 (비밀번호만 비우기로 수정)\n  const resetForm = () => {\n    // setId('');\n    setPassword('');\n  };\n\n  //변수\n  const [id, setId] = React.useState('');\n  const [password, setPassword] = React.useState('');\n\n  //handleChange\n  const handleIdChange = event => setId(event.target.value);\n  const handlePasswordChange = event => setPassword(event.target.value);\n\n  //handleSubmit\n  const handleSubmit = async event => {\n    event.preventDefault();\n    // const data = { id,password };\n\n    try {\n      const response = await fetch('/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id,\n          password\n        })\n      });\n      // 응답 상태 확인\n      if (!response.ok) {\n        const errorData = await response.json();\n        if (errorData.error === \"ID does not exist\" || errorData.error === \"Invalid Password\") {\n          window.alert(\"아이디 또는 비밀번호가 틀렸습니다.\");\n        } else {\n          console.error(\"Error:\", errorData.error);\n          window.alert(\"Error: \" + errorData.error);\n        }\n        resetForm();\n        return;\n      } else {\n        // 성공 처리\n        const responseData = await response.json();\n        sessionStorage.setItem(\"token\", responseData.token); // JWT 저장\n        sessionStorage.setItem(\"ID\", id); //Id 저장\n        window.location.href = '/';\n      }\n    } catch (error) {\n      console.error(\"Unexpected error:\", error);\n      window.alert(\"Unexpected error occurred. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/React.createElement('div', {\n    className: 'login-container',\n    onSubmit: handleSubmit\n  }, /*#__PURE__*/React.createElement('h2', null, '로그인'), /*#__PURE__*/React.createElement('form', {\n    className: 'login-form'\n  }, /*#__PURE__*/React.createElement('label', null, 'ID: '), /*#__PURE__*/React.createElement('input', {\n    type: 'text',\n    name: 'id',\n    value: id,\n    onChange: handleIdChange,\n    required: true\n  }), /*#__PURE__*/React.createElement('label', null, '비밀번호: '), /*#__PURE__*/React.createElement('input', {\n    type: 'password',\n    name: 'password',\n    value: password,\n    onChange: handlePasswordChange,\n    required: true\n  }), /*#__PURE__*/React.createElement('button', {\n    type: 'submit'\n  }, '로그인')));\n}\n_s(Login, \"S/1hApaq5SeFcBc+WojiGVcOGsI=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","Login","_s","resetForm","setPassword","id","setId","useState","password","handleIdChange","event","target","value","handlePasswordChange","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","error","window","alert","console","responseData","sessionStorage","setItem","token","location","href","createElement","className","onSubmit","type","name","onChange","required","_c","$RefreshReg$"],"sources":["/Users/jinmyeonghun/Desktop/3-2/공소/2024-2-CSC4004-6-Hotsix/frontend/src/components/Login.js"],"sourcesContent":["// src/components/Login.js\nimport React from 'react';\n// import { useNavigate } from 'react-router-dom';\nimport '../styles/Login.css'; \n\nfunction Login() {\n\n//   const navigate = useNavigate(); // useNavigate 추가\n  // 폼 리셋 함수 (비밀번호만 비우기로 수정)\n  const resetForm = () => {\n      // setId('');\n      setPassword('');\n  };\n\n  //변수\n  const [id, setId] = React.useState('');\n  const [password, setPassword] = React.useState('');\n\n  //handleChange\n  const handleIdChange = (event) => setId(event.target.value);\n  const handlePasswordChange = (event) => setPassword(event.target.value);\n\n  //handleSubmit\n  const handleSubmit = async (event) => {\n      event.preventDefault();\n      // const data = { id,password };\n\n      try {\n          const response = await fetch('/login', {\n              method: 'POST',\n              headers: {'Content-Type': 'application/json'},\n              body: JSON.stringify({id, password}),\n          });\n          // 응답 상태 확인\n          if (!response.ok) {\n              const errorData = await response.json();\n              if (errorData.error === \"ID does not exist\" || errorData.error === \"Invalid Password\") {\n                  window.alert(\"아이디 또는 비밀번호가 틀렸습니다.\");\n              } else {\n                  console.error(\"Error:\", errorData.error);\n                  window.alert(\"Error: \" + errorData.error);\n              }\n              resetForm();\n              return;\n          }\n          else {\n              // 성공 처리\n              const responseData = await response.json();\n              sessionStorage.setItem(\"token\", responseData.token); // JWT 저장\n              sessionStorage.setItem(\"ID\",id);  //Id 저장\n              window.location.href = '/';\n          }\n      }\n      catch(error) {\n          console.error(\"Unexpected error:\", error);\n          window.alert(\"Unexpected error occurred. Please try again.\");\n      }\n  }\nreturn (\n  React.createElement('div', { className: 'login-container',onSubmit: handleSubmit },\n    React.createElement('h2', null, '로그인'),\n    React.createElement('form', { className: 'login-form' },\n        React.createElement('label', null, 'ID: '),\n        React.createElement('input', {\n            type: 'text',\n            name: 'id',\n            value: id,\n            onChange: handleIdChange,\n            required: true\n        }),\n        React.createElement('label', null, '비밀번호: '),\n        React.createElement('input', {\n            type: 'password',\n            name: 'password',\n            value: password,\n            onChange: handlePasswordChange,\n            required: true\n        }),\n      React.createElement('button', { type: 'submit' }, '로그인')\n    )\n  )\n);\n}\n  \n  export default Login;\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}