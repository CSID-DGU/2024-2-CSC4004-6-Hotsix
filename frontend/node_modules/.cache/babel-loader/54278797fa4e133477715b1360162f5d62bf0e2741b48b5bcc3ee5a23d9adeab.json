{"ast":null,"code":"// src/components/Signup.js\n// import '../styles/Signup.css'; \nimport React from'react';import'../styles/Signup.css';import'../styles/Message.css';// import SurveyForm from './SurveyForm';   \nimport{useNavigate}from'react-router-dom';function Signup(onHomeClick){//navigate 변수\nconst navigate=useNavigate();const[page,setPage]=React.useState(null);// 폼 리셋 함수\nconst resetForm=()=>{setId('');setPassword('');setUserName('');setBirthDate('');setPhoneNum('');};//변수\nconst[id,setId]=React.useState('');const[password,setPassword]=React.useState('');const[userName,setUserName]=React.useState('');const[birthDate,setBirthDate]=React.useState('');const[phoneNum,setPhoneNum]=React.useState('');//  const [email, setEmail] = React.useState('');\n//handleChange\nconst handleIdChange=event=>setId(event.target.value);const handlePasswordChange=event=>setPassword(event.target.value);const handleUserNameChange=event=>setUserName(event.target.value);const handleBirthDateChange=event=>setBirthDate(event.target.value);const handlePhoneNumChange=event=>setPhoneNum(event.target.value);//  const handleEmailChange = (event) => setEmail(event.target.value);\n//handleSubmit\nconst handleSubmit=async event=>{event.preventDefault();// 입력 데이터 객체 생성\nconst data={id,password,userName,birthDate,phoneNum};try{// 서버로 POST 요청 보내기\nconst response=await fetch('/signUp',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(data)// 데이터를 JSON 문자열로 변환하여 전송\n});if(response.ok){// 회원가입 성공\nwindow.alert('회원가입이 완료되었습니다!');navigate('/');// 메인 페이지로 이동\n}else{// 실패 응답 처리\nconst errorData=await response.json();if(errorData.error==='DuplicatedId'){window.alert('이미 존재하는 아이디입니다!');resetForm();// 폼 초기화\n}else{window.alert('회원가입 중 문제가 발생했습니다.');}}}catch(error){// 네트워크 오류 처리\nconsole.error('Error occurred:',error);window.alert('서버와 통신 중 문제가 발생했습니다. 다시 시도해주세요.');}};return/*#__PURE__*/React.createElement('div',{className:'signup-container'},/*#__PURE__*/React.createElement('h2',null,'회원가입'),/*#__PURE__*/React.createElement('form',{className:'signup-form',onSubmit:handleSubmit},/*#__PURE__*/React.createElement('label',null,'아이디'),/*#__PURE__*/React.createElement('input',{type:'text',name:'id',value:id,onChange:handleIdChange,required:true}),/*#__PURE__*/React.createElement('div',{class:'idMessage'},'6자 이상 16자 이하 입력'),/*#__PURE__*/React.createElement('label',null,'비밀번호'),/*#__PURE__*/React.createElement('input',{type:'password',name:'password',value:password,onChange:handlePasswordChange,required:true}),/*#__PURE__*/React.createElement('div',{class:'pwdMessage'},'8자 이상 16자 이하의 영문,숫자,특수기호'),/*#__PURE__*/React.createElement('label',null,'이름 '),/*#__PURE__*/React.createElement('input',{type:'text',name:'userName',value:userName,onChange:handleUserNameChange,required:true}),/*#__PURE__*/React.createElement('label',null,'생년월일 '),/*#__PURE__*/React.createElement('input',{type:'date',name:'birthDate',value:birthDate,onChange:handleBirthDateChange,required:true}),/*#__PURE__*/React.createElement('label',null,'휴대폰 번호 '),/*#__PURE__*/React.createElement('input',{type:'text',name:'phoneNum',value:phoneNum,onChange:handlePhoneNumChange,required:true}),/*#__PURE__*/React.createElement('button',{type:'submit'},'회원가입')));}export default Signup;","map":{"version":3,"names":["React","useNavigate","Signup","onHomeClick","navigate","page","setPage","useState","resetForm","setId","setPassword","setUserName","setBirthDate","setPhoneNum","id","password","userName","birthDate","phoneNum","handleIdChange","event","target","value","handlePasswordChange","handleUserNameChange","handleBirthDateChange","handlePhoneNumChange","handleSubmit","preventDefault","data","response","fetch","method","headers","body","JSON","stringify","ok","window","alert","errorData","json","error","console","createElement","className","onSubmit","type","name","onChange","required","class"],"sources":["C:/Users/pc/Desktop/Hotsix/frontend/src/components/Signup.js"],"sourcesContent":["// src/components/Signup.js\r\n// import '../styles/Signup.css'; \r\nimport React from 'react';\r\nimport '../styles/Signup.css';\r\nimport '../styles/Message.css';\r\n// import SurveyForm from './SurveyForm';   \r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction Signup(onHomeClick) {\r\n\r\n    //navigate 변수\r\n    const navigate = useNavigate();\r\n\r\n    const [page, setPage] = React.useState(null);\r\n\r\n    // 폼 리셋 함수\r\n      const resetForm = () => {\r\n          setId('');\r\n          setPassword('');\r\n          setUserName('');\r\n          setBirthDate('');\r\n          setPhoneNum('');\r\n      };\r\n\r\n  //변수\r\n  const [id, setId] = React.useState('');\r\n  const [password, setPassword] = React.useState('');\r\n  const [userName, setUserName] = React.useState('');\r\n  const [birthDate, setBirthDate] = React.useState('');\r\n  const [phoneNum, setPhoneNum] = React.useState('');\r\n//  const [email, setEmail] = React.useState('');\r\n\r\n  //handleChange\r\n  const handleIdChange = (event) => setId(event.target.value);\r\n  const handlePasswordChange = (event) => setPassword(event.target.value);\r\n  const handleUserNameChange = (event) => setUserName(event.target.value);\r\n  const handleBirthDateChange = (event) => setBirthDate(event.target.value);\r\n  const handlePhoneNumChange = (event) => setPhoneNum(event.target.value);\r\n//  const handleEmailChange = (event) => setEmail(event.target.value);\r\n\r\n  //handleSubmit\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n  \r\n    // 입력 데이터 객체 생성\r\n    const data = { id, password, userName, birthDate, phoneNum };\r\n  \r\n    try {\r\n      // 서버로 POST 요청 보내기\r\n      const response = await fetch('/signUp', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(data), // 데이터를 JSON 문자열로 변환하여 전송\r\n      });\r\n  \r\n      if (response.ok) {\r\n        // 회원가입 성공\r\n        window.alert('회원가입이 완료되었습니다!');\r\n        navigate('/');// 메인 페이지로 이동\r\n      } else {\r\n        // 실패 응답 처리\r\n        const errorData = await response.json();\r\n        if (errorData.error === 'DuplicatedId') {\r\n          window.alert('이미 존재하는 아이디입니다!');\r\n          resetForm(); // 폼 초기화\r\n        } else {\r\n          window.alert('회원가입 중 문제가 발생했습니다.');\r\n        }\r\n      }\r\n    } catch (error) {\r\n      // 네트워크 오류 처리\r\n      console.error('Error occurred:', error);\r\n      window.alert('서버와 통신 중 문제가 발생했습니다. 다시 시도해주세요.');\r\n    }\r\n  };\r\n\r\n\r\n   return (\r\n\r\n          React.createElement('div', { className: 'signup-container' },\r\n              React.createElement('h2', null, '회원가입'),\r\n              React.createElement('form', { className: 'signup-form', onSubmit: handleSubmit },\r\n                  React.createElement('label', null, '아이디'),\r\n                  React.createElement('input', {\r\n                      type: 'text',\r\n                      name: 'id',\r\n                      value: id,\r\n                      onChange: handleIdChange,\r\n                      required: true\r\n                  }),\r\n                  React.createElement('div',{\r\n                    class : 'idMessage'\r\n                  },'6자 이상 16자 이하 입력'),\r\n                  React.createElement('label', null, '비밀번호'),\r\n                  React.createElement('input', {\r\n                      type: 'password',\r\n                      name: 'password',\r\n                      value: password,\r\n                      onChange: handlePasswordChange,\r\n                      required: true\r\n                  }),\r\n                  React.createElement('div',{\r\n                  class : 'pwdMessage'\r\n                },'8자 이상 16자 이하의 영문,숫자,특수기호'),\r\n\r\n                  React.createElement('label', null, '이름 '),\r\n                  React.createElement('input', {\r\n                      type: 'text',\r\n                      name: 'userName',\r\n                      value: userName,\r\n                      onChange: handleUserNameChange,\r\n                      required: true\r\n                  }),\r\n\r\n                  React.createElement('label', null, '생년월일 '),\r\n                  React.createElement('input', {\r\n                      type: 'date',\r\n                      name: 'birthDate',\r\n                      value: birthDate,\r\n                      onChange: handleBirthDateChange,\r\n                      required: true\r\n                  }),\r\n\r\n                  React.createElement('label', null, '휴대폰 번호 '),\r\n                  React.createElement('input', {\r\n                      type: 'text',\r\n                      name: 'phoneNum',\r\n                      value: phoneNum,\r\n                      onChange: handlePhoneNumChange,\r\n                      required: true\r\n                  }),\r\n\r\n                  React.createElement('button', { type: 'submit' }, '회원가입')\r\n       )\r\n  )\r\n);\r\n}\r\n  \r\n  export default Signup;\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}