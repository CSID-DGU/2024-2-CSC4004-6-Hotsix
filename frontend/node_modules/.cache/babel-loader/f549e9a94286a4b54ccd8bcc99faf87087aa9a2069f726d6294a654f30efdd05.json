{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hsson\\\\IdeaProjects\\\\2024-2-CSC4004-6-Hotsix\\\\frontend\\\\src\\\\components\\\\Community.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../styles/Community.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Community() {\n  _s();\n  const [view, setView] = useState('cards'); // Current view state：'cards', 'list', 或 'detail'\n  const [currentBoard, setCurrentBoard] = useState(null); // Current section name\n  const [posts, setPosts] = useState([]); // List of posts in the current section\n  const [selectedPost, setSelectedPost] = useState(null); // Details of the currently selected post\n  const [loading, setLoading] = useState(false); // Loading Status\n  const [latestPosts, setLatestPosts] = useState({}); // Stores the latest post for each board\n  const [navigationStack, setNavigationStack] = useState([]); // Path Stack\n  const [likeLoading, setLikeLoading] = useState(false);\n  const [commentContent, setCommentContent] = useState(''); // Current comment content\n  const [comments, setComments] = useState([]); // All comments on the current post\n  const [userNum, setUserNum] = useState(null);\n  const userId = sessionStorage.getItem('ID');\n  const [likes, setLikes] = useState({});\n  const [isPosting, setIsPosting] = useState(false); // Controls whether to display the input box for posting new posts\n  const [subject, setSubject] = useState('');\n  const [content, setContent] = useState('');\n  const [postImages, setPostImages] = useState([]);\n  const [profileImagePath, setProfileImagePath] = React.useState(\"\");\n  const handleImageUpload = event => {\n    const files = event.target.files; // 업로드된 파일 가져오기\n    const fileArray = Array.from(files); // FileList를 배열로 변환\n    setPostImages(prevImages => [...prevImages, ...fileArray]); // 상태 업데이트\n  };\n  const boards = {\n    자유게시판: '자유게시판',\n    추천게시판: '추천게시판',\n    공지사항: '공지사항',\n    이벤트: '이벤트'\n  };\n\n  // 유저 이름 가져오기\n  const [userName, setUserName] = useState('');\n  const id = sessionStorage.getItem('ID');\n\n  //유저 프로필 요청\n  React.useEffect(() => {\n    if (id) {\n      fetch(`/userProfile/${id}`, {\n        // API 요청\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n          // 필요시 Authorization 헤더 추가\n          // 'Authorization': `Bearer ${sessionStorage.getItem('token')}`\n        }\n      }).then(response => {\n        if (!response.ok) {\n          throw new Error('Failed to fetch user data');\n        }\n        return response.json();\n      }).then(data => {\n        setProfileImagePath(data.profileImagePath); // 사용자 이름 설정\n      }).catch(error => {\n        console.error('Error fetching user data:', error);\n      });\n    }\n  }, [id]);\n  //유저 이름 불러오기\n  useEffect(() => {\n    if (id) {\n      axios.get(`/userName/${id}`).then(response => {\n        setUserName(response.data.userName); // 사용자 이름 설정\n      }).catch(error => {\n        console.error('Error fetching user data:', error);\n      });\n    }\n  }, [id]);\n\n  // Get the userNum of the current user\n  useEffect(() => {\n    if (userId) {\n      axios.get(`/userNum/${userId}`).then(response => {\n        setUserNum(response.data);\n      }).catch(error => {\n        console.error('Failed to fetch userNum:', error);\n      });\n    }\n  }, [userId]);\n\n  // Get the latest posts in each forum\n  useEffect(() => {\n    const fetchLatestPosts = async () => {\n      try {\n        const results = {};\n        for (const boardName of Object.values(boards)) {\n          const response = await axios.get(`/posts/category/${boardName}/latest`);\n          results[boardName] = response.data.slice(0, 4); // Get the latest 4 posts in each forum\n        }\n        setLatestPosts(results);\n      } catch (error) {\n        console.error('Failed to fetch latest posts:', error);\n      }\n    };\n    fetchLatestPosts();\n  }, []);\n  useEffect(() => {\n    if (currentBoard) {\n      setLoading(true);\n      axios.get(`/posts/category/${currentBoard}`).then(response => {\n        setPosts(response.data);\n        setLoading(false);\n      }).catch(error => {\n        console.error('Failed to fetch posts:', error);\n        setLoading(false);\n      });\n    }\n  }, [currentBoard]);\n\n  // 게시물 내용 요청하기(GET)\n  const fetchPostDetail = postId => {\n    setLoading(true);\n    axios.get(`/posts/${postId}`).then(response => {\n      const postDTO = response.data.postDTO;\n      const postImagesName = postDTO.postImagesNames;\n      setPostImages(postImagesName);\n      postImagesName.forEach((image, index) => {\n        console.log(`Image ${index + 1}: ${image}`);\n      });\n      const images = postImagesName || [];\n      setSelectedPost({\n        ...postDTO,\n        postImagesName: images\n      });\n      setLikes(postDTO.likes);\n      setPostImages(images); // 이미지 배열 설정\n      fetchComments(postId);\n      setView('detail');\n      setLoading(false);\n    }).catch(error => {\n      console.error('Failed to fetch post detail:', error);\n      setLoading(false);\n    });\n  };\n\n  // 댓글 달기\n  const addComment = (postId, content) => {\n    if (!content.trim()) return; // Preventing Blank Comments\n\n    if (!userNum) {\n      alert(\"User not found or userNum is not available.\");\n      return;\n    }\n    const commentData = {\n      content: content,\n      author: {\n        userNum: userNum\n      }\n    };\n    axios.post(`/replies?postId=${postId}`, commentData).then(response => {\n      alert('댓글이 작성되었습니다!');\n      setCommentContent('');\n      fetchComments(postId);\n    }).catch(error => {\n      console.error('Failed to add comment:', error);\n    });\n  };\n\n  // 댓글 로드\n  const fetchComments = postId => {\n    axios.get(`/replies/post/${postId}`).then(response => {\n      setComments(response.data);\n    }).catch(error => {\n      console.error('Failed to fetch comments:', error);\n    });\n  };\n\n  // 게시글 작성\n  const createPost = () => {\n    if (!userNum) {\n      alert(\"User not found or userNum is not available.\");\n      // console.log(\"content : \",content);\n      return;\n    }\n    if (!subject || !content) {\n      alert('Title and content cannot be empty.');\n      // console.log(\"content : \",content);\n      return;\n    }\n    console.log(\"content : \", content);\n    const formData = new FormData();\n    formData.append('subject', subject);\n    formData.append('content', content);\n    formData.append('category', currentBoard);\n    formData.append('authorUserNum', userNum);\n\n    // 파일 데이터 추가\n    if (postImages.length > 0) {\n      postImages.forEach(image => {\n        formData.append(\"postImages\", image); // 같은 키를 사용해도 서버에서 배열로 처리\n      });\n    } else {\n      console.log(\"No images to upload\");\n    }\n    axios.post(`/posts/${userId}`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(response => {\n      if (response.status == 200) {\n        alert('게시글 작성이 완료되었습니다!');\n        setSubject('');\n        setContent('');\n        setPostImages([]);\n        setIsPosting(false);\n        fetchPostsByCategory(currentBoard);\n      }\n    }).catch(error => {\n      console.error('Failed to create post:', error);\n    });\n  };\n\n  // Delete a post\n  const deletePost = postId => {\n    if (window.confirm('Are you sure you want to delete this post?')) {\n      axios.delete(`/posts/${postId}`).then(() => {\n        alert('Post deleted successfully!');\n        fetchPostsByCategory(currentBoard);\n      }).catch(error => {\n        console.error('Failed to delete post:', error);\n      });\n    }\n  };\n\n  // Update Post\n  const updatePost = (postId, updatedData) => {\n    axios.put(`/posts/${postId}`, updatedData).then(() => {\n      alert('Post updated successfully!');\n      fetchPostDetail(postId);\n    }).catch(error => {\n      console.error('Failed to update post:', error);\n    });\n  };\n\n  // 좋아요 누르기\n  const toggleLikeHandler = (postId, isDetail = false) => {\n    if (likeLoading) return; // Prevent duplicate clicks\n    setLikeLoading(true);\n    if (!sessionStorage.getItem('ID')) {\n      alert('Please log in to like posts.');\n      setLikeLoading(false);\n      return;\n    }\n    setLikes(prevLikes => ({\n      ...prevLikes,\n      [postId]: (prevLikes[postId] || 0) + 1\n    }));\n    axios.post(`/posts/${postId}/like`).then(response => {\n      const {\n        likeCount,\n        isLiked\n      } = response.data;\n      if (isDetail) {\n        setSelectedPost({\n          ...selectedPost,\n          liked: isLiked,\n          likeCount\n        });\n      } else {\n        const updatedPosts = posts.map(post => post.id === postId ? {\n          ...post,\n          liked: isLiked,\n          likeCount\n        } : post);\n        setPosts(updatedPosts);\n      }\n    }).catch(error => {\n      console.error('Failed to toggle like:', error);\n    }).finally(() => {\n      setLikeLoading(false);\n    });\n  };\n\n  // Unlike a post\n  const unlikePost = postId => {\n    axios.post(`/posts/${postId}/unlike`).then(response => {\n      const {\n        likeCount,\n        isLiked\n      } = response.data;\n      const updatedPosts = posts.map(post => post.id === postId ? {\n        ...post,\n        liked: isLiked,\n        likeCount\n      } : post);\n      setPosts(updatedPosts);\n    }).catch(error => {\n      console.error('Failed to unlike post:', error);\n    });\n  };\n\n  // Back to previous level\n  const goBack = () => {\n    if (navigationStack.length > 0) {\n      const lastState = navigationStack.pop();\n      setNavigationStack([...navigationStack]);\n      setView(lastState.view);\n      setCurrentBoard(lastState.currentBoard || null);\n      setPosts(lastState.posts || []);\n      if (lastState.view === 'list') {\n        fetchPostsByCategory(lastState.currentBoard);\n      }\n    } else {\n      setView('cards');\n      setCurrentBoard(null);\n    }\n  };\n\n  // Get posts by section\n  const fetchPostsByCategory = category => {\n    setNavigationStack(prevStack => [...prevStack, {\n      view,\n      currentBoard\n    }]);\n    setLoading(true);\n    setCurrentBoard(category);\n    axios.get(`/posts/category/${category}`).then(response => {\n      setPosts(response.data); // Update Post List\n      setView('list'); // Switch to list view\n      setLoading(false);\n    }).catch(error => {\n      console.error('Failed to fetch posts for category:', error);\n      setLoading(false);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"container\",\n    className: \"community\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"leftside\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"logged\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: `/asset/Images/userProfile/${profileImagePath}`,\n              className: \"picture\",\n              alt: \"User\",\n              onError: e => e.target.src = '/asset/Images/altImage/alt.png'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"nickname\",\n              children: userName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"menus\",\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/myarticle\",\n              className: \"myarticle\",\n              children: \"\\uB0B4\\uAC00 \\uC4F4 \\uAE00\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/mycommentarticle\",\n              className: \"mycommentarticle\",\n              children: \"\\uB313\\uAE00 \\uB2E8 \\uAE00\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/myscrap\",\n              className: \"myscrap\",\n              children: \"\\uB0B4 \\uC2A4\\uD06C\\uB7A9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main\",\n        children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 13\n        }, this) : view === 'cards' ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-container\",\n          children: Object.keys(boards).map(boardName => {\n            var _latestPosts$boards$b;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"board-container\",\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"posts-table\",\n                children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                    onClick: () => fetchPostsByCategory(boards[boardName]),\n                    children: /*#__PURE__*/_jsxDEV(\"td\", {\n                      style: {\n                        textAlign: 'left',\n                        color: 'red'\n                      },\n                      children: boardName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 407,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 406,\n                    columnNumber: 23\n                  }, this), (_latestPosts$boards$b = latestPosts[boards[boardName]]) === null || _latestPosts$boards$b === void 0 ? void 0 : _latestPosts$boards$b.map(post => /*#__PURE__*/_jsxDEV(\"tr\", {\n                    onClick: e => {\n                      e.stopPropagation(); // Stop bubbling\n                      fetchPostDetail(post.id); // Get post details\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"left-column\",\n                        children: post.subject\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 420,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"right-column\",\n                        children: new Date(post.createDate).toLocaleDateString()\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 421,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 419,\n                      columnNumber: 27\n                    }, this)\n                  }, post.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 412,\n                    columnNumber: 25\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 405,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 19\n              }, this)\n            }, boardName, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 13\n        }, this) : view === 'list' ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-list-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"back-button\",\n              onClick: goBack,\n              children: \"\\uB4A4\\uB85C\\uAC00\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"post-button\",\n              onClick: () => setIsPosting(true),\n              children: \"\\uAE00\\uC4F0\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"board-title\",\n            children: currentBoard\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 15\n          }, this), isPosting ?\n          /*#__PURE__*/\n          //게시글 작성\n          _jsxDEV(\"div\", {\n            className: \"createPost-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: subject,\n              onChange: e => setSubject(e.target.value),\n              placeholder: \"\\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n              className: \"input-field\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: content,\n              onChange: e => setContent(e.target.value),\n              placeholder: \"\\uB0B4\\uC6A9\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n              rows: \"4\",\n              className: \"input-field\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"image-preview\",\n              children: postImages.map((image, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n                src: URL.createObjectURL(image),\n                alt: `Uploaded Preview ${index + 1}`,\n                className: \"uploaded-image\"\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 465,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              multiple: true,\n              accept: \"image/*\",\n              onChange: handleImageUpload\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"createPost-button\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: createPost,\n                className: \"submit-post-btn\",\n                children: \"\\uAC8C\\uC2DC\\uAE00 \\uC791\\uC131\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 481,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setIsPosting(false),\n                className: \"cancel-post-btn\",\n                children: \"\\uCDE8\\uC18C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 487,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 17\n          }, this) :\n          /*#__PURE__*/\n          //게시글 리스트 \n          _jsxDEV(\"div\", {\n            className: \"post-list\",\n            children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post-item\",\n              onClick: () => fetchPostDetail(post.id),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"post-title-row\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"post-title\",\n                  children: post.subject\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 505,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 504,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"post-meta-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"like-section\",\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: `fas fa-thumbs-up like-icon ${post.liked ? \"liked\" : \"\"}`,\n                    onClick: e => {\n                      e.stopPropagation();\n                      toggleLikeHandler(post.id, false); // 点赞\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 509,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 508,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"author-section\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\"\\uC791\\uC131\\uC790 : \", post.authorName || 'Unknown']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 520,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 519,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"date-section\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: new Date(post.createDate).toLocaleDateString()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 523,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 522,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 507,\n                columnNumber: 23\n              }, this)]\n            }, post.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 499,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 18\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 13\n        }, this) :\n        // 게시글 확인 창\n        view === 'detail' ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-list-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"back-button\",\n            onClick: goBack,\n            children: \"\\uB4A4\\uB85C\\uAC00\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card large-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"board-title\",\n              children: selectedPost.subject\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 539,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"\\uC791\\uC131\\uC790 :\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 540,\n                columnNumber: 20\n              }, this), \" \", selectedPost.authorName || 'Unknown']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 540,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"\\uC791\\uC131\\uC77C :\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 541,\n                columnNumber: 20\n              }, this), \" \", new Date(selectedPost.createDate).toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 541,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 542,\n              columnNumber: 17\n            }, this), postImages && postImages.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"image-gallery\",\n              children: postImages.map((image, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `/asset/Images/postImage/${image}`,\n                alt: `Post Image ${index + 1}`,\n                className: \"post-image\"\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 546,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 544,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"content\",\n              children: selectedPost.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 555,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"like-section\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: `fas fa-thumbs-up like-icon ${selectedPost.liked ? 'liked' : ''}`,\n                onClick: () => toggleLikeHandler(selectedPost.id, true) // 点赞\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 557,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 556,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comment-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"\\uB313\\uAE00\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 564,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                value: commentContent,\n                onChange: e => setCommentContent(e.target.value),\n                placeholder: \"\\uB313\\uAE00\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694...\",\n                rows: \"4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 565,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"comment-submit-btn\",\n                onClick: () => addComment(selectedPost.id, commentContent),\n                children: \"\\uB313\\uAE00 \\uC4F0\\uAE30\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 571,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"comments-list\",\n                children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"comment-card\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: comment.authorName || 'Unknown'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 581,\n                      columnNumber: 28\n                    }, this), \" - \", new Date(comment.createDate).toLocaleString()]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 581,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: comment.content\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 582,\n                    columnNumber: 25\n                  }, this)]\n                }, comment.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 580,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 578,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 563,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 538,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 13\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rightside\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"board\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"#\",\n                children: \"\\uC2E4\\uC2DC\\uAC04 \\uC778\\uAE30 \\uAE00\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 596,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 596,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"article\",\n              href: \"#\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"title\",\n                children: \"XXX\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 598,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"small\",\n                children: \"XXXXXX\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 599,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 597,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 595,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 594,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"board\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"#\",\n                children: \"HOT \\uAC8C\\uC2DC\\uBB3C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 605,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 605,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"list\",\n              href: \"#\",\n              children: [/*#__PURE__*/_jsxDEV(\"time\", {\n                children: \"10\\uBD84 \\uC804\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 607,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"AAAAAAAA\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 608,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 606,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 604,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 372,\n    columnNumber: 5\n  }, this);\n}\n_s(Community, \"PDfue7Hrej+pp9mbQYSoduLiZ/0=\");\n_c = Community;\nexport default Community;\nvar _c;\n$RefreshReg$(_c, \"Community\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Community","_s","view","setView","currentBoard","setCurrentBoard","posts","setPosts","selectedPost","setSelectedPost","loading","setLoading","latestPosts","setLatestPosts","navigationStack","setNavigationStack","likeLoading","setLikeLoading","commentContent","setCommentContent","comments","setComments","userNum","setUserNum","userId","sessionStorage","getItem","likes","setLikes","isPosting","setIsPosting","subject","setSubject","content","setContent","postImages","setPostImages","profileImagePath","setProfileImagePath","handleImageUpload","event","files","target","fileArray","Array","from","prevImages","boards","자유게시판","추천게시판","공지사항","이벤트","userName","setUserName","id","fetch","method","headers","then","response","ok","Error","json","data","catch","error","console","get","fetchLatestPosts","results","boardName","Object","values","slice","fetchPostDetail","postId","postDTO","postImagesName","postImagesNames","forEach","image","index","log","images","fetchComments","addComment","trim","alert","commentData","author","post","createPost","formData","FormData","append","length","status","fetchPostsByCategory","deletePost","window","confirm","delete","updatePost","updatedData","put","toggleLikeHandler","isDetail","prevLikes","likeCount","isLiked","liked","updatedPosts","map","finally","unlikePost","goBack","lastState","pop","category","prevStack","className","children","src","alt","onError","e","fileName","_jsxFileName","lineNumber","columnNumber","href","keys","_latestPosts$boards$b","onClick","style","textAlign","color","stopPropagation","Date","createDate","toLocaleDateString","type","value","onChange","placeholder","rows","URL","createObjectURL","multiple","accept","authorName","toLocaleString","comment","_c","$RefreshReg$"],"sources":["C:/Users/hsson/IdeaProjects/2024-2-CSC4004-6-Hotsix/frontend/src/components/Community.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../styles/Community.css';\n\nfunction Community() {\n  const [view, setView] = useState('cards'); // Current view state：'cards', 'list', 或 'detail'\n  const [currentBoard, setCurrentBoard] = useState(null); // Current section name\n  const [posts, setPosts] = useState([]); // List of posts in the current section\n  const [selectedPost, setSelectedPost] = useState(null); // Details of the currently selected post\n  const [loading, setLoading] = useState(false); // Loading Status\n  const [latestPosts, setLatestPosts] = useState({}); // Stores the latest post for each board\n  const [navigationStack, setNavigationStack] = useState([]); // Path Stack\n  const [likeLoading, setLikeLoading] = useState(false);\n  const [commentContent, setCommentContent] = useState(''); // Current comment content\n  const [comments, setComments] = useState([]); // All comments on the current post\n  const [userNum, setUserNum] = useState(null);\n  const userId = sessionStorage.getItem('ID'); \n  const [likes, setLikes] = useState({});\n  const [isPosting, setIsPosting] = useState(false); // Controls whether to display the input box for posting new posts\n  const [subject, setSubject] = useState('');\n  const [content, setContent] = useState('');\n  const [postImages,setPostImages] = useState([]);\n  const [profileImagePath, setProfileImagePath] = React.useState(\"\");\n\n  const handleImageUpload = (event) => {\n    const files = event.target.files; // 업로드된 파일 가져오기\n    const fileArray = Array.from(files); // FileList를 배열로 변환\n    setPostImages((prevImages) => [...prevImages, ...fileArray]); // 상태 업데이트\n  };\n\n  const boards = {\n    자유게시판: '자유게시판',\n    추천게시판: '추천게시판',\n    공지사항: '공지사항',\n    이벤트: '이벤트',\n  };\n\n  // 유저 이름 가져오기\n  const [userName, setUserName] = useState('');\n  const id = sessionStorage.getItem('ID');\n  \n  //유저 프로필 요청\n  React.useEffect(() => {\n    if(id){\n      fetch(`/userProfile/${id}`, { // API 요청\n          method: 'GET',\n          headers: {\n              'Content-Type': 'application/json',\n              // 필요시 Authorization 헤더 추가\n              // 'Authorization': `Bearer ${sessionStorage.getItem('token')}`\n          },\n  } )\n      .then(response => {\n          if (!response.ok) {\n              throw new Error('Failed to fetch user data');\n          }\n          return response.json();\n      })\n      .then(data => {\n          setProfileImagePath(data.profileImagePath); // 사용자 이름 설정\n      })\n      .catch(error => {\n          console.error('Error fetching user data:', error);\n      })\n    }\n  }, [id]);\n  //유저 이름 불러오기\n  useEffect(() => {\n    if (id) {\n      axios\n        .get(`/userName/${id}`)\n        .then((response) => {\n          setUserName(response.data.userName); // 사용자 이름 설정\n        })\n        .catch((error) => {\n          console.error('Error fetching user data:', error);\n        });\n    }\n  }, [id]);\n\n  // Get the userNum of the current user\n  useEffect(() => {\n    if (userId) {\n      axios\n        .get(`/userNum/${userId}`)\n        .then((response) => {\n          setUserNum(response.data);\n        })\n        .catch((error) => {\n          console.error('Failed to fetch userNum:', error);\n        });\n    }\n  }, [userId]);\n\n  // Get the latest posts in each forum\n  useEffect(() => {\n    const fetchLatestPosts = async () => {\n      try {\n        const results = {};\n        for (const boardName of Object.values(boards)) {\n          const response = await axios.get(`/posts/category/${boardName}/latest`);\n          results[boardName] = response.data.slice(0, 4); // Get the latest 4 posts in each forum\n        }\n        setLatestPosts(results);\n      } catch (error) {\n        console.error('Failed to fetch latest posts:', error);\n      }\n    };\n    fetchLatestPosts();\n  }, []);\n\n  useEffect(() => {\n    if (currentBoard) {\n      setLoading(true);\n      axios\n        .get(`/posts/category/${currentBoard}`)\n        .then((response) => {\n          setPosts(response.data);\n          setLoading(false);\n        })\n        .catch((error) => {\n          console.error('Failed to fetch posts:', error);\n          setLoading(false);\n        });\n    }\n  }, [currentBoard]);\n\n  // 게시물 내용 요청하기(GET)\n  const fetchPostDetail = (postId) => {\n    setLoading(true);\n    axios\n      .get(`/posts/${postId}`)\n      .then((response) => {\n        const postDTO = response.data.postDTO;\n        const postImagesName = postDTO.postImagesNames;\n\n        setPostImages(postImagesName);\n\n        postImagesName.forEach((image, index) => {\n          console.log(`Image ${index + 1}: ${image}`);\n        });\n        const images = postImagesName || [];\n        setSelectedPost({\n          ...postDTO,\n          postImagesName: images,\n        });\n        setLikes(postDTO.likes);\n        setPostImages(images); // 이미지 배열 설정\n        fetchComments(postId); \n        setView('detail');\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.error('Failed to fetch post detail:', error);\n        setLoading(false);\n      });\n  };\n\n  // 댓글 달기\n  const addComment = (postId, content) => {\n    if (!content.trim()) return; // Preventing Blank Comments\n\n    if (!userNum) {\n      alert(\"User not found or userNum is not available.\");\n      return;\n    }\n\n    const commentData = {\n      content: content,\n      author: { userNum: userNum },\n    };\n\n    axios\n      .post(`/replies?postId=${postId}`, commentData)\n      .then((response) => {\n        alert('댓글이 작성되었습니다!');\n        setCommentContent('');\n\n        fetchComments(postId);\n      })\n      .catch((error) => {\n        console.error('Failed to add comment:', error);\n      });\n  };\n\n  // 댓글 로드\n  const fetchComments = (postId) => {\n    axios\n      .get(`/replies/post/${postId}`)\n      .then((response) => {\n        setComments(response.data); \n      })\n      .catch((error) => {\n        console.error('Failed to fetch comments:', error);\n      });\n  };\n\n  // 게시글 작성\n  const createPost = () => {\n    if (!userNum) {\n      alert(\"User not found or userNum is not available.\");\n      // console.log(\"content : \",content);\n      return;\n    }\n\n    if (!subject || !content) {\n      alert('Title and content cannot be empty.');\n      // console.log(\"content : \",content);\n      return;\n    }\n    console.log(\"content : \",content);\n    const formData = new FormData();\n    formData.append('subject', subject);\n    formData.append('content', content);\n    formData.append('category', currentBoard);\n    formData.append('authorUserNum', userNum);\n\n    // 파일 데이터 추가\n    if (postImages.length > 0) {\n      postImages.forEach((image) => {\n        formData.append(\"postImages\", image); // 같은 키를 사용해도 서버에서 배열로 처리\n      });\n    } else {\n      console.log(\"No images to upload\");\n    }\n    axios\n      .post(`/posts/${userId}`, formData,{\n        headers: { 'Content-Type': 'multipart/form-data' }\n      }\n        \n      )\n      .then((response) => {\n        if(response.status == 200){\n          alert('게시글 작성이 완료되었습니다!');\n          setSubject(''); \n          setContent(''); \n          setPostImages([]);\n          setIsPosting(false); \n          fetchPostsByCategory(currentBoard); \n        }\n      })\n      .catch((error) => {\n        console.error('Failed to create post:', error);\n      });\n  };\n\n  // Delete a post\n  const deletePost = (postId) => {\n    if (window.confirm('Are you sure you want to delete this post?')) {\n      axios\n        .delete(`/posts/${postId}`)\n        .then(() => {\n          alert('Post deleted successfully!');\n          fetchPostsByCategory(currentBoard); \n        })\n        .catch((error) => {\n          console.error('Failed to delete post:', error);\n        });\n    }\n  };\n\n  // Update Post\n  const updatePost = (postId, updatedData) => {\n    axios\n      .put(`/posts/${postId}`, updatedData) \n      .then(() => {\n        alert('Post updated successfully!');\n        fetchPostDetail(postId); \n      })\n      .catch((error) => {\n        console.error('Failed to update post:', error);\n      });\n  };\n\n  // 좋아요 누르기\n  const toggleLikeHandler = (postId, isDetail = false) => {\n    if (likeLoading) return; // Prevent duplicate clicks\n    setLikeLoading(true);\n\n    if (!sessionStorage.getItem('ID')) {\n      alert('Please log in to like posts.');\n      setLikeLoading(false);\n      return;\n    }\n\n    setLikes((prevLikes) => ({\n      ...prevLikes,\n      [postId]: (prevLikes[postId] || 0) + 1, \n    }));\n\n    axios\n      .post(`/posts/${postId}/like`) \n      .then((response) => {\n        const { likeCount, isLiked } = response.data;\n\n        if (isDetail) {\n          setSelectedPost({\n            ...selectedPost,\n            liked: isLiked,\n            likeCount,\n          });\n        } else {\n          const updatedPosts = posts.map((post) =>\n            post.id === postId ? { ...post, liked: isLiked, likeCount } : post\n          );\n          setPosts(updatedPosts);\n        }\n      })\n      .catch((error) => {\n        console.error('Failed to toggle like:', error);\n      })\n      .finally(() => {\n        setLikeLoading(false);\n      });\n  };\n\n  // Unlike a post\n  const unlikePost = (postId) => {\n    axios\n      .post(`/posts/${postId}/unlike`) \n      .then((response) => {\n        const { likeCount, isLiked } = response.data;\n        const updatedPosts = posts.map((post) =>\n          post.id === postId ? { ...post, liked: isLiked, likeCount } : post\n        );\n        setPosts(updatedPosts);\n      })\n      .catch((error) => {\n        console.error('Failed to unlike post:', error);\n      });\n  };\n\n  // Back to previous level\n  const goBack = () => {\n    if (navigationStack.length > 0) {\n      const lastState = navigationStack.pop();\n      setNavigationStack([...navigationStack]);\n\n      setView(lastState.view);\n      setCurrentBoard(lastState.currentBoard || null);\n      setPosts(lastState.posts || []);\n\n      if (lastState.view === 'list') {\n        fetchPostsByCategory(lastState.currentBoard); \n      }\n    } else {\n      setView('cards');\n      setCurrentBoard(null);\n    }\n  };\n\n  // Get posts by section\n  const fetchPostsByCategory = (category) => {\n    setNavigationStack((prevStack) => [...prevStack, { view, currentBoard }]);\n    setLoading(true);\n    setCurrentBoard(category);\n\n    axios\n      .get(`/posts/category/${category}`)\n      .then((response) => {\n        setPosts(response.data); // Update Post List\n        setView('list'); // Switch to list view\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.error('Failed to fetch posts for category:', error);\n        setLoading(false);\n      });\n  };\n\n  return (\n    <div id=\"container\" className=\"community\">\n      <div className=\"content-area\">\n        {/* Left  */}\n        <div className=\"leftside\">\n          <div className=\"card\">\n            <form className=\"logged\">\n              <img \n                  src={`/asset/Images/userProfile/${profileImagePath}`} \n                  className=\"picture\" \n                  alt=\"User\" \n                  onError={(e) => e.target.src = '/asset/Images/altImage/alt.png'} \n              />\n              <p className=\"nickname\">{userName}</p>\n            </form>\n          </div>\n          <div className=\"card\">\n            <div className=\"menus\">\n              <a href=\"/myarticle\" className=\"myarticle\">내가 쓴 글</a>\n              <a href=\"/mycommentarticle\" className=\"mycommentarticle\">댓글 단 글</a>\n              <a href=\"/myscrap\" className=\"myscrap\">내 스크랩</a>\n            </div>\n          </div>\n        </div>\n\n        {/* mid */}\n        <div className=\"main\">\n          {loading ? (\n            <p>Loading...</p>\n          ) : view === 'cards' ? (\n            <div className=\"card-container\">\n              {Object.keys(boards).map((boardName) => (\n                <div key={boardName} className=\"board-container\">\n                  <table className=\"posts-table\">\n                    <tbody>\n                      <tr onClick={() => fetchPostsByCategory(boards[boardName])}>\n                        <td style={{ textAlign: 'left', color: 'red' }}>\n                          {boardName}\n                        </td>\n                      </tr>\n                      {latestPosts[boards[boardName]]?.map((post) => (\n                        <tr\n                          key={post.id}\n                          onClick={(e) => {\n                            e.stopPropagation(); // Stop bubbling\n                            fetchPostDetail(post.id); // Get post details\n                          }}\n                        >\n                          <td>\n                            <div className=\"left-column\">{post.subject}</div>\n                            <div className=\"right-column\">\n                              {new Date(post.createDate).toLocaleDateString()}\n                            </div>\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              ))}\n            </div>\n          ) : view === 'list' ? (\n            <div className=\"post-list-container\">\n              <div className=\"button-container\">\n                <button className=\"back-button\" onClick={goBack}>\n                  뒤로가기\n                </button>\n                <button\n                  className=\"post-button\"\n                  onClick={() => setIsPosting(true)}\n                >\n                  글쓰기\n                </button>\n              </div>\n              <h2 className=\"board-title\">{currentBoard}</h2>\n              {isPosting ? (\n                //게시글 작성\n                <div className=\"createPost-form\">\n                  <input\n                    type=\"text\"\n                    value={subject}\n                    onChange={(e) => setSubject(e.target.value)}\n                    placeholder=\"제목을 입력해주세요\"\n                    className=\"input-field\"\n                  />\n                  <textarea\n                    value={content}\n                    onChange={(e) => setContent(e.target.value)}\n                    placeholder=\"내용을 입력해주세요\"\n                    rows=\"4\"\n                    className=\"input-field\"\n                  ></textarea>\n                  <div className=\"image-preview\">\n                      {postImages.map((image, index) => (\n                        <img\n                          key={index}\n                          src={URL.createObjectURL(image)}\n                          alt={`Uploaded Preview ${index + 1}`}\n                          className=\"uploaded-image\"\n                        />\n                      ))}\n                    </div>\n                    <input\n                    type = \"file\"\n                    multiple\n                    accept=\"image/*\"\n                    onChange={handleImageUpload}\n                  />\n\n                  <div className=\"createPost-button\">\n                    <button\n                      onClick={createPost}\n                      className=\"submit-post-btn\"\n                    >\n                      게시글 작성\n                    </button>\n                    <button\n                      onClick={() => setIsPosting(false)}\n                      className=\"cancel-post-btn\"\n                    >\n                      취소\n                    </button>\n                  </div>\n                </div>\n              ) : \n              //게시글 리스트 \n                (<div className=\"post-list\">\n                  {posts.map((post) => (\n                    <div\n                      key={post.id}\n                      className=\"post-item\"\n                      onClick={() => fetchPostDetail(post.id)}\n                    >\n                      <div className=\"post-title-row\">\n                        <span className=\"post-title\">{post.subject}</span>\n                      </div>\n                      <div className=\"post-meta-row\">\n                        <div className=\"like-section\">\n                          <i\n                            className={`fas fa-thumbs-up like-icon ${\n                              post.liked ? \"liked\" : \"\"\n                            }`}\n                            onClick={(e) => {\n                              e.stopPropagation();\n                              toggleLikeHandler(post.id, false); // 点赞\n                            }}\n                          ></i>\n                        </div>\n                        <div className=\"author-section\">\n                          <span>작성자 : {post.authorName || 'Unknown'}</span>\n                        </div>\n                        <div className=\"date-section\">\n                          <span>\n                            {new Date(post.createDate).toLocaleDateString()}\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n          ) : \n          // 게시글 확인 창\n          view === 'detail' ? (\n            <div className=\"post-list-container\">\n              <button className=\"back-button\" onClick={goBack}>뒤로가기</button>\n              <div className=\"card large-card\">\n                <h2 className=\"board-title\">{selectedPost.subject}</h2>\n                <p><strong>작성자 :</strong> {selectedPost.authorName || 'Unknown'}</p>\n                <p><strong>작성일 :</strong> {new Date(selectedPost.createDate).toLocaleString()}</p>\n                <hr></hr>\n                {postImages && postImages.length > 0 &&(\n                  <div className=\"image-gallery\">\n                    {postImages.map((image, index) => ( \n                      <img\n                        key={index}\n                        src={`/asset/Images/postImage/${image}`}\n                        alt={`Post Image ${index + 1}`}\n                        className=\"post-image\"\n                      />\n                    ))}\n                  </div>\n                )}\n                <div className=\"content\">{selectedPost.content}</div>\n                <div className=\"like-section\">\n                  <i\n                    className={`fas fa-thumbs-up like-icon ${selectedPost.liked ? 'liked' : ''}`}\n                    onClick={() => toggleLikeHandler(selectedPost.id, true)} // 点赞\n                  ></i>\n                </div>\n\n                <div className=\"comment-section\">\n                  <h3>댓글</h3>\n                  <textarea\n                    value={commentContent}\n                    onChange={(e) => setCommentContent(e.target.value)} \n                    placeholder=\"댓글을 입력해주세요...\"\n                    rows=\"4\"\n                  ></textarea>\n                  <button\n                    className=\"comment-submit-btn\"\n                    onClick={() => addComment(selectedPost.id, commentContent)} \n                  >\n                    댓글 쓰기\n                  </button>\n\n                  <div className=\"comments-list\">\n                    {comments.map((comment) => (\n                      <div key={comment.id} className=\"comment-card\">\n                        <p><strong>{comment.authorName || 'Unknown'}</strong> - {new Date(comment.createDate).toLocaleString()}</p>\n                        <p>{comment.content}</p>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              </div>\n            </div>\n          ) : null}\n        </div>\n\n        {/* right */}\n        <div className=\"rightside\">\n          <div className=\"card\">\n            <div className=\"board\">\n              <h3><a href=\"#\">실시간 인기 글</a></h3>\n              <a className=\"article\" href=\"#\">\n                <p className=\"title\">XXX</p>\n                <p className=\"small\">XXXXXX</p>\n              </a>\n            </div>\n          </div>\n          <div className=\"card\">\n            <div className=\"board\">\n              <h3><a href=\"#\">HOT 게시물</a></h3>\n              <a className=\"list\" href=\"#\">\n                <time>10분 전</time>\n                <p>AAAAAAAA</p>\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Community;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}