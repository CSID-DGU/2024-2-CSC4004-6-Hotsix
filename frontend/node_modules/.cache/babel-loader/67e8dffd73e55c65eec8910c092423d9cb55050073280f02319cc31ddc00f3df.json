{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import'../styles/Community.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Community(){const[view,setView]=useState('cards');// Current view state：'cards', 'list', 或 'detail'\nconst[currentBoard,setCurrentBoard]=useState(null);// Current section name\nconst[posts,setPosts]=useState([]);// List of posts in the current section\nconst[selectedPost,setSelectedPost]=useState(null);// Details of the currently selected post\nconst[loading,setLoading]=useState(false);// Loading Status\nconst[latestPosts,setLatestPosts]=useState({});// Stores the latest post for each board\nconst[navigationStack,setNavigationStack]=useState([]);// Path Stack\nconst[likeLoading,setLikeLoading]=useState(false);const[commentContent,setCommentContent]=useState('');// Current comment content\nconst[comments,setComments]=useState([]);// All comments on the current post\nconst[userNum,setUserNum]=useState(null);const userId=sessionStorage.getItem('ID');const[likes,setLikes]=useState({});const[isPosting,setIsPosting]=useState(false);// Controls whether to display the input box for posting new posts\nconst[subject,setSubject]=useState('');const[content,setContent]=useState('');const[postImages,setPostImages]=useState([]);const[profileImagePath,setProfileImagePath]=React.useState(\"\");const handleImageUpload=event=>{const files=event.target.files;// 업로드된 파일 가져오기\nconst fileArray=Array.from(files);// FileList를 배열로 변환\nsetPostImages(prevImages=>[...prevImages,...fileArray]);// 상태 업데이트\n};const boards={자유게시판:'자유게시판',추천게시판:'추천게시판',공지사항:'공지사항',이벤트:'이벤트'};// 유저 이름 가져오기\nconst[userName,setUserName]=useState('');const id=sessionStorage.getItem('ID');//유저 프로필 요청\nReact.useEffect(()=>{if(id){fetch(`/userProfile/${id}`,{// API 요청\nmethod:'GET',headers:{'Content-Type':'application/json'// 필요시 Authorization 헤더 추가\n// 'Authorization': `Bearer ${sessionStorage.getItem('token')}`\n}}).then(response=>{if(!response.ok){throw new Error('Failed to fetch user data');}return response.json();}).then(data=>{setProfileImagePath(data.profileImagePath);// 사용자 이름 설정\n}).catch(error=>{console.error('Error fetching user data:',error);});}},[id]);//유저 이름 불러오기\nuseEffect(()=>{if(id){axios.get(`/userName/${id}`).then(response=>{setUserName(response.data.userName);// 사용자 이름 설정\n}).catch(error=>{console.error('Error fetching user data:',error);});}},[id]);// Get the userNum of the current user\nuseEffect(()=>{if(userId){axios.get(`/userNum/${userId}`).then(response=>{setUserNum(response.data);}).catch(error=>{console.error('Failed to fetch userNum:',error);});}},[userId]);// Get the latest posts in each forum\nuseEffect(()=>{const fetchLatestPosts=async()=>{try{const results={};for(const boardName of Object.values(boards)){const response=await axios.get(`/posts/category/${boardName}/latest`);results[boardName]=response.data.slice(0,4);// Get the latest 4 posts in each forum\n}setLatestPosts(results);}catch(error){console.error('Failed to fetch latest posts:',error);}};fetchLatestPosts();},[]);useEffect(()=>{if(currentBoard){setLoading(true);axios.get(`/posts/category/${currentBoard}`).then(response=>{setPosts(response.data);setLoading(false);}).catch(error=>{console.error('Failed to fetch posts:',error);setLoading(false);});}},[currentBoard]);// 게시물 내용 요청하기(GET)\nconst fetchPostDetail=postId=>{setLoading(true);axios.get(`/posts/${postId}`).then(response=>{const postDTO=response.data.postDTO;const postImagesName=postDTO.postImagesNames;setPostImages(postImagesName);postImagesName.forEach((image,index)=>{console.log(`Image ${index+1}: ${image}`);});const images=postImagesName||[];setSelectedPost({...postDTO,postImagesName:images});setLikes(postDTO.likes);setPostImages(images);// 이미지 배열 설정\nfetchComments(postId);setView('detail');setLoading(false);}).catch(error=>{console.error('Failed to fetch post detail:',error);setLoading(false);});};// 댓글 달기\nconst addComment=(postId,content)=>{if(!content.trim())return;// Preventing Blank Comments\nif(!userNum){alert(\"User not found or userNum is not available.\");return;}const commentData={content:content,author:{userNum:userNum}};axios.post(`/replies?postId=${postId}`,commentData).then(response=>{alert('댓글이 작성되었습니다!');setCommentContent('');fetchComments(postId);}).catch(error=>{console.error('Failed to add comment:',error);});};// 댓글 로드\nconst fetchComments=postId=>{axios.get(`/replies/post/${postId}`).then(response=>{setComments(response.data);}).catch(error=>{console.error('Failed to fetch comments:',error);});};// 게시글 작성\nconst createPost=()=>{if(!userNum){alert(\"User not found or userNum is not available.\");// console.log(\"content : \",content);\nreturn;}if(!subject||!content){alert('Title and content cannot be empty.');// console.log(\"content : \",content);\nreturn;}console.log(\"content : \",content);const formData=new FormData();formData.append('subject',subject);formData.append('content',content);formData.append('category',currentBoard);formData.append('authorUserNum',userNum);// 파일 데이터 추가\nif(postImages.length>0){postImages.forEach(image=>{formData.append(\"postImages\",image);// 같은 키를 사용해도 서버에서 배열로 처리\n});}else{console.log(\"No images to upload\");}axios.post(`/posts/${userId}`,formData,{headers:{'Content-Type':'multipart/form-data'}}).then(response=>{if(response.status==200){alert('게시글 작성이 완료되었습니다!');setSubject('');setContent('');setPostImages([]);setIsPosting(false);fetchPostsByCategory(currentBoard);}}).catch(error=>{console.error('Failed to create post:',error);});};// Delete a post\nconst deletePost=postId=>{if(window.confirm('Are you sure you want to delete this post?')){axios.delete(`/posts/${postId}`).then(()=>{alert('Post deleted successfully!');fetchPostsByCategory(currentBoard);}).catch(error=>{console.error('Failed to delete post:',error);});}};// Update Post\nconst updatePost=(postId,updatedData)=>{axios.put(`/posts/${postId}`,updatedData).then(()=>{alert('Post updated successfully!');fetchPostDetail(postId);}).catch(error=>{console.error('Failed to update post:',error);});};// 좋아요 누르기\nconst toggleLikeHandler=function(postId){let isDetail=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;if(likeLoading)return;// Prevent duplicate clicks\nsetLikeLoading(true);if(!sessionStorage.getItem('ID')){alert('Please log in to like posts.');setLikeLoading(false);return;}setLikes(prevLikes=>({...prevLikes,[postId]:(prevLikes[postId]||0)+1}));axios.post(`/posts/${postId}/like`).then(response=>{const{likeCount,isLiked}=response.data;if(isDetail){setSelectedPost({...selectedPost,liked:isLiked,likeCount});}else{const updatedPosts=posts.map(post=>post.id===postId?{...post,liked:isLiked,likeCount}:post);setPosts(updatedPosts);}}).catch(error=>{console.error('Failed to toggle like:',error);}).finally(()=>{setLikeLoading(false);});};// Unlike a post\nconst unlikePost=postId=>{axios.post(`/posts/${postId}/unlike`).then(response=>{const{likeCount,isLiked}=response.data;const updatedPosts=posts.map(post=>post.id===postId?{...post,liked:isLiked,likeCount}:post);setPosts(updatedPosts);}).catch(error=>{console.error('Failed to unlike post:',error);});};// Back to previous level\nconst goBack=()=>{if(navigationStack.length>0){const lastState=navigationStack.pop();setNavigationStack([...navigationStack]);setView(lastState.view);setCurrentBoard(lastState.currentBoard||null);setPosts(lastState.posts||[]);if(lastState.view==='list'){fetchPostsByCategory(lastState.currentBoard);}}else{setView('cards');setCurrentBoard(null);}};// Get posts by section\nconst fetchPostsByCategory=category=>{setNavigationStack(prevStack=>[...prevStack,{view,currentBoard}]);setLoading(true);setCurrentBoard(category);axios.get(`/posts/category/${category}`).then(response=>{setPosts(response.data);// Update Post List\nsetView('list');// Switch to list view\nsetLoading(false);}).catch(error=>{console.error('Failed to fetch posts for category:',error);setLoading(false);});};return/*#__PURE__*/_jsx(\"div\",{id:\"container\",className:\"community\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"content-area\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"leftside\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"card\",children:/*#__PURE__*/_jsxs(\"form\",{className:\"logged\",children:[/*#__PURE__*/_jsx(\"img\",{src:`/asset/Images/userProfile/${profileImagePath}`,className:\"picture\",alt:\"User\",onError:e=>e.target.src='/asset/Images/altImage/alt.png'}),/*#__PURE__*/_jsx(\"p\",{className:\"nickname\",children:userName})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"card\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"menus\",children:[/*#__PURE__*/_jsx(\"a\",{href:\"/myarticle\",className:\"myarticle\",children:\"\\uB0B4\\uAC00 \\uC4F4 \\uAE00\"}),/*#__PURE__*/_jsx(\"a\",{href:\"/mycommentarticle\",className:\"mycommentarticle\",children:\"\\uB313\\uAE00 \\uB2E8 \\uAE00\"}),/*#__PURE__*/_jsx(\"a\",{href:\"/myscrap\",className:\"myscrap\",children:\"\\uB0B4 \\uC2A4\\uD06C\\uB7A9\"})]})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"main\",children:loading?/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"}):view==='cards'?/*#__PURE__*/_jsx(\"div\",{className:\"card-container\",children:Object.keys(boards).map(boardName=>{var _latestPosts$boards$b;return/*#__PURE__*/_jsx(\"div\",{className:\"board-container\",children:/*#__PURE__*/_jsx(\"table\",{className:\"posts-table\",children:/*#__PURE__*/_jsxs(\"tbody\",{children:[/*#__PURE__*/_jsx(\"tr\",{onClick:()=>fetchPostsByCategory(boards[boardName]),children:/*#__PURE__*/_jsx(\"td\",{style:{textAlign:'left',color:'red'},children:boardName})}),(_latestPosts$boards$b=latestPosts[boards[boardName]])===null||_latestPosts$boards$b===void 0?void 0:_latestPosts$boards$b.map(post=>/*#__PURE__*/_jsx(\"tr\",{onClick:e=>{e.stopPropagation();// Stop bubbling\nfetchPostDetail(post.id);// Get post details\n},children:/*#__PURE__*/_jsxs(\"td\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"left-column\",children:post.subject}),/*#__PURE__*/_jsx(\"div\",{className:\"right-column\",children:new Date(post.createDate).toLocaleDateString()})]})},post.id))]})})},boardName);})}):view==='list'?/*#__PURE__*/_jsxs(\"div\",{className:\"post-list-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"button-container\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"back-button\",onClick:goBack,children:\"\\uB4A4\\uB85C\\uAC00\\uAE30\"}),/*#__PURE__*/_jsx(\"button\",{className:\"post-button\",onClick:()=>setIsPosting(true),children:\"\\uAE00\\uC4F0\\uAE30\"})]}),/*#__PURE__*/_jsx(\"h2\",{className:\"board-title\",children:currentBoard}),isPosting?/*#__PURE__*///게시글 작성\n_jsxs(\"div\",{className:\"createPost-form\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:subject,onChange:e=>setSubject(e.target.value),placeholder:\"\\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",className:\"input-field\"}),/*#__PURE__*/_jsx(\"textarea\",{value:content,onChange:e=>setContent(e.target.value),placeholder:\"\\uB0B4\\uC6A9\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",rows:\"4\",className:\"input-field\"}),/*#__PURE__*/_jsx(\"div\",{className:\"image-preview\",children:postImages.map((image,index)=>/*#__PURE__*/_jsx(\"img\",{src:URL.createObjectURL(image),alt:`Uploaded Preview ${index+1}`,className:\"uploaded-image\"},index))}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",multiple:true,accept:\"image/*\",onChange:handleImageUpload}),/*#__PURE__*/_jsxs(\"div\",{className:\"createPost-button\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:createPost,className:\"submit-post-btn\",children:\"\\uAC8C\\uC2DC\\uAE00 \\uC791\\uC131\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setIsPosting(false),className:\"cancel-post-btn\",children:\"\\uCDE8\\uC18C\"})]})]}):/*#__PURE__*///게시글 리스트 \n_jsx(\"div\",{className:\"post-list\",children:posts.map(post=>/*#__PURE__*/_jsxs(\"div\",{className:\"post-item\",onClick:()=>fetchPostDetail(post.id),children:[/*#__PURE__*/_jsx(\"div\",{className:\"post-title-row\",children:/*#__PURE__*/_jsx(\"span\",{className:\"post-title\",children:post.subject})}),/*#__PURE__*/_jsxs(\"div\",{className:\"post-meta-row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"like-section\",children:/*#__PURE__*/_jsx(\"i\",{className:`fas fa-thumbs-up like-icon ${post.liked?\"liked\":\"\"}`,onClick:e=>{e.stopPropagation();toggleLikeHandler(post.id,false);// 点赞\n}})}),/*#__PURE__*/_jsx(\"div\",{className:\"author-section\",children:/*#__PURE__*/_jsxs(\"span\",{children:[\"\\uC791\\uC131\\uC790 : \",post.authorName||'Unknown']})}),/*#__PURE__*/_jsx(\"div\",{className:\"date-section\",children:/*#__PURE__*/_jsx(\"span\",{children:new Date(post.createDate).toLocaleDateString()})})]})]},post.id))})]}):// 게시글 확인 창\nview==='detail'?/*#__PURE__*/_jsxs(\"div\",{className:\"post-list-container\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"back-button\",onClick:goBack,children:\"\\uB4A4\\uB85C\\uAC00\\uAE30\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"card large-card\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"board-title\",children:selectedPost.subject}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\uC791\\uC131\\uC790 :\"}),\" \",selectedPost.authorName||'Unknown']}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\uC791\\uC131\\uC77C :\"}),\" \",new Date(selectedPost.createDate).toLocaleString()]}),/*#__PURE__*/_jsx(\"hr\",{}),postImages&&postImages.length>0&&/*#__PURE__*/_jsx(\"div\",{className:\"image-gallery\",children:postImages.map((image,index)=>/*#__PURE__*/_jsx(\"img\",{src:`/asset/Images/postImage/${image}`,alt:`Post Image ${index+1}`,className:\"post-image\"},index))}),/*#__PURE__*/_jsx(\"div\",{className:\"content\",children:selectedPost.content}),/*#__PURE__*/_jsx(\"div\",{className:\"like-section\",children:/*#__PURE__*/_jsx(\"i\",{className:`fas fa-thumbs-up like-icon ${selectedPost.liked?'liked':''}`,onClick:()=>toggleLikeHandler(selectedPost.id,true)// 点赞\n})}),/*#__PURE__*/_jsxs(\"div\",{className:\"comment-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uB313\\uAE00\"}),/*#__PURE__*/_jsx(\"textarea\",{value:commentContent,onChange:e=>setCommentContent(e.target.value),placeholder:\"\\uB313\\uAE00\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694...\",rows:\"4\"}),/*#__PURE__*/_jsx(\"button\",{className:\"comment-submit-btn\",onClick:()=>addComment(selectedPost.id,commentContent),children:\"\\uB313\\uAE00 \\uC4F0\\uAE30\"}),/*#__PURE__*/_jsx(\"div\",{className:\"comments-list\",children:comments.map(comment=>/*#__PURE__*/_jsxs(\"div\",{className:\"comment-card\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:comment.authorName||'Unknown'}),\" - \",new Date(comment.createDate).toLocaleString()]}),/*#__PURE__*/_jsx(\"p\",{children:comment.content})]},comment.id))})]})]})]}):null}),/*#__PURE__*/_jsxs(\"div\",{className:\"rightside\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"card\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"board\",children:[/*#__PURE__*/_jsx(\"h3\",{children:/*#__PURE__*/_jsx(\"a\",{href:\"#\",children:\"\\uC2E4\\uC2DC\\uAC04 \\uC778\\uAE30 \\uAE00\"})}),/*#__PURE__*/_jsxs(\"a\",{className:\"article\",href:\"#\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"title\",children:\"XXX\"}),/*#__PURE__*/_jsx(\"p\",{className:\"small\",children:\"XXXXXX\"})]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"card\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"board\",children:[/*#__PURE__*/_jsx(\"h3\",{children:/*#__PURE__*/_jsx(\"a\",{href:\"#\",children:\"HOT \\uAC8C\\uC2DC\\uBB3C\"})}),/*#__PURE__*/_jsxs(\"a\",{className:\"list\",href:\"#\",children:[/*#__PURE__*/_jsx(\"time\",{children:\"10\\uBD84 \\uC804\"}),/*#__PURE__*/_jsx(\"p\",{children:\"AAAAAAAA\"})]})]})})]})]})});}export default Community;","map":{"version":3,"names":["React","useState","useEffect","axios","jsx","_jsx","jsxs","_jsxs","Community","view","setView","currentBoard","setCurrentBoard","posts","setPosts","selectedPost","setSelectedPost","loading","setLoading","latestPosts","setLatestPosts","navigationStack","setNavigationStack","likeLoading","setLikeLoading","commentContent","setCommentContent","comments","setComments","userNum","setUserNum","userId","sessionStorage","getItem","likes","setLikes","isPosting","setIsPosting","subject","setSubject","content","setContent","postImages","setPostImages","profileImagePath","setProfileImagePath","handleImageUpload","event","files","target","fileArray","Array","from","prevImages","boards","자유게시판","추천게시판","공지사항","이벤트","userName","setUserName","id","fetch","method","headers","then","response","ok","Error","json","data","catch","error","console","get","fetchLatestPosts","results","boardName","Object","values","slice","fetchPostDetail","postId","postDTO","postImagesName","postImagesNames","forEach","image","index","log","images","fetchComments","addComment","trim","alert","commentData","author","post","createPost","formData","FormData","append","length","status","fetchPostsByCategory","deletePost","window","confirm","delete","updatePost","updatedData","put","toggleLikeHandler","isDetail","arguments","undefined","prevLikes","likeCount","isLiked","liked","updatedPosts","map","finally","unlikePost","goBack","lastState","pop","category","prevStack","className","children","src","alt","onError","e","href","keys","_latestPosts$boards$b","onClick","style","textAlign","color","stopPropagation","Date","createDate","toLocaleDateString","type","value","onChange","placeholder","rows","URL","createObjectURL","multiple","accept","authorName","toLocaleString","comment"],"sources":["C:/Users/hsson/IdeaProjects/2024-2-CSC4004-6-Hotsix/frontend/src/components/Community.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../styles/Community.css';\n\nfunction Community() {\n  const [view, setView] = useState('cards'); // Current view state：'cards', 'list', 或 'detail'\n  const [currentBoard, setCurrentBoard] = useState(null); // Current section name\n  const [posts, setPosts] = useState([]); // List of posts in the current section\n  const [selectedPost, setSelectedPost] = useState(null); // Details of the currently selected post\n  const [loading, setLoading] = useState(false); // Loading Status\n  const [latestPosts, setLatestPosts] = useState({}); // Stores the latest post for each board\n  const [navigationStack, setNavigationStack] = useState([]); // Path Stack\n  const [likeLoading, setLikeLoading] = useState(false);\n  const [commentContent, setCommentContent] = useState(''); // Current comment content\n  const [comments, setComments] = useState([]); // All comments on the current post\n  const [userNum, setUserNum] = useState(null);\n  const userId = sessionStorage.getItem('ID'); \n  const [likes, setLikes] = useState({});\n  const [isPosting, setIsPosting] = useState(false); // Controls whether to display the input box for posting new posts\n  const [subject, setSubject] = useState('');\n  const [content, setContent] = useState('');\n  const [postImages,setPostImages] = useState([]);\n  const [profileImagePath, setProfileImagePath] = React.useState(\"\");\n\n  const handleImageUpload = (event) => {\n    const files = event.target.files; // 업로드된 파일 가져오기\n    const fileArray = Array.from(files); // FileList를 배열로 변환\n    setPostImages((prevImages) => [...prevImages, ...fileArray]); // 상태 업데이트\n  };\n\n  const boards = {\n    자유게시판: '자유게시판',\n    추천게시판: '추천게시판',\n    공지사항: '공지사항',\n    이벤트: '이벤트',\n  };\n\n  // 유저 이름 가져오기\n  const [userName, setUserName] = useState('');\n  const id = sessionStorage.getItem('ID');\n  \n  //유저 프로필 요청\n  React.useEffect(() => {\n    if(id){\n      fetch(`/userProfile/${id}`, { // API 요청\n          method: 'GET',\n          headers: {\n              'Content-Type': 'application/json',\n              // 필요시 Authorization 헤더 추가\n              // 'Authorization': `Bearer ${sessionStorage.getItem('token')}`\n          },\n  } )\n      .then(response => {\n          if (!response.ok) {\n              throw new Error('Failed to fetch user data');\n          }\n          return response.json();\n      })\n      .then(data => {\n          setProfileImagePath(data.profileImagePath); // 사용자 이름 설정\n      })\n      .catch(error => {\n          console.error('Error fetching user data:', error);\n      })\n    }\n  }, [id]);\n  //유저 이름 불러오기\n  useEffect(() => {\n    if (id) {\n      axios\n        .get(`/userName/${id}`)\n        .then((response) => {\n          setUserName(response.data.userName); // 사용자 이름 설정\n        })\n        .catch((error) => {\n          console.error('Error fetching user data:', error);\n        });\n    }\n  }, [id]);\n\n  // Get the userNum of the current user\n  useEffect(() => {\n    if (userId) {\n      axios\n        .get(`/userNum/${userId}`)\n        .then((response) => {\n          setUserNum(response.data);\n        })\n        .catch((error) => {\n          console.error('Failed to fetch userNum:', error);\n        });\n    }\n  }, [userId]);\n\n  // Get the latest posts in each forum\n  useEffect(() => {\n    const fetchLatestPosts = async () => {\n      try {\n        const results = {};\n        for (const boardName of Object.values(boards)) {\n          const response = await axios.get(`/posts/category/${boardName}/latest`);\n          results[boardName] = response.data.slice(0, 4); // Get the latest 4 posts in each forum\n        }\n        setLatestPosts(results);\n      } catch (error) {\n        console.error('Failed to fetch latest posts:', error);\n      }\n    };\n    fetchLatestPosts();\n  }, []);\n\n  useEffect(() => {\n    if (currentBoard) {\n      setLoading(true);\n      axios\n        .get(`/posts/category/${currentBoard}`)\n        .then((response) => {\n          setPosts(response.data);\n          setLoading(false);\n        })\n        .catch((error) => {\n          console.error('Failed to fetch posts:', error);\n          setLoading(false);\n        });\n    }\n  }, [currentBoard]);\n\n  // 게시물 내용 요청하기(GET)\n  const fetchPostDetail = (postId) => {\n    setLoading(true);\n    axios\n      .get(`/posts/${postId}`)\n      .then((response) => {\n        const postDTO = response.data.postDTO;\n        const postImagesName = postDTO.postImagesNames;\n\n        setPostImages(postImagesName);\n\n        postImagesName.forEach((image, index) => {\n          console.log(`Image ${index + 1}: ${image}`);\n        });\n        const images = postImagesName || [];\n        setSelectedPost({\n          ...postDTO,\n          postImagesName: images,\n        });\n        setLikes(postDTO.likes);\n        setPostImages(images); // 이미지 배열 설정\n        fetchComments(postId); \n        setView('detail');\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.error('Failed to fetch post detail:', error);\n        setLoading(false);\n      });\n  };\n\n  // 댓글 달기\n  const addComment = (postId, content) => {\n    if (!content.trim()) return; // Preventing Blank Comments\n\n    if (!userNum) {\n      alert(\"User not found or userNum is not available.\");\n      return;\n    }\n\n    const commentData = {\n      content: content,\n      author: { userNum: userNum },\n    };\n\n    axios\n      .post(`/replies?postId=${postId}`, commentData)\n      .then((response) => {\n        alert('댓글이 작성되었습니다!');\n        setCommentContent('');\n\n        fetchComments(postId);\n      })\n      .catch((error) => {\n        console.error('Failed to add comment:', error);\n      });\n  };\n\n  // 댓글 로드\n  const fetchComments = (postId) => {\n    axios\n      .get(`/replies/post/${postId}`)\n      .then((response) => {\n        setComments(response.data); \n      })\n      .catch((error) => {\n        console.error('Failed to fetch comments:', error);\n      });\n  };\n\n  // 게시글 작성\n  const createPost = () => {\n    if (!userNum) {\n      alert(\"User not found or userNum is not available.\");\n      // console.log(\"content : \",content);\n      return;\n    }\n\n    if (!subject || !content) {\n      alert('Title and content cannot be empty.');\n      // console.log(\"content : \",content);\n      return;\n    }\n    console.log(\"content : \",content);\n    const formData = new FormData();\n    formData.append('subject', subject);\n    formData.append('content', content);\n    formData.append('category', currentBoard);\n    formData.append('authorUserNum', userNum);\n\n    // 파일 데이터 추가\n    if (postImages.length > 0) {\n      postImages.forEach((image) => {\n        formData.append(\"postImages\", image); // 같은 키를 사용해도 서버에서 배열로 처리\n      });\n    } else {\n      console.log(\"No images to upload\");\n    }\n    axios\n      .post(`/posts/${userId}`, formData,{\n        headers: { 'Content-Type': 'multipart/form-data' }\n      }\n        \n      )\n      .then((response) => {\n        if(response.status == 200){\n          alert('게시글 작성이 완료되었습니다!');\n          setSubject(''); \n          setContent(''); \n          setPostImages([]);\n          setIsPosting(false); \n          fetchPostsByCategory(currentBoard); \n        }\n      })\n      .catch((error) => {\n        console.error('Failed to create post:', error);\n      });\n  };\n\n  // Delete a post\n  const deletePost = (postId) => {\n    if (window.confirm('Are you sure you want to delete this post?')) {\n      axios\n        .delete(`/posts/${postId}`)\n        .then(() => {\n          alert('Post deleted successfully!');\n          fetchPostsByCategory(currentBoard); \n        })\n        .catch((error) => {\n          console.error('Failed to delete post:', error);\n        });\n    }\n  };\n\n  // Update Post\n  const updatePost = (postId, updatedData) => {\n    axios\n      .put(`/posts/${postId}`, updatedData) \n      .then(() => {\n        alert('Post updated successfully!');\n        fetchPostDetail(postId); \n      })\n      .catch((error) => {\n        console.error('Failed to update post:', error);\n      });\n  };\n\n  // 좋아요 누르기\n  const toggleLikeHandler = (postId, isDetail = false) => {\n    if (likeLoading) return; // Prevent duplicate clicks\n    setLikeLoading(true);\n\n    if (!sessionStorage.getItem('ID')) {\n      alert('Please log in to like posts.');\n      setLikeLoading(false);\n      return;\n    }\n\n    setLikes((prevLikes) => ({\n      ...prevLikes,\n      [postId]: (prevLikes[postId] || 0) + 1, \n    }));\n\n    axios\n      .post(`/posts/${postId}/like`) \n      .then((response) => {\n        const { likeCount, isLiked } = response.data;\n\n        if (isDetail) {\n          setSelectedPost({\n            ...selectedPost,\n            liked: isLiked,\n            likeCount,\n          });\n        } else {\n          const updatedPosts = posts.map((post) =>\n            post.id === postId ? { ...post, liked: isLiked, likeCount } : post\n          );\n          setPosts(updatedPosts);\n        }\n      })\n      .catch((error) => {\n        console.error('Failed to toggle like:', error);\n      })\n      .finally(() => {\n        setLikeLoading(false);\n      });\n  };\n\n  // Unlike a post\n  const unlikePost = (postId) => {\n    axios\n      .post(`/posts/${postId}/unlike`) \n      .then((response) => {\n        const { likeCount, isLiked } = response.data;\n        const updatedPosts = posts.map((post) =>\n          post.id === postId ? { ...post, liked: isLiked, likeCount } : post\n        );\n        setPosts(updatedPosts);\n      })\n      .catch((error) => {\n        console.error('Failed to unlike post:', error);\n      });\n  };\n\n  // Back to previous level\n  const goBack = () => {\n    if (navigationStack.length > 0) {\n      const lastState = navigationStack.pop();\n      setNavigationStack([...navigationStack]);\n\n      setView(lastState.view);\n      setCurrentBoard(lastState.currentBoard || null);\n      setPosts(lastState.posts || []);\n\n      if (lastState.view === 'list') {\n        fetchPostsByCategory(lastState.currentBoard); \n      }\n    } else {\n      setView('cards');\n      setCurrentBoard(null);\n    }\n  };\n\n  // Get posts by section\n  const fetchPostsByCategory = (category) => {\n    setNavigationStack((prevStack) => [...prevStack, { view, currentBoard }]);\n    setLoading(true);\n    setCurrentBoard(category);\n\n    axios\n      .get(`/posts/category/${category}`)\n      .then((response) => {\n        setPosts(response.data); // Update Post List\n        setView('list'); // Switch to list view\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.error('Failed to fetch posts for category:', error);\n        setLoading(false);\n      });\n  };\n\n  return (\n    <div id=\"container\" className=\"community\">\n      <div className=\"content-area\">\n        {/* Left  */}\n        <div className=\"leftside\">\n          <div className=\"card\">\n            <form className=\"logged\">\n              <img \n                  src={`/asset/Images/userProfile/${profileImagePath}`} \n                  className=\"picture\" \n                  alt=\"User\" \n                  onError={(e) => e.target.src = '/asset/Images/altImage/alt.png'} \n              />\n              <p className=\"nickname\">{userName}</p>\n            </form>\n          </div>\n          <div className=\"card\">\n            <div className=\"menus\">\n              <a href=\"/myarticle\" className=\"myarticle\">내가 쓴 글</a>\n              <a href=\"/mycommentarticle\" className=\"mycommentarticle\">댓글 단 글</a>\n              <a href=\"/myscrap\" className=\"myscrap\">내 스크랩</a>\n            </div>\n          </div>\n        </div>\n\n        {/* mid */}\n        <div className=\"main\">\n          {loading ? (\n            <p>Loading...</p>\n          ) : view === 'cards' ? (\n            <div className=\"card-container\">\n              {Object.keys(boards).map((boardName) => (\n                <div key={boardName} className=\"board-container\">\n                  <table className=\"posts-table\">\n                    <tbody>\n                      <tr onClick={() => fetchPostsByCategory(boards[boardName])}>\n                        <td style={{ textAlign: 'left', color: 'red' }}>\n                          {boardName}\n                        </td>\n                      </tr>\n                      {latestPosts[boards[boardName]]?.map((post) => (\n                        <tr\n                          key={post.id}\n                          onClick={(e) => {\n                            e.stopPropagation(); // Stop bubbling\n                            fetchPostDetail(post.id); // Get post details\n                          }}\n                        >\n                          <td>\n                            <div className=\"left-column\">{post.subject}</div>\n                            <div className=\"right-column\">\n                              {new Date(post.createDate).toLocaleDateString()}\n                            </div>\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              ))}\n            </div>\n          ) : view === 'list' ? (\n            <div className=\"post-list-container\">\n              <div className=\"button-container\">\n                <button className=\"back-button\" onClick={goBack}>\n                  뒤로가기\n                </button>\n                <button\n                  className=\"post-button\"\n                  onClick={() => setIsPosting(true)}\n                >\n                  글쓰기\n                </button>\n              </div>\n              <h2 className=\"board-title\">{currentBoard}</h2>\n              {isPosting ? (\n                //게시글 작성\n                <div className=\"createPost-form\">\n                  <input\n                    type=\"text\"\n                    value={subject}\n                    onChange={(e) => setSubject(e.target.value)}\n                    placeholder=\"제목을 입력해주세요\"\n                    className=\"input-field\"\n                  />\n                  <textarea\n                    value={content}\n                    onChange={(e) => setContent(e.target.value)}\n                    placeholder=\"내용을 입력해주세요\"\n                    rows=\"4\"\n                    className=\"input-field\"\n                  ></textarea>\n                  <div className=\"image-preview\">\n                      {postImages.map((image, index) => (\n                        <img\n                          key={index}\n                          src={URL.createObjectURL(image)}\n                          alt={`Uploaded Preview ${index + 1}`}\n                          className=\"uploaded-image\"\n                        />\n                      ))}\n                    </div>\n                    <input\n                    type = \"file\"\n                    multiple\n                    accept=\"image/*\"\n                    onChange={handleImageUpload}\n                  />\n\n                  <div className=\"createPost-button\">\n                    <button\n                      onClick={createPost}\n                      className=\"submit-post-btn\"\n                    >\n                      게시글 작성\n                    </button>\n                    <button\n                      onClick={() => setIsPosting(false)}\n                      className=\"cancel-post-btn\"\n                    >\n                      취소\n                    </button>\n                  </div>\n                </div>\n              ) : \n              //게시글 리스트 \n                (<div className=\"post-list\">\n                  {posts.map((post) => (\n                    <div\n                      key={post.id}\n                      className=\"post-item\"\n                      onClick={() => fetchPostDetail(post.id)}\n                    >\n                      <div className=\"post-title-row\">\n                        <span className=\"post-title\">{post.subject}</span>\n                      </div>\n                      <div className=\"post-meta-row\">\n                        <div className=\"like-section\">\n                          <i\n                            className={`fas fa-thumbs-up like-icon ${\n                              post.liked ? \"liked\" : \"\"\n                            }`}\n                            onClick={(e) => {\n                              e.stopPropagation();\n                              toggleLikeHandler(post.id, false); // 点赞\n                            }}\n                          ></i>\n                        </div>\n                        <div className=\"author-section\">\n                          <span>작성자 : {post.authorName || 'Unknown'}</span>\n                        </div>\n                        <div className=\"date-section\">\n                          <span>\n                            {new Date(post.createDate).toLocaleDateString()}\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n          ) : \n          // 게시글 확인 창\n          view === 'detail' ? (\n            <div className=\"post-list-container\">\n              <button className=\"back-button\" onClick={goBack}>뒤로가기</button>\n              <div className=\"card large-card\">\n                <h2 className=\"board-title\">{selectedPost.subject}</h2>\n                <p><strong>작성자 :</strong> {selectedPost.authorName || 'Unknown'}</p>\n                <p><strong>작성일 :</strong> {new Date(selectedPost.createDate).toLocaleString()}</p>\n                <hr></hr>\n                {postImages && postImages.length > 0 &&(\n                  <div className=\"image-gallery\">\n                    {postImages.map((image, index) => ( \n                      <img\n                        key={index}\n                        src={`/asset/Images/postImage/${image}`}\n                        alt={`Post Image ${index + 1}`}\n                        className=\"post-image\"\n                      />\n                    ))}\n                  </div>\n                )}\n                <div className=\"content\">{selectedPost.content}</div>\n                <div className=\"like-section\">\n                  <i\n                    className={`fas fa-thumbs-up like-icon ${selectedPost.liked ? 'liked' : ''}`}\n                    onClick={() => toggleLikeHandler(selectedPost.id, true)} // 点赞\n                  ></i>\n                </div>\n\n                <div className=\"comment-section\">\n                  <h3>댓글</h3>\n                  <textarea\n                    value={commentContent}\n                    onChange={(e) => setCommentContent(e.target.value)} \n                    placeholder=\"댓글을 입력해주세요...\"\n                    rows=\"4\"\n                  ></textarea>\n                  <button\n                    className=\"comment-submit-btn\"\n                    onClick={() => addComment(selectedPost.id, commentContent)} \n                  >\n                    댓글 쓰기\n                  </button>\n\n                  <div className=\"comments-list\">\n                    {comments.map((comment) => (\n                      <div key={comment.id} className=\"comment-card\">\n                        <p><strong>{comment.authorName || 'Unknown'}</strong> - {new Date(comment.createDate).toLocaleString()}</p>\n                        <p>{comment.content}</p>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              </div>\n            </div>\n          ) : null}\n        </div>\n\n        {/* right */}\n        <div className=\"rightside\">\n          <div className=\"card\">\n            <div className=\"board\">\n              <h3><a href=\"#\">실시간 인기 글</a></h3>\n              <a className=\"article\" href=\"#\">\n                <p className=\"title\">XXX</p>\n                <p className=\"small\">XXXXXX</p>\n              </a>\n            </div>\n          </div>\n          <div className=\"card\">\n            <div className=\"board\">\n              <h3><a href=\"#\">HOT 게시물</a></h3>\n              <a className=\"list\" href=\"#\">\n                <time>10분 전</time>\n                <p>AAAAAAAA</p>\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Community;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}