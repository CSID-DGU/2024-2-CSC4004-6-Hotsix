{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/RecommendationCourse.css';\nimport { useNavigate } from 'react-router-dom';\nfunction RecommendationCourse() {\n  _s();\n  const [currentPage, setCurrentPage] = useState(1);\n\n  //session ID 확인\n  const id = sessionStorage.getItem(\"ID\");\n\n  //navigate\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    requiredLocation: '',\n    activityPreference: false,\n    dayBudgetRange: '',\n    requiredCourse: '',\n    transportType: '',\n    startTime: ''\n  });\n\n  // 지역 리스트\n  const seoulRegions = ['종로', '강북', '의정부', '노원', '광화문', '이태원', '신촌', '홍대', '강남', '건대', '동작', '용산'];\n\n  // 페이지 이동 핸들러\n  const handleNext = () => setCurrentPage(prev => Math.min(prev + 1, 4));\n  const handleBack = () => setCurrentPage(prev => Math.max(prev - 1, 1));\n\n  // 폼 데이터 업데이트\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: type === 'checkbox' ? checked : value\n    }));\n    console.log('Updated formData (handleChange):', formData);\n  };\n\n  // 지역 선택 핸들러\n  const handleRegionSelect = region => {\n    setFormData(prev => ({\n      ...prev,\n      requiredLocation: region\n    }));\n    console.log('Updated formData (handleRegionSelect):', formData);\n    handleNext(); // 선택 후 다음 페이지로 이동\n  };\n  //선호도 조사 제출\n  const submitResult = async () => {\n    console.log('Submitting formData:', formData);\n    try {\n      const response = await fetch(`recommendationCourse/${id}`, {\n        method: `POST`,\n        body: JSON.stringify(formData),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        window.alert('제출되었습니다!');\n      } else {\n        window.alert('문제가 발생했습니다.잠시 후 다시 시도해주세요!');\n      }\n    } catch (error) {\n      // 네트워크 오류 처리\n      console.error('Error occurred:', error);\n      window.alert('서버와 통신 중 문제가 발생했습니다. 다시 시도해주세요.');\n    }\n  };\n\n  // 페이지 렌더링 함수\n  const renderPage = () => {\n    switch (currentPage) {\n      case 1:\n        return /*#__PURE__*/React.createElement('div', {\n          className: 'form-page regions-page'\n        }, /*#__PURE__*/React.createElement('h2', null, '지역을 선택하세요'), /*#__PURE__*/React.createElement('div', {\n          className: 'region-grid'\n        }, seoulRegions.map(region => /*#__PURE__*/React.createElement('button', {\n          key: region,\n          className: `region-button`,\n          onClick: () => handleRegionSelect(region)\n        }, region))));\n      case 2:\n        return /*#__PURE__*/React.createElement('div', {\n          className: 'form-page'\n        }, /*#__PURE__*/React.createElement('h2', null, '선호도 조사 - 사용자 취향'), /*#__PURE__*/React.createElement('label', {\n          className: 'inline-label'\n        }, '액티비티 선호 여부 (선호 시 클릭)', /*#__PURE__*/React.createElement('div', {\n          className: 'checkbox-wrapper'\n        }, /*#__PURE__*/React.createElement('span', null, '예:'), /*#__PURE__*/React.createElement('input', {\n          type: 'checkbox',\n          name: 'activityPreference',\n          checked: formData.activityPreference,\n          onChange: handleChange\n        }))), /*#__PURE__*/React.createElement('div', {\n          className: 'form-page'\n        }, /*#__PURE__*/React.createElement('h2', null, '선호도 조사 - 지역 및 코스'), /*#__PURE__*/React.createElement('label', null, '필수 코스:', /*#__PURE__*/React.createElement('input', {\n          type: 'text',\n          name: 'requiredCourse',\n          value: formData.requiredCourse,\n          onChange: e => setFormData(prev => ({\n            ...prev,\n            requiredCourse: e.target.value\n          })),\n          placeholder: '예: 롯데월드, 한강공원'\n        }))));\n      case 3:\n        return /*#__PURE__*/React.createElement('div', {\n          className: 'form-page'\n        }, /*#__PURE__*/React.createElement('h2', null, '선호도 조사 - 기타 정보'), /*#__PURE__*/React.createElement('label', null, '교통수단:', /*#__PURE__*/React.createElement('select', {\n          name: 'transportation',\n          value: formData.transportType,\n          onChange: handleChange\n        }, /*#__PURE__*/React.createElement('option', {\n          value: ''\n        }, '선택하세요'), /*#__PURE__*/React.createElement('option', {\n          value: '자가용'\n        }, '자가용'), /*#__PURE__*/React.createElement('option', {\n          value: '대중교통'\n        }, '대중교통'), /*#__PURE__*/React.createElement('option', {\n          value: '도보'\n        }, '도보'))), /*#__PURE__*/React.createElement('label', null, '데이트 시작 시간:', /*#__PURE__*/React.createElement('input', {\n          type: 'time',\n          name: 'startTime',\n          value: formData.startTime,\n          onChange: handleChange\n        })), /*#__PURE__*/React.createElement('label', null, '당일 예산 (단위:만원):', /*#__PURE__*/React.createElement('input', {\n          type: 'number',\n          name: 'dayBudgetRange',\n          value: formData.dayBudgetRange,\n          onChange: handleChange,\n          placeholder: '예: 5'\n        })));\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/React.createElement('div', {\n    className: 'survey-form'\n  }, renderPage(), /*#__PURE__*/React.createElement('div', {\n    className: 'navigation-buttons'\n  }, currentPage > 1 && /*#__PURE__*/React.createElement('button', {\n    className: 'prev-button',\n    onClick: handleBack\n  }, '뒤로'), currentPage < 3 && currentPage > 1 && /*#__PURE__*/React.createElement('button', {\n    className: 'next-button',\n    onClick: handleNext\n  }, '다음'), currentPage === 3 && /*#__PURE__*/React.createElement('button', {\n    className: 'commit-button',\n    onClick: () => {\n      // 제출 시 동작\n      submitResult();\n      console.log(formData);\n    }\n  }, '제출')));\n}\n_s(RecommendationCourse, \"vR7Ro+r18HNzZ/bitRYcUOjEbAQ=\", false, function () {\n  return [useNavigate];\n});\n_c = RecommendationCourse;\nexport default RecommendationCourse;\nvar _c;\n$RefreshReg$(_c, \"RecommendationCourse\");","map":{"version":3,"names":["React","useState","useNavigate","RecommendationCourse","_s","currentPage","setCurrentPage","id","sessionStorage","getItem","navigate","formData","setFormData","requiredLocation","activityPreference","dayBudgetRange","requiredCourse","transportType","startTime","seoulRegions","handleNext","prev","Math","min","handleBack","max","handleChange","e","name","value","type","checked","target","console","log","handleRegionSelect","region","submitResult","response","fetch","method","body","JSON","stringify","headers","ok","window","alert","error","renderPage","createElement","className","map","key","onClick","onChange","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/hsson/IdeaProjects/2024-2-CSC4004-6-Hotsix/frontend/src/components/RecommendationCourse.js"],"sourcesContent":["import React, { useState } from 'react';\nimport '../styles/RecommendationCourse.css';\nimport { useNavigate } from 'react-router-dom';\n\n\nfunction RecommendationCourse() {\n  const [currentPage, setCurrentPage] = useState(1);\n\n  //session ID 확인\n  const id = sessionStorage.getItem(\"ID\");\n\n  //navigate\n  const navigate = useNavigate();\n\n  const [formData, setFormData] = useState({\n    requiredLocation: '',\n    activityPreference: false,\n    dayBudgetRange: '',\n    requiredCourse: '',\n    transportType: '',\n    startTime: '',\n  });\n\n  // 지역 리스트\n  const seoulRegions = [\n    '종로', '강북', '의정부', '노원', '광화문', '이태원',\n    '신촌', '홍대', '강남', '건대', '동작', '용산',\n  ];\n\n  // 페이지 이동 핸들러\n  const handleNext = () => setCurrentPage((prev) => Math.min(prev + 1, 4));\n  const handleBack = () => setCurrentPage((prev) => Math.max(prev - 1, 1));\n\n  // 폼 데이터 업데이트\n  const handleChange = (e) => {\n      const { name, value, type, checked } = e.target;\n      setFormData((prev) => ({\n        ...prev,\n        [name]: type === 'checkbox' ? checked : value,\n      }));\n      console.log('Updated formData (handleChange):', formData);\n    };\n\n  // 지역 선택 핸들러\n  const handleRegionSelect = (region) => {\n    setFormData((prev) => ({\n      ...prev,\n      requiredLocation : region,\n    }));\n    console.log('Updated formData (handleRegionSelect):', formData);\n    handleNext(); // 선택 후 다음 페이지로 이동\n  };\n  //선호도 조사 제출\n    const submitResult =  async () => {\n      console.log('Submitting formData:', formData);\n      try {\n        \n        const response = await fetch(`recommendationCourse/${id}`,{\n          method: `POST`,\n          body: JSON.stringify(formData),\n          headers: { 'Content-Type': 'application/json' },\n        },)\n        if(response.ok){\n          window.alert('제출되었습니다!');       \n        }\n        else{\n          window.alert('문제가 발생했습니다.잠시 후 다시 시도해주세요!');\n        }\n      }\n      catch (error) {\n        // 네트워크 오류 처리\n        console.error('Error occurred:', error);\n        window.alert('서버와 통신 중 문제가 발생했습니다. 다시 시도해주세요.');\n      }\n  }\n\n  // 페이지 렌더링 함수\n  const renderPage = () => {\n    switch (currentPage) {\n      case 1:\n        return React.createElement(\n          'div',\n          { className: 'form-page regions-page' },\n          React.createElement('h2', null, '지역을 선택하세요'),\n          React.createElement(\n            'div',\n            { className: 'region-grid' },\n            seoulRegions.map((region) =>\n              React.createElement(\n                'button',\n                {\n                  key: region,\n                  className: `region-button`,\n                  onClick: () => handleRegionSelect(region),\n                },\n                region\n              )\n            )\n          )\n        );\n      case 2:\n        return React.createElement(\n          'div',\n          { className: 'form-page' },\n          React.createElement('h2', null, '선호도 조사 - 사용자 취향'),          \n          React.createElement(\n            'label',\n            { className: 'inline-label' },\n            '액티비티 선호 여부 (선호 시 클릭)',\n            React.createElement(\n              'div',\n              { className: 'checkbox-wrapper' },\n              React.createElement('span', null, '예:'),\n              React.createElement('input', {\n                type: 'checkbox',\n                name: 'activityPreference',\n                checked: formData.activityPreference,\n                onChange: handleChange,\n              })\n            )\n          ),\n          React.createElement(\n            'div',\n            { className: 'form-page' },\n            React.createElement('h2', null, '선호도 조사 - 지역 및 코스'),\n            React.createElement(\n              'label',\n              null,\n              '필수 코스:',\n              React.createElement('input', {\n                type: 'text',\n                name: 'requiredCourse',\n                value: formData.requiredCourse,\n                onChange: (e) =>\n                  setFormData((prev) => ({\n                    ...prev,\n                    requiredCourse: e.target.value,\n                  })),\n                placeholder: '예: 롯데월드, 한강공원',\n              })\n            ),\n          )\n        );\n      case 3:\n        return React.createElement(\n          'div',\n          { className: 'form-page' },\n          React.createElement('h2', null, '선호도 조사 - 기타 정보'),\n          React.createElement(\n            'label',\n            null,\n            '교통수단:',\n            React.createElement(\n              'select',\n              {\n                name: 'transportation',\n                value: formData.transportType,\n                onChange: handleChange,\n              },\n              React.createElement('option', { value: '' }, '선택하세요'),\n              React.createElement('option', { value: '자가용' }, '자가용'),\n              React.createElement('option', { value: '대중교통' }, '대중교통'),\n              React.createElement('option', { value: '도보' }, '도보')\n            )\n          ),\n          React.createElement(\n            'label',\n            null,\n            '데이트 시작 시간:',\n            React.createElement('input', {\n              type: 'time',\n              name: 'startTime',\n              value: formData.startTime,\n              onChange: handleChange,\n            })\n          ),\n          React.createElement(\n            'label',\n            null,\n            '당일 예산 (단위:만원):',\n            React.createElement('input', {\n              type: 'number',\n              name: 'dayBudgetRange',\n              value: formData.dayBudgetRange,\n              onChange: handleChange,\n              placeholder: '예: 5',\n            })\n          )\n        );\n      default:\n        return null;\n    }\n  };\n\n  return React.createElement(\n    'div',\n    { className: 'survey-form' },\n    renderPage(),\n    React.createElement(\n      'div',\n      { className: 'navigation-buttons' },\n      currentPage > 1 &&\n        React.createElement('button', { className: 'prev-button', onClick: handleBack }, '뒤로'),\n      currentPage < 3 && currentPage > 1 &&\n        React.createElement(\n          'button',\n          { className: 'next-button', onClick: handleNext },\n          '다음'\n        ),\n      currentPage === 3 &&\n        React.createElement(\n          'button',\n          { className: 'commit-button', onClick: () => {\n            // 제출 시 동작\n              submitResult();\n              console.log(formData)\n            } \n          },\n          '제출'\n        )\n    )\n  );\n}\n\nexport default RecommendationCourse;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}