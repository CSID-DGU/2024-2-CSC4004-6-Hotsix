{"ast":null,"code":"// src/components/Signup.js\n// import '../styles/Signup.css'; \nimport React from'react';import'../styles/Signup.css';function Signup(){const[page,setPage]=React.useState(null);// 폼 리셋 함수\nconst resetForm=()=>{setId('');setPassword('');setUserName('');setBirthDate('');setPhoneNum('');};//변수\nconst[id,setId]=React.useState('');const[password,setPassword]=React.useState('');const[userName,setUserName]=React.useState('');const[birthDate,setBirthDate]=React.useState('');const[phoneNum,setPhoneNum]=React.useState('');//  const [email, setEmail] = React.useState('');\n//handleChange\nconst handleIdChange=event=>setId(event.target.value);const handlePasswordChange=event=>setPassword(event.target.value);const handleUserNameChange=event=>setUserName(event.target.value);const handleBirthDateChange=event=>setBirthDate(event.target.value);const handlePhoneNumChange=event=>setPhoneNum(event.target.value);//  const handleEmailChange = (event) => setEmail(event.target.value);\n//handleSubmit\nconst handleSubmit=event=>{event.preventDefault();const data={id,password,userName,birthDate,phoneNum};// 서버의 특정 URL로 POST 요청 보내기\nfetch('/signUp',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(data)// 데이터를 JSON 문자열로 변환하여 전송\n}).then(response=>{if(response.ok){window.alert(\"회원가입이 완료되었습니다!\");//가입 성공 응답시 설문조사 페이지로 이동\nsetPage('survey');}else{const errorData=response.json();if(errorData.error===\"DuplicatedId\"){window.alert(\"이미 존재하는 아이디입니다!\");// 가입 실패 시 현재 페이지 새로고침\nresetForm();}}});};return/*#__PURE__*/React.createElement('div',{className:'signup-container'},/*#__PURE__*/React.createElement('h2',null,'회원가입'),/*#__PURE__*/React.createElement('form',{className:'signup-form',onSubmit:handleSubmit},/*#__PURE__*/React.createElement('label',null,'ID: '),/*#__PURE__*/React.createElement('input',{type:'text',name:'id',value:id,onChange:handleIdChange,required:true}),/*#__PURE__*/React.createElement('label',null,'비밀번호: '),/*#__PURE__*/React.createElement('input',{type:'password',name:'password',value:password,onChange:handlePasswordChange,required:true}),/*#__PURE__*/React.createElement('label',null,'이름: '),/*#__PURE__*/React.createElement('input',{type:'text',name:'userName',value:userName,onChange:handleUserNameChange,required:true}),/*#__PURE__*/React.createElement('label',null,'생년월일: '),/*#__PURE__*/React.createElement('input',{type:'date',name:'birthDate',value:birthDate,onChange:handleBirthDateChange,required:true}),/*#__PURE__*/React.createElement('label',null,'휴대폰 번호: '),/*#__PURE__*/React.createElement('input',{type:'text',name:'phoneNum',value:phoneNum,onChange:handlePhoneNumChange,required:true}),/*#__PURE__*/React.createElement('button',{type:'submit'},'회원가입')));}export default Signup;","map":{"version":3,"names":["React","Signup","page","setPage","useState","resetForm","setId","setPassword","setUserName","setBirthDate","setPhoneNum","id","password","userName","birthDate","phoneNum","handleIdChange","event","target","value","handlePasswordChange","handleUserNameChange","handleBirthDateChange","handlePhoneNumChange","handleSubmit","preventDefault","data","fetch","method","headers","body","JSON","stringify","then","response","ok","window","alert","errorData","json","error","createElement","className","onSubmit","type","name","onChange","required"],"sources":["/Users/jinmyeonghun/Desktop/3-2/공소/2024-2-CSC4004-6-Hotsix/frontend/src/components/Signup.js"],"sourcesContent":["// src/components/Signup.js\n// import '../styles/Signup.css'; \nimport React from 'react';\nimport '../styles/Signup.css';\n\nfunction Signup() {\n    \n    const [page, setPage] = React.useState(null);\n  // 폼 리셋 함수\n      const resetForm = () => {\n          setId('');\n          setPassword('');\n          setUserName('');\n          setBirthDate('');\n          setPhoneNum('');\n      };\n\n  //변수\n  const [id, setId] = React.useState('');\n  const [password, setPassword] = React.useState('');\n  const [userName, setUserName] = React.useState('');\n  const [birthDate, setBirthDate] = React.useState('');\n  const [phoneNum, setPhoneNum] = React.useState('');\n//  const [email, setEmail] = React.useState('');\n\n  //handleChange\n  const handleIdChange = (event) => setId(event.target.value);\n  const handlePasswordChange = (event) => setPassword(event.target.value);\n  const handleUserNameChange = (event) => setUserName(event.target.value);\n  const handleBirthDateChange = (event) => setBirthDate(event.target.value);\n  const handlePhoneNumChange = (event) => setPhoneNum(event.target.value);\n//  const handleEmailChange = (event) => setEmail(event.target.value);\n\n  //handleSubmit\n  const handleSubmit = (event) => {\n  event.preventDefault();\n  const data = { id,password,userName,birthDate,phoneNum };\n\n  // 서버의 특정 URL로 POST 요청 보내기\n  fetch('/signUp', {\n      method: 'POST',\n      headers: {\n          'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data), // 데이터를 JSON 문자열로 변환하여 전송\n      })\n    .then(response => {\n        if (response.ok) {\n            window.alert(\"회원가입이 완료되었습니다!\");\n            //가입 성공 응답시 설문조사 페이지로 이동\n            setPage('survey');\n        }\n         else  {\n            const errorData = response.json();\n            if(errorData.error === \"DuplicatedId\"){\n                window.alert(\"이미 존재하는 아이디입니다!\");\n                // 가입 실패 시 현재 페이지 새로고침\n                resetForm();\n            }\n         }\n    })\n}\n\n   return (\n\n          React.createElement('div', { className: 'signup-container' },\n              React.createElement('h2', null, '회원가입'),\n              React.createElement('form', { className: 'signup-form', onSubmit: handleSubmit },\n                  React.createElement('label', null, 'ID: '),\n                  React.createElement('input', {\n                      type: 'text',\n                      name: 'id',\n                      value: id,\n                      onChange: handleIdChange,\n                      required: true\n                  }),\n\n                  React.createElement('label', null, '비밀번호: '),\n                  React.createElement('input', {\n                      type: 'password',\n                      name: 'password',\n                      value: password,\n                      onChange: handlePasswordChange,\n                      required: true\n                  }),\n\n                  React.createElement('label', null, '이름: '),\n                  React.createElement('input', {\n                      type: 'text',\n                      name: 'userName',\n                      value: userName,\n                      onChange: handleUserNameChange,\n                      required: true\n                  }),\n\n                  React.createElement('label', null, '생년월일: '),\n                  React.createElement('input', {\n                      type: 'date',\n                      name: 'birthDate',\n                      value: birthDate,\n                      onChange: handleBirthDateChange,\n                      required: true\n                  }),\n\n                  React.createElement('label', null, '휴대폰 번호: '),\n                  React.createElement('input', {\n                      type: 'text',\n                      name: 'phoneNum',\n                      value: phoneNum,\n                      onChange: handlePhoneNumChange,\n                      required: true\n                  }),\n\n                  React.createElement('button', { type: 'submit' }, '회원가입')\n       )\n  )\n);\n}\n  \n  export default Signup;\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}