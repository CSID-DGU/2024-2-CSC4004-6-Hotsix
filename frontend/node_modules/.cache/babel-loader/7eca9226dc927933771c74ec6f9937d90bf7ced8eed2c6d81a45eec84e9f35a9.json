{"ast":null,"code":"var _s = $RefreshSig$();\n// src/components/Login.js\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/Login.css';\nfunction Login() {\n  _s();\n  const navigate = useNavigate();\n  // 폼 리셋 함수 (비밀번호만 비우기로 수정)\n  const resetForm = () => {\n    // setId('');\n    setPassword('');\n  };\n\n  //변수\n  const [id, setId] = React.useState('');\n  const [password, setPassword] = React.useState('');\n\n  //handleChange\n  const handleIdChange = event => setId(event.target.value);\n  const handlePasswordChange = event => setPassword(event.target.value);\n\n  //handleSubmit\n  const handleSubmit = async event => {\n    event.preventDefault();\n    // const data = { id,password };\n\n    try {\n      const response = await fetch('/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id,\n          password\n        })\n      });\n      // 응답 상태 확인\n      if (!response.ok) {\n        const errorData = await response.json();\n        if (errorData.error === \"ID does not exist\" || errorData.error === \"Invalid Password\") {\n          window.alert(\"아이디 또는 비밀번호가 틀렸습니다.\");\n        } else {\n          console.error(\"Error:\", errorData.error);\n          window.alert(\"Error: \" + errorData.error);\n        }\n        resetForm();\n        return;\n      }\n      // 성공 처리\n      const responseData = await response.json();\n      sessionStorage.setItem(\"token\", responseData.token); // JWT 저장\n      sessionStorage.setItem(\"ID\", id); //Id 저장\n\n      if (responseData.isFirstLogin) {\n        navigate('/survey');\n      } else {\n        navigate('/');\n      }\n    } catch (error) {\n      console.error(\"Unexpected error:\", error);\n      window.alert(\"Unexpected error occurred. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/React.createElement('div', {\n    className: 'login-container',\n    onSubmit: handleSubmit\n  }, /*#__PURE__*/React.createElement('h2', null, '로그인'), /*#__PURE__*/React.createElement('form', {\n    className: 'login-form'\n  }, /*#__PURE__*/React.createElement('label', null, '아이디 '), /*#__PURE__*/React.createElement('input', {\n    type: 'text',\n    name: 'id',\n    value: id,\n    onChange: handleIdChange,\n    required: true\n  }), /*#__PURE__*/React.createElement('label', null, '비밀번호 '), /*#__PURE__*/React.createElement('input', {\n    type: 'password',\n    name: 'password',\n    value: password,\n    onChange: handlePasswordChange,\n    required: true\n  }), /*#__PURE__*/React.createElement('button', {\n    type: 'submit'\n  }, '로그인')));\n}\n_s(Login, \"wWCGPHS6B34oUzWo7CPKFfS+1EA=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useNavigate","Login","_s","navigate","resetForm","setPassword","id","setId","useState","password","handleIdChange","event","target","value","handlePasswordChange","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","error","window","alert","console","responseData","sessionStorage","setItem","token","isFirstLogin","createElement","className","onSubmit","type","name","onChange","required","_c","$RefreshReg$"],"sources":["C:/Users/hsson/IdeaProjects/2024-2-CSC4004-6-Hotsix/frontend/src/components/Login.js"],"sourcesContent":["// src/components/Login.js\r\nimport React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../styles/Login.css'; \r\n\r\nfunction Login() {\r\n\r\n  const navigate = useNavigate();\r\n  // 폼 리셋 함수 (비밀번호만 비우기로 수정)\r\n  const resetForm = () => {\r\n      // setId('');\r\n      setPassword('');\r\n  };\r\n\r\n  //변수\r\n  const [id, setId] = React.useState('');\r\n  const [password, setPassword] = React.useState('');\r\n\r\n  //handleChange\r\n  const handleIdChange = (event) => setId(event.target.value);\r\n  const handlePasswordChange = (event) => setPassword(event.target.value);\r\n\r\n  //handleSubmit\r\n  const handleSubmit = async (event) => {\r\n      event.preventDefault();\r\n      // const data = { id,password };\r\n\r\n      try {\r\n          const response = await fetch('/login', {\r\n              method: 'POST',\r\n              headers: {'Content-Type': 'application/json'},\r\n              body: JSON.stringify({id, password}),\r\n          });\r\n          // 응답 상태 확인\r\n          if (!response.ok) {\r\n              const errorData = await response.json();\r\n              if (errorData.error === \"ID does not exist\" || errorData.error === \"Invalid Password\") {\r\n                  window.alert(\"아이디 또는 비밀번호가 틀렸습니다.\");\r\n              } else {\r\n                  console.error(\"Error:\", errorData.error);\r\n                  window.alert(\"Error: \" + errorData.error);\r\n              }\r\n              resetForm();\r\n              return;\r\n          }\r\n              // 성공 처리\r\n              const responseData = await response.json();\r\n              sessionStorage.setItem(\"token\", responseData.token); // JWT 저장\r\n              sessionStorage.setItem(\"ID\",id);  //Id 저장\r\n              \r\n              if(responseData.isFirstLogin){\r\n                  navigate('/survey');\r\n              }\r\n              else{\r\n                navigate('/');\r\n              }\r\n            }\r\n      catch(error) {\r\n          console.error(\"Unexpected error:\", error);\r\n          window.alert(\"Unexpected error occurred. Please try again.\");\r\n      }\r\n  }\r\nreturn (\r\n  React.createElement('div', { className: 'login-container',onSubmit: handleSubmit },\r\n    React.createElement('h2', null, '로그인'),\r\n    React.createElement('form', { className: 'login-form' },\r\n        React.createElement('label', null, '아이디 '),\r\n        React.createElement('input', {\r\n            type: 'text',\r\n            name: 'id',\r\n            value: id,\r\n            onChange: handleIdChange,\r\n            required: true\r\n        }),\r\n        React.createElement('label', null, '비밀번호 '),\r\n        React.createElement('input', {\r\n            type: 'password',\r\n            name: 'password',\r\n            value: password,\r\n            onChange: handlePasswordChange,\r\n            required: true\r\n        }),\r\n      React.createElement('button', { type: 'submit' }, '로그인')\r\n    )\r\n  )\r\n);\r\n}\r\n  \r\n  export default Login;\r\n  "],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,qBAAqB;AAE5B,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAEf,MAAMC,QAAQ,GAAGH,WAAW,CAAC,CAAC;EAC9B;EACA,MAAMI,SAAS,GAAGA,CAAA,KAAM;IACpB;IACAC,WAAW,CAAC,EAAE,CAAC;EACnB,CAAC;;EAED;EACA,MAAM,CAACC,EAAE,EAAEC,KAAK,CAAC,GAAGR,KAAK,CAACS,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACC,QAAQ,EAAEJ,WAAW,CAAC,GAAGN,KAAK,CAACS,QAAQ,CAAC,EAAE,CAAC;;EAElD;EACA,MAAME,cAAc,GAAIC,KAAK,IAAKJ,KAAK,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC3D,MAAMC,oBAAoB,GAAIH,KAAK,IAAKN,WAAW,CAACM,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;;EAEvE;EACA,MAAME,YAAY,GAAG,MAAOJ,KAAK,IAAK;IAClCA,KAAK,CAACK,cAAc,CAAC,CAAC;IACtB;;IAEA,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,QAAQ,EAAE;QACnCC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAC,cAAc,EAAE;QAAkB,CAAC;QAC7CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAACjB,EAAE;UAAEG;QAAQ,CAAC;MACvC,CAAC,CAAC;MACF;MACA,IAAI,CAACQ,QAAQ,CAACO,EAAE,EAAE;QACd,MAAMC,SAAS,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;QACvC,IAAID,SAAS,CAACE,KAAK,KAAK,mBAAmB,IAAIF,SAAS,CAACE,KAAK,KAAK,kBAAkB,EAAE;UACnFC,MAAM,CAACC,KAAK,CAAC,qBAAqB,CAAC;QACvC,CAAC,MAAM;UACHC,OAAO,CAACH,KAAK,CAAC,QAAQ,EAAEF,SAAS,CAACE,KAAK,CAAC;UACxCC,MAAM,CAACC,KAAK,CAAC,SAAS,GAAGJ,SAAS,CAACE,KAAK,CAAC;QAC7C;QACAvB,SAAS,CAAC,CAAC;QACX;MACJ;MACI;MACA,MAAM2B,YAAY,GAAG,MAAMd,QAAQ,CAACS,IAAI,CAAC,CAAC;MAC1CM,cAAc,CAACC,OAAO,CAAC,OAAO,EAAEF,YAAY,CAACG,KAAK,CAAC,CAAC,CAAC;MACrDF,cAAc,CAACC,OAAO,CAAC,IAAI,EAAC3B,EAAE,CAAC,CAAC,CAAE;;MAElC,IAAGyB,YAAY,CAACI,YAAY,EAAC;QACzBhC,QAAQ,CAAC,SAAS,CAAC;MACvB,CAAC,MACG;QACFA,QAAQ,CAAC,GAAG,CAAC;MACf;IACF,CAAC,CACP,OAAMwB,KAAK,EAAE;MACTG,OAAO,CAACH,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;MACzCC,MAAM,CAACC,KAAK,CAAC,8CAA8C,CAAC;IAChE;EACJ,CAAC;EACH,oBACE9B,KAAK,CAACqC,aAAa,CAAC,KAAK,EAAE;IAAEC,SAAS,EAAE,iBAAiB;IAACC,QAAQ,EAAEvB;EAAa,CAAC,eAChFhB,KAAK,CAACqC,aAAa,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,eACtCrC,KAAK,CAACqC,aAAa,CAAC,MAAM,EAAE;IAAEC,SAAS,EAAE;EAAa,CAAC,eACnDtC,KAAK,CAACqC,aAAa,CAAC,OAAO,EAAE,IAAI,EAAE,MAAM,CAAC,eAC1CrC,KAAK,CAACqC,aAAa,CAAC,OAAO,EAAE;IACzBG,IAAI,EAAE,MAAM;IACZC,IAAI,EAAE,IAAI;IACV3B,KAAK,EAAEP,EAAE;IACTmC,QAAQ,EAAE/B,cAAc;IACxBgC,QAAQ,EAAE;EACd,CAAC,CAAC,eACF3C,KAAK,CAACqC,aAAa,CAAC,OAAO,EAAE,IAAI,EAAE,OAAO,CAAC,eAC3CrC,KAAK,CAACqC,aAAa,CAAC,OAAO,EAAE;IACzBG,IAAI,EAAE,UAAU;IAChBC,IAAI,EAAE,UAAU;IAChB3B,KAAK,EAAEJ,QAAQ;IACfgC,QAAQ,EAAE3B,oBAAoB;IAC9B4B,QAAQ,EAAE;EACd,CAAC,CAAC,eACJ3C,KAAK,CAACqC,aAAa,CAAC,QAAQ,EAAE;IAAEG,IAAI,EAAE;EAAS,CAAC,EAAE,KAAK,CACzD,CACF,CAAC;AAEH;AAACrC,EAAA,CAjFQD,KAAK;EAAA,QAEKD,WAAW;AAAA;AAAA2C,EAAA,GAFrB1C,KAAK;AAmFZ,eAAeA,KAAK;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}