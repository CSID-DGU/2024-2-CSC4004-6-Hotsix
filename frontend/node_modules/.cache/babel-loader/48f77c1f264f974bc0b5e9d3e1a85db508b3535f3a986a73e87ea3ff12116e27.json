{"ast":null,"code":"var _s = $RefreshSig$();\n// import '../styles/MyPage.css';\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport '../styles/MyPage.css';\nfunction MyPage() {\n  _s();\n  const highlights = Array.from({\n    length: 5\n  }, (_, i) => ({\n    id: i + 1\n  })); // 하이라이트 아이콘 예시\n  const posts = Array.from({\n    length: 9\n  }, (_, i) => ({\n    id: i + 1\n  })); // 게시물 예시\n\n  const [userName, setUserName] = useState('');\n  const id = sessionStorage.getItem(\"ID\"); // 저장된 사용자 ID 가져오기\n\n  if (id) {\n    fetch(`/user/${id}`, {\n      // API 요청\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n        // 필요시 Authorization 헤더 추가\n        // 'Authorization': `Bearer ${sessionStorage.getItem('token')}`\n      }\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to fetch user data');\n      }\n      return response.json();\n    }).then(data => {\n      setUserName(data.userName); // 사용자 이름 설정\n    }).catch(error => {\n      console.error('Error fetching user data:', error);\n    });\n  }\n  return /*#__PURE__*/React.createElement('div', {\n    className: 'mypage'\n  }, /*#__PURE__*/React.createElement('div', {\n    className: 'profile-section'\n  }, /*#__PURE__*/React.createElement('div', {\n    className: 'profile-picture'\n  }), /*#__PURE__*/React.createElement('div', {\n    className: 'profile-info'\n  }, /*#__PURE__*/React.createElement('h2', {\n    className: 'username'\n  }, userName), /*#__PURE__*/React.createElement('div', {\n    className: 'stats'\n  }, /*#__PURE__*/React.createElement('div', {\n    className: 'stat'\n  }, '게시물 0'), /*#__PURE__*/React.createElement('div', {\n    className: 'stat'\n  }, '팔로워 0'), /*#__PURE__*/React.createElement('div', {\n    className: 'stat'\n  }, '팔로우 0')))), /*#__PURE__*/React.createElement('div', {\n    className: 'highlight-section'\n  }, highlights.map(highlight => /*#__PURE__*/React.createElement('div', {\n    className: 'highlight',\n    key: highlight.id\n  }))), /*#__PURE__*/React.createElement('div', {\n    className: 'feed'\n  }, posts.map(post => /*#__PURE__*/React.createElement('div', {\n    className: 'feed-item',\n    key: post.id\n  }))));\n}\n_s(MyPage, \"JIezBiY3Im0GvB+UajE6gBj8PwE=\");\n_c = MyPage;\nexport default MyPage;\nvar _c;\n$RefreshReg$(_c, \"MyPage\");","map":{"version":3,"names":["React","useState","useEffect","MyPage","_s","highlights","Array","from","length","_","i","id","posts","userName","setUserName","sessionStorage","getItem","fetch","method","headers","then","response","ok","Error","json","data","catch","error","console","createElement","className","map","highlight","key","post","_c","$RefreshReg$"],"sources":["/Users/jinmyeonghun/Desktop/3-2/공소/2024-2-CSC4004-6-Hotsix/frontend/src/components/MyPage.js"],"sourcesContent":["// import '../styles/MyPage.css';\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport '../styles/MyPage.css';\n\nfunction MyPage() {\n  const highlights = Array.from({ length: 5 }, (_, i) => ({ id: i + 1 })); // 하이라이트 아이콘 예시\n  const posts = Array.from({ length: 9 }, (_, i) => ({ id: i + 1 })); // 게시물 예시\n\n  const [userName, setUserName] = useState('');\n  const id = sessionStorage.getItem(\"ID\"); // 저장된 사용자 ID 가져오기\n\n  if(id){\n      fetch(`/user/${id}`, { // API 요청\n          method: 'GET',\n          headers: {\n              'Content-Type': 'application/json',\n              // 필요시 Authorization 헤더 추가\n              // 'Authorization': `Bearer ${sessionStorage.getItem('token')}`\n          },\n  } )\n      .then(response => {\n          if (!response.ok) {\n              throw new Error('Failed to fetch user data');\n          }\n          return response.json();\n      })\n      .then(data => {\n          setUserName(data.userName); // 사용자 이름 설정\n      })\n      .catch(error => {\n          console.error('Error fetching user data:', error);\n      })\n\n}\n\n\n\nreturn (\n  React.createElement('div', { className: 'mypage' },\n    React.createElement('div', { className: 'profile-section' },\n      React.createElement('div', { className: 'profile-picture' }),\n      React.createElement('div', { className: 'profile-info' },\n        React.createElement('h2', { className: 'username' }, \n          userName\n        ),\n        React.createElement('div', { className: 'stats' },\n          React.createElement('div', { className: 'stat' }, '게시물 0'),\n          React.createElement('div', { className: 'stat' }, '팔로워 0'),\n          React.createElement('div', { className: 'stat' }, '팔로우 0')\n        )\n      )\n    ),\n    React.createElement('div', { className: 'highlight-section' },\n      highlights.map(highlight =>\n        React.createElement('div', { className: 'highlight', key: highlight.id })\n      )\n    ),\n    React.createElement('div', { className: 'feed' },\n      posts.map(post =>\n        React.createElement('div', { className: 'feed-item', key: post.id })\n      )\n    )\n  )\n);\n}\n  \n  export default MyPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}