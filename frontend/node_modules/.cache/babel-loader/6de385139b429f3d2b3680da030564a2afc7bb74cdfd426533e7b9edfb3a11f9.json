{"ast":null,"code":"// src/components/Login.js\nimport React from'react';import{useNavigate}from'react-router-dom';import'../styles/Login.css';function Login(onHomeClick){const navigate=useNavigate();// 폼 리셋 함수 (비밀번호만 비우기로 수정)\nconst resetForm=()=>{// setId('');\nsetPassword('');};//변수\nconst[id,setId]=React.useState('');const[password,setPassword]=React.useState('');//handleChange\nconst handleIdChange=event=>setId(event.target.value);const handlePasswordChange=event=>setPassword(event.target.value);//handleSubmit\nconst handleSubmit=async event=>{event.preventDefault();// const data = { id,password };\ntry{const response=await fetch('/login',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({id,password})});// 응답 상태 확인\nif(!response.ok){const errorData=await response.json();if(errorData.error===\"ID does not exist\"||errorData.error===\"Invalid Password\"){window.alert(\"아이디 또는 비밀번호가 틀렸습니다.\");}else{console.error(\"Error:\",errorData.error);window.alert(\"Error: \"+errorData.error);}resetForm();return;}// 성공 처리\nconst responseData=await response.json();sessionStorage.setItem(\"token\",responseData.token);// JWT 저장\nsessionStorage.setItem(\"ID\",id);//Id 저장\nif(responseData.isFirstLogin){navigate('/survey');}else{navigate('/');}}catch(error){console.error(\"Unexpected error:\",error);window.alert(\"Unexpected error occurred. Please try again.\");}};return/*#__PURE__*/React.createElement('div',{className:'login-container',onSubmit:handleSubmit},/*#__PURE__*/React.createElement('h2',null,'로그인'),/*#__PURE__*/React.createElement('form',{className:'login-form'},/*#__PURE__*/React.createElement('label',null,'아이디 '),/*#__PURE__*/React.createElement('input',{type:'text',name:'id',value:id,onChange:handleIdChange,required:true}),/*#__PURE__*/React.createElement('label',null,'비밀번호 '),/*#__PURE__*/React.createElement('input',{type:'password',name:'password',value:password,onChange:handlePasswordChange,required:true}),/*#__PURE__*/React.createElement('button',{type:'submit'},'로그인')));}export default Login;","map":{"version":3,"names":["React","useNavigate","Login","onHomeClick","navigate","resetForm","setPassword","id","setId","useState","password","handleIdChange","event","target","value","handlePasswordChange","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","error","window","alert","console","responseData","sessionStorage","setItem","token","isFirstLogin","createElement","className","onSubmit","type","name","onChange","required"],"sources":["C:/Users/pc/Desktop/Hotsix/frontend/src/components/Login.js"],"sourcesContent":["// src/components/Login.js\r\nimport React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../styles/Login.css'; \r\n\r\nfunction Login(onHomeClick) {\r\n\r\n  const navigate = useNavigate();\r\n  // 폼 리셋 함수 (비밀번호만 비우기로 수정)\r\n  const resetForm = () => {\r\n      // setId('');\r\n      setPassword('');\r\n  };\r\n\r\n  //변수\r\n  const [id, setId] = React.useState('');\r\n  const [password, setPassword] = React.useState('');\r\n\r\n  //handleChange\r\n  const handleIdChange = (event) => setId(event.target.value);\r\n  const handlePasswordChange = (event) => setPassword(event.target.value);\r\n\r\n  //handleSubmit\r\n  const handleSubmit = async (event) => {\r\n      event.preventDefault();\r\n      // const data = { id,password };\r\n\r\n      try {\r\n          const response = await fetch('/login', {\r\n              method: 'POST',\r\n              headers: {'Content-Type': 'application/json'},\r\n              body: JSON.stringify({id, password}),\r\n          });\r\n          // 응답 상태 확인\r\n          if (!response.ok) {\r\n              const errorData = await response.json();\r\n              if (errorData.error === \"ID does not exist\" || errorData.error === \"Invalid Password\") {\r\n                  window.alert(\"아이디 또는 비밀번호가 틀렸습니다.\");\r\n              } else {\r\n                  console.error(\"Error:\", errorData.error);\r\n                  window.alert(\"Error: \" + errorData.error);\r\n              }\r\n              resetForm();\r\n              return;\r\n          }\r\n              // 성공 처리\r\n              const responseData = await response.json();\r\n              sessionStorage.setItem(\"token\", responseData.token); // JWT 저장\r\n              sessionStorage.setItem(\"ID\",id);  //Id 저장\r\n              \r\n              if(responseData.isFirstLogin){\r\n                  navigate('/survey');\r\n              }\r\n              else{\r\n                navigate('/');\r\n              }\r\n            }\r\n      catch(error) {\r\n          console.error(\"Unexpected error:\", error);\r\n          window.alert(\"Unexpected error occurred. Please try again.\");\r\n      }\r\n  }\r\nreturn (\r\n  React.createElement('div', { className: 'login-container',onSubmit: handleSubmit },\r\n    React.createElement('h2', null, '로그인'),\r\n    React.createElement('form', { className: 'login-form' },\r\n        React.createElement('label', null, '아이디 '),\r\n        React.createElement('input', {\r\n            type: 'text',\r\n            name: 'id',\r\n            value: id,\r\n            onChange: handleIdChange,\r\n            required: true\r\n        }),\r\n        React.createElement('label', null, '비밀번호 '),\r\n        React.createElement('input', {\r\n            type: 'password',\r\n            name: 'password',\r\n            value: password,\r\n            onChange: handlePasswordChange,\r\n            required: true\r\n        }),\r\n      React.createElement('button', { type: 'submit' }, '로그인')\r\n    )\r\n  )\r\n);\r\n}\r\n  \r\n  export default Login;\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}