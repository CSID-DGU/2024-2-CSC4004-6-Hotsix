{"ast":null,"code":"// src/components/Signup.js\n// import '../styles/Signup.css'; \nimport React from'react';import'../styles/Signup.css';import'../styles/Message.css';// import SurveyForm from './SurveyForm';   \nimport{useNavigate}from'react-router-dom';function Signup(onHomeClick){//navigate 변수\nconst navigate=useNavigate();const[page,setPage]=React.useState(null);// 폼 리셋 함수\nconst resetForm=()=>{setId('');setPassword('');setUserName('');setBirthDate('');setPhoneNum('');setProfileImagePath('');};//변수\nconst[id,setId]=React.useState('');const[password,setPassword]=React.useState('');const[userName,setUserName]=React.useState('');const[birthDate,setBirthDate]=React.useState('');const[phoneNum,setPhoneNum]=React.useState('');const[profileImagePath,setProfileImagePath]=React.useState(null);//handleChange\nconst handleIdChange=event=>setId(event.target.value);const handlePasswordChange=event=>setPassword(event.target.value);const handleUserNameChange=event=>setUserName(event.target.value);const handleBirthDateChange=event=>setBirthDate(event.target.value);const handlePhoneNumChange=event=>setPhoneNum(event.target.value);const handleProfileImagePathChange=event=>setProfileImagePath(event.target.files[0]);//  const handleEmailChange = (event) => setEmail(event.target.value);\n//handleSubmit\nconst handleSubmit=async event=>{event.preventDefault();// // 입력 데이터 객체 생성\n// const data = { id, password, userName, birthDate, phoneNum };\n// FormData 객체 생성\nconst formData=new FormData();formData.append('id',id);formData.append('password',password);formData.append('userName',userName);formData.append('birthDate',birthDate);formData.append('phoneNum',phoneNum);formData.append('profileImagePath',profileImagePath);// 프로필 이미지 추가\ntry{// 서버로 POST 요청 보내기\nconst response=await fetch('/signUp',{method:'POST',// headers: {\n//   'Content-Type': 'application/json',\n// },\nbody:formData});if(response.ok){// 회원가입 성공\nwindow.alert('회원가입이 완료되었습니다!');navigate('/');// 메인 페이지로 이동\n}else{// 실패 응답 처리\nconst errorData=await response.json();if(errorData.error==='DuplicatedId'){window.alert('이미 존재하는 아이디입니다!');resetForm();// 폼 초기화\n}else{window.alert('회원가입 중 문제가 발생했습니다.');}}}catch(error){// 네트워크 오류 처리\nconsole.error('Error occurred:',error);window.alert('서버와 통신 중 문제가 발생했습니다. 다시 시도해주세요.');}};return/*#__PURE__*/React.createElement('div',{className:'signup-container'},/*#__PURE__*/React.createElement('h2',null,'회원가입'),/*#__PURE__*/React.createElement('form',{className:'signup-form',onSubmit:handleSubmit},/*#__PURE__*/React.createElement('label',null,'아이디'),/*#__PURE__*/React.createElement('input',{type:'text',name:'id',value:id,onChange:handleIdChange,required:true}),/*#__PURE__*/React.createElement('div',{class:'idMessage'},'6자 이상 16자 이하 입력'),/*#__PURE__*/React.createElement('label',null,'비밀번호'),/*#__PURE__*/React.createElement('input',{type:'password',name:'password',value:password,onChange:handlePasswordChange,required:true}),/*#__PURE__*/React.createElement('div',{class:'pwdMessage'},'8자 이상 16자 이하의 영문,숫자,특수기호'),/*#__PURE__*/React.createElement('label',null,'이름 '),/*#__PURE__*/React.createElement('input',{type:'text',name:'userName',value:userName,onChange:handleUserNameChange,required:true}),/*#__PURE__*/React.createElement('label',null,'생년월일 '),/*#__PURE__*/React.createElement('input',{type:'date',name:'birthDate',value:birthDate,onChange:handleBirthDateChange,required:true}),/*#__PURE__*/React.createElement('label',null,'휴대폰 번호 '),/*#__PURE__*/React.createElement('input',{type:'text',name:'phoneNum',value:phoneNum,onChange:handlePhoneNumChange,required:true}),/*#__PURE__*/React.createElement('label',null,'프로필 이미지'),/*#__PURE__*/React.createElement('input',{type:'file',name:'profileImagePath',onChange:handleProfileImagePathChange,required:true// 프로필 이미지를 필수로 설정\n}),/*#__PURE__*/React.createElement('button',{type:'submit'},'회원가입')));}export default Signup;","map":{"version":3,"names":["React","useNavigate","Signup","onHomeClick","navigate","page","setPage","useState","resetForm","setId","setPassword","setUserName","setBirthDate","setPhoneNum","setProfileImagePath","id","password","userName","birthDate","phoneNum","profileImagePath","handleIdChange","event","target","value","handlePasswordChange","handleUserNameChange","handleBirthDateChange","handlePhoneNumChange","handleProfileImagePathChange","files","handleSubmit","preventDefault","formData","FormData","append","response","fetch","method","body","ok","window","alert","errorData","json","error","console","createElement","className","onSubmit","type","name","onChange","required","class"],"sources":["/Users/jinmyeonghun/Desktop/3-2/공소/2024-2-CSC4004-6-Hotsix/frontend/src/components/Signup.js"],"sourcesContent":["// src/components/Signup.js\n// import '../styles/Signup.css'; \nimport React from 'react';\nimport '../styles/Signup.css';\nimport '../styles/Message.css';\n// import SurveyForm from './SurveyForm';   \nimport { useNavigate } from 'react-router-dom';\n\nfunction Signup(onHomeClick) {\n\n    //navigate 변수\n    const navigate = useNavigate();\n\n    const [page, setPage] = React.useState(null);\n\n    // 폼 리셋 함수\n      const resetForm = () => {\n          setId('');\n          setPassword('');\n          setUserName('');\n          setBirthDate('');\n          setPhoneNum('');\n          setProfileImagePath('');\n      };\n\n  //변수\n  const [id, setId] = React.useState('');\n  const [password, setPassword] = React.useState('');\n  const [userName, setUserName] = React.useState('');\n  const [birthDate, setBirthDate] = React.useState('');\n  const [phoneNum, setPhoneNum] = React.useState('');\n  const [profileImagePath, setProfileImagePath] = React.useState(null);\n\n  //handleChange\n  const handleIdChange = (event) => setId(event.target.value);\n  const handlePasswordChange = (event) => setPassword(event.target.value);\n  const handleUserNameChange = (event) => setUserName(event.target.value);\n  const handleBirthDateChange = (event) => setBirthDate(event.target.value);\n  const handlePhoneNumChange = (event) => setPhoneNum(event.target.value);\n  const handleProfileImagePathChange = (event) => setProfileImagePath(event.target.files[0]);\n//  const handleEmailChange = (event) => setEmail(event.target.value);\n\n  //handleSubmit\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n  \n    // // 입력 데이터 객체 생성\n    // const data = { id, password, userName, birthDate, phoneNum };\n  \n    // FormData 객체 생성\n    const formData = new FormData();\n    formData.append('id', id);\n    formData.append('password', password);\n    formData.append('userName', userName);\n    formData.append('birthDate', birthDate);\n    formData.append('phoneNum', phoneNum);\n    formData.append('profileImagePath', profileImagePath); // 프로필 이미지 추가\n    try {\n      // 서버로 POST 요청 보내기\n      const response = await fetch('/signUp', {\n        method: 'POST',\n        // headers: {\n        //   'Content-Type': 'application/json',\n        // },\n        body: formData, \n      });\n  \n      if (response.ok) {\n        // 회원가입 성공\n        window.alert('회원가입이 완료되었습니다!');\n        navigate('/');// 메인 페이지로 이동\n      } else {\n        // 실패 응답 처리\n        const errorData = await response.json();\n        if (errorData.error === 'DuplicatedId') {\n          window.alert('이미 존재하는 아이디입니다!');\n          resetForm(); // 폼 초기화\n        } else {\n          window.alert('회원가입 중 문제가 발생했습니다.');\n        }\n      }\n    } catch (error) {\n      // 네트워크 오류 처리\n      console.error('Error occurred:', error);\n      window.alert('서버와 통신 중 문제가 발생했습니다. 다시 시도해주세요.');\n    }\n  };\n\n\n   return (\n\n          React.createElement('div', { className: 'signup-container' },\n              React.createElement('h2', null, '회원가입'),\n              React.createElement('form', { className: 'signup-form', onSubmit: handleSubmit },\n                  React.createElement('label', null, '아이디'),\n                  React.createElement('input', {\n                      type: 'text',\n                      name: 'id',\n                      value: id,\n                      onChange: handleIdChange,\n                      required: true\n                  }),\n                  React.createElement('div',{\n                    class : 'idMessage'\n                  },'6자 이상 16자 이하 입력'),\n                  React.createElement('label', null, '비밀번호'),\n                  React.createElement('input', {\n                      type: 'password',\n                      name: 'password',\n                      value: password,\n                      onChange: handlePasswordChange,\n                      required: true\n                  }),\n                  React.createElement('div',{\n                  class : 'pwdMessage'\n                },'8자 이상 16자 이하의 영문,숫자,특수기호'),\n\n                  React.createElement('label', null, '이름 '),\n                  React.createElement('input', {\n                      type: 'text',\n                      name: 'userName',\n                      value: userName,\n                      onChange: handleUserNameChange,\n                      required: true\n                  }),\n\n                  React.createElement('label', null, '생년월일 '),\n                  React.createElement('input', {\n                      type: 'date',\n                      name: 'birthDate',\n                      value: birthDate,\n                      onChange: handleBirthDateChange,\n                      required: true\n                  }),\n\n                  React.createElement('label', null, '휴대폰 번호 '),\n                  React.createElement('input', {\n                      type: 'text',\n                      name: 'phoneNum',\n                      value: phoneNum,\n                      onChange: handlePhoneNumChange,\n                      required: true\n                  }),\n                  React.createElement('label', null, '프로필 이미지'),\n                  React.createElement('input', {\n                      type: 'file',\n                      name: 'profileImagePath',\n                      onChange: handleProfileImagePathChange,\n                      required: true // 프로필 이미지를 필수로 설정\n                    }),\n                  React.createElement('button', { type: 'submit' }, '회원가입')\n       )\n  )\n);\n}\n  \n  export default Signup;\n  "],"mappings":"AAAA;AACA;AACA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,sBAAsB,CAC7B,MAAO,uBAAuB,CAC9B;AACA,OAASC,WAAW,KAAQ,kBAAkB,CAE9C,QAAS,CAAAC,MAAMA,CAACC,WAAW,CAAE,CAEzB;AACA,KAAM,CAAAC,QAAQ,CAAGH,WAAW,CAAC,CAAC,CAE9B,KAAM,CAACI,IAAI,CAAEC,OAAO,CAAC,CAAGN,KAAK,CAACO,QAAQ,CAAC,IAAI,CAAC,CAE5C;AACE,KAAM,CAAAC,SAAS,CAAGA,CAAA,GAAM,CACpBC,KAAK,CAAC,EAAE,CAAC,CACTC,WAAW,CAAC,EAAE,CAAC,CACfC,WAAW,CAAC,EAAE,CAAC,CACfC,YAAY,CAAC,EAAE,CAAC,CAChBC,WAAW,CAAC,EAAE,CAAC,CACfC,mBAAmB,CAAC,EAAE,CAAC,CAC3B,CAAC,CAEL;AACA,KAAM,CAACC,EAAE,CAAEN,KAAK,CAAC,CAAGT,KAAK,CAACO,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACS,QAAQ,CAAEN,WAAW,CAAC,CAAGV,KAAK,CAACO,QAAQ,CAAC,EAAE,CAAC,CAClD,KAAM,CAACU,QAAQ,CAAEN,WAAW,CAAC,CAAGX,KAAK,CAACO,QAAQ,CAAC,EAAE,CAAC,CAClD,KAAM,CAACW,SAAS,CAAEN,YAAY,CAAC,CAAGZ,KAAK,CAACO,QAAQ,CAAC,EAAE,CAAC,CACpD,KAAM,CAACY,QAAQ,CAAEN,WAAW,CAAC,CAAGb,KAAK,CAACO,QAAQ,CAAC,EAAE,CAAC,CAClD,KAAM,CAACa,gBAAgB,CAAEN,mBAAmB,CAAC,CAAGd,KAAK,CAACO,QAAQ,CAAC,IAAI,CAAC,CAEpE;AACA,KAAM,CAAAc,cAAc,CAAIC,KAAK,EAAKb,KAAK,CAACa,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAC3D,KAAM,CAAAC,oBAAoB,CAAIH,KAAK,EAAKZ,WAAW,CAACY,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CACvE,KAAM,CAAAE,oBAAoB,CAAIJ,KAAK,EAAKX,WAAW,CAACW,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CACvE,KAAM,CAAAG,qBAAqB,CAAIL,KAAK,EAAKV,YAAY,CAACU,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CACzE,KAAM,CAAAI,oBAAoB,CAAIN,KAAK,EAAKT,WAAW,CAACS,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CACvE,KAAM,CAAAK,4BAA4B,CAAIP,KAAK,EAAKR,mBAAmB,CAACQ,KAAK,CAACC,MAAM,CAACO,KAAK,CAAC,CAAC,CAAC,CAAC,CAC5F;AAEE;AACA,KAAM,CAAAC,YAAY,CAAG,KAAO,CAAAT,KAAK,EAAK,CACpCA,KAAK,CAACU,cAAc,CAAC,CAAC,CAEtB;AACA;AAEA;AACA,KAAM,CAAAC,QAAQ,CAAG,GAAI,CAAAC,QAAQ,CAAC,CAAC,CAC/BD,QAAQ,CAACE,MAAM,CAAC,IAAI,CAAEpB,EAAE,CAAC,CACzBkB,QAAQ,CAACE,MAAM,CAAC,UAAU,CAAEnB,QAAQ,CAAC,CACrCiB,QAAQ,CAACE,MAAM,CAAC,UAAU,CAAElB,QAAQ,CAAC,CACrCgB,QAAQ,CAACE,MAAM,CAAC,WAAW,CAAEjB,SAAS,CAAC,CACvCe,QAAQ,CAACE,MAAM,CAAC,UAAU,CAAEhB,QAAQ,CAAC,CACrCc,QAAQ,CAACE,MAAM,CAAC,kBAAkB,CAAEf,gBAAgB,CAAC,CAAE;AACvD,GAAI,CACF;AACA,KAAM,CAAAgB,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,SAAS,CAAE,CACtCC,MAAM,CAAE,MAAM,CACd;AACA;AACA;AACAC,IAAI,CAAEN,QACR,CAAC,CAAC,CAEF,GAAIG,QAAQ,CAACI,EAAE,CAAE,CACf;AACAC,MAAM,CAACC,KAAK,CAAC,gBAAgB,CAAC,CAC9BtC,QAAQ,CAAC,GAAG,CAAC,CAAC;AAChB,CAAC,IAAM,CACL;AACA,KAAM,CAAAuC,SAAS,CAAG,KAAM,CAAAP,QAAQ,CAACQ,IAAI,CAAC,CAAC,CACvC,GAAID,SAAS,CAACE,KAAK,GAAK,cAAc,CAAE,CACtCJ,MAAM,CAACC,KAAK,CAAC,iBAAiB,CAAC,CAC/BlC,SAAS,CAAC,CAAC,CAAE;AACf,CAAC,IAAM,CACLiC,MAAM,CAACC,KAAK,CAAC,oBAAoB,CAAC,CACpC,CACF,CACF,CAAE,MAAOG,KAAK,CAAE,CACd;AACAC,OAAO,CAACD,KAAK,CAAC,iBAAiB,CAAEA,KAAK,CAAC,CACvCJ,MAAM,CAACC,KAAK,CAAC,iCAAiC,CAAC,CACjD,CACF,CAAC,CAGA,mBAEO1C,KAAK,CAAC+C,aAAa,CAAC,KAAK,CAAE,CAAEC,SAAS,CAAE,kBAAmB,CAAC,cACxDhD,KAAK,CAAC+C,aAAa,CAAC,IAAI,CAAE,IAAI,CAAE,MAAM,CAAC,cACvC/C,KAAK,CAAC+C,aAAa,CAAC,MAAM,CAAE,CAAEC,SAAS,CAAE,aAAa,CAAEC,QAAQ,CAAElB,YAAa,CAAC,cAC5E/B,KAAK,CAAC+C,aAAa,CAAC,OAAO,CAAE,IAAI,CAAE,KAAK,CAAC,cACzC/C,KAAK,CAAC+C,aAAa,CAAC,OAAO,CAAE,CACzBG,IAAI,CAAE,MAAM,CACZC,IAAI,CAAE,IAAI,CACV3B,KAAK,CAAET,EAAE,CACTqC,QAAQ,CAAE/B,cAAc,CACxBgC,QAAQ,CAAE,IACd,CAAC,CAAC,cACFrD,KAAK,CAAC+C,aAAa,CAAC,KAAK,CAAC,CACxBO,KAAK,CAAG,WACV,CAAC,CAAC,iBAAiB,CAAC,cACpBtD,KAAK,CAAC+C,aAAa,CAAC,OAAO,CAAE,IAAI,CAAE,MAAM,CAAC,cAC1C/C,KAAK,CAAC+C,aAAa,CAAC,OAAO,CAAE,CACzBG,IAAI,CAAE,UAAU,CAChBC,IAAI,CAAE,UAAU,CAChB3B,KAAK,CAAER,QAAQ,CACfoC,QAAQ,CAAE3B,oBAAoB,CAC9B4B,QAAQ,CAAE,IACd,CAAC,CAAC,cACFrD,KAAK,CAAC+C,aAAa,CAAC,KAAK,CAAC,CAC1BO,KAAK,CAAG,YACV,CAAC,CAAC,0BAA0B,CAAC,cAE3BtD,KAAK,CAAC+C,aAAa,CAAC,OAAO,CAAE,IAAI,CAAE,KAAK,CAAC,cACzC/C,KAAK,CAAC+C,aAAa,CAAC,OAAO,CAAE,CACzBG,IAAI,CAAE,MAAM,CACZC,IAAI,CAAE,UAAU,CAChB3B,KAAK,CAAEP,QAAQ,CACfmC,QAAQ,CAAE1B,oBAAoB,CAC9B2B,QAAQ,CAAE,IACd,CAAC,CAAC,cAEFrD,KAAK,CAAC+C,aAAa,CAAC,OAAO,CAAE,IAAI,CAAE,OAAO,CAAC,cAC3C/C,KAAK,CAAC+C,aAAa,CAAC,OAAO,CAAE,CACzBG,IAAI,CAAE,MAAM,CACZC,IAAI,CAAE,WAAW,CACjB3B,KAAK,CAAEN,SAAS,CAChBkC,QAAQ,CAAEzB,qBAAqB,CAC/B0B,QAAQ,CAAE,IACd,CAAC,CAAC,cAEFrD,KAAK,CAAC+C,aAAa,CAAC,OAAO,CAAE,IAAI,CAAE,SAAS,CAAC,cAC7C/C,KAAK,CAAC+C,aAAa,CAAC,OAAO,CAAE,CACzBG,IAAI,CAAE,MAAM,CACZC,IAAI,CAAE,UAAU,CAChB3B,KAAK,CAAEL,QAAQ,CACfiC,QAAQ,CAAExB,oBAAoB,CAC9ByB,QAAQ,CAAE,IACd,CAAC,CAAC,cACFrD,KAAK,CAAC+C,aAAa,CAAC,OAAO,CAAE,IAAI,CAAE,SAAS,CAAC,cAC7C/C,KAAK,CAAC+C,aAAa,CAAC,OAAO,CAAE,CACzBG,IAAI,CAAE,MAAM,CACZC,IAAI,CAAE,kBAAkB,CACxBC,QAAQ,CAAEvB,4BAA4B,CACtCwB,QAAQ,CAAE,IAAK;AACjB,CAAC,CAAC,cACJrD,KAAK,CAAC+C,aAAa,CAAC,QAAQ,CAAE,CAAEG,IAAI,CAAE,QAAS,CAAC,CAAE,MAAM,CACnE,CACL,CAAC,CAEH,CAEE,cAAe,CAAAhD,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}