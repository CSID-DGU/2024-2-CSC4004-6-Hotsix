{"ast":null,"code":"import React,{useState}from'react';import'../styles/RecommendationCourse.css';import{useNavigate}from'react-router-dom';function RecommendationCourse(){const[currentPage,setCurrentPage]=useState(1);//session ID 확인\nconst id=sessionStorage.getItem(\"ID\");//navigate\nconst navigate=useNavigate();const[formData,setFormData]=useState({requiredLocation:'',activityPreference:false,dayBudgetRange:'',requiredCourse:'',transportType:'',startTime:''});// 지역 리스트\nconst seoulRegions=['종로','강북','의정부','노원','광화문','이태원','신촌','홍대','강남','건대','동작','용산'];// 페이지 이동 핸들러\nconst handleNext=()=>setCurrentPage(prev=>Math.min(prev+1,4));const handleBack=()=>setCurrentPage(prev=>Math.max(prev-1,1));// 폼 데이터 업데이트\nconst handleChange=e=>{const{name,value,type,checked}=e.target;setFormData(prev=>({...prev,[name]:type==='checkbox'?checked:value}));console.log('Updated formData (handleChange):',formData);};// 지역 선택 핸들러\nconst handleRegionSelect=region=>{setFormData(prev=>({...prev,requiredLocation:region}));console.log('Updated formData (handleRegionSelect):',formData);handleNext();// 선택 후 다음 페이지로 이동\n};//선호도 조사 제출\nconst submitResult=async()=>{console.log('Submitting formData:',formData);try{const response=await fetch(`recommendationCourse/${id}`,{method:`POST`,body:JSON.stringify(formData),headers:{'Content-Type':'application/json'}});if(response.ok){window.alert('제출되었습니다!');}else{window.alert('문제가 발생했습니다.잠시 후 다시 시도해주세요!');}}catch(error){// 네트워크 오류 처리\nconsole.error('Error occurred:',error);window.alert('서버와 통신 중 문제가 발생했습니다. 다시 시도해주세요.');}};// 페이지 렌더링 함수\nconst renderPage=()=>{switch(currentPage){case 1:return/*#__PURE__*/React.createElement('div',{className:'form-page regions-page'},/*#__PURE__*/React.createElement('h2',null,'지역을 선택하세요'),/*#__PURE__*/React.createElement('div',{className:'region-grid'},seoulRegions.map(region=>/*#__PURE__*/React.createElement('button',{key:region,className:`region-button`,onClick:()=>handleRegionSelect(region)},region))));case 2:return/*#__PURE__*/React.createElement('div',{className:'form-page'},/*#__PURE__*/React.createElement('h2',null,'선호도 조사 - 사용자 취향'),/*#__PURE__*/React.createElement('label',{className:'inline-label'},'액티비티 선호 여부 (선호 시 클릭)',/*#__PURE__*/React.createElement('div',{className:'checkbox-wrapper'},/*#__PURE__*/React.createElement('span',null,'예:'),/*#__PURE__*/React.createElement('input',{type:'checkbox',name:'activityPreference',checked:formData.activityPreference,onChange:handleChange}))),/*#__PURE__*/React.createElement('div',{className:'form-page'},/*#__PURE__*/React.createElement('h2',null,'선호도 조사 - 지역 및 코스'),/*#__PURE__*/React.createElement('label',null,'필수 코스:',/*#__PURE__*/React.createElement('input',{type:'text',name:'requiredCourse',value:formData.requiredCourse,onChange:e=>setFormData(prev=>({...prev,requiredCourse:e.target.value})),placeholder:'예: 롯데월드, 한강공원'}))));case 3:return/*#__PURE__*/React.createElement('div',{className:'form-page'},/*#__PURE__*/React.createElement('h2',null,'선호도 조사 - 기타 정보'),/*#__PURE__*/React.createElement('label',null,'교통수단:',/*#__PURE__*/React.createElement('select',{name:'transportation',value:formData.transportType,onChange:handleChange},/*#__PURE__*/React.createElement('option',{value:''},'선택하세요'),/*#__PURE__*/React.createElement('option',{value:'자가용'},'자가용'),/*#__PURE__*/React.createElement('option',{value:'대중교통'},'대중교통'),/*#__PURE__*/React.createElement('option',{value:'도보'},'도보'))),/*#__PURE__*/React.createElement('label',null,'데이트 시작 시간:',/*#__PURE__*/React.createElement('input',{type:'time',name:'startTime',value:formData.startTime,onChange:handleChange})),/*#__PURE__*/React.createElement('label',null,'당일 예산 (단위:만원):',/*#__PURE__*/React.createElement('input',{type:'number',name:'dayBudgetRange',value:formData.dayBudgetRange,onChange:handleChange,placeholder:'예: 5'})));default:return null;}};return/*#__PURE__*/React.createElement('div',{className:'survey-form'},renderPage(),/*#__PURE__*/React.createElement('div',{className:'navigation-buttons'},currentPage>1&&/*#__PURE__*/React.createElement('button',{className:'prev-button',onClick:handleBack},'뒤로'),currentPage<3&&currentPage>1&&/*#__PURE__*/React.createElement('button',{className:'next-button',onClick:handleNext},'다음'),currentPage===3&&/*#__PURE__*/React.createElement('button',{className:'commit-button',onClick:()=>{// 제출 시 동작\nsubmitResult();console.log(formData);}},'제출')));}export default RecommendationCourse;","map":{"version":3,"names":["React","useState","useNavigate","RecommendationCourse","currentPage","setCurrentPage","id","sessionStorage","getItem","navigate","formData","setFormData","requiredLocation","activityPreference","dayBudgetRange","requiredCourse","transportType","startTime","seoulRegions","handleNext","prev","Math","min","handleBack","max","handleChange","e","name","value","type","checked","target","console","log","handleRegionSelect","region","submitResult","response","fetch","method","body","JSON","stringify","headers","ok","window","alert","error","renderPage","createElement","className","map","key","onClick","onChange","placeholder"],"sources":["C:/Users/hsson/IdeaProjects/2024-2-CSC4004-6-Hotsix/frontend/src/components/RecommendationCourse.js"],"sourcesContent":["import React, { useState } from 'react';\nimport '../styles/RecommendationCourse.css';\nimport { useNavigate } from 'react-router-dom';\n\n\nfunction RecommendationCourse() {\n  const [currentPage, setCurrentPage] = useState(1);\n\n  //session ID 확인\n  const id = sessionStorage.getItem(\"ID\");\n\n  //navigate\n  const navigate = useNavigate();\n\n  const [formData, setFormData] = useState({\n    requiredLocation: '',\n    activityPreference: false,\n    dayBudgetRange: '',\n    requiredCourse: '',\n    transportType: '',\n    startTime: '',\n  });\n\n  // 지역 리스트\n  const seoulRegions = [\n    '종로', '강북', '의정부', '노원', '광화문', '이태원',\n    '신촌', '홍대', '강남', '건대', '동작', '용산',\n  ];\n\n  // 페이지 이동 핸들러\n  const handleNext = () => setCurrentPage((prev) => Math.min(prev + 1, 4));\n  const handleBack = () => setCurrentPage((prev) => Math.max(prev - 1, 1));\n\n  // 폼 데이터 업데이트\n  const handleChange = (e) => {\n      const { name, value, type, checked } = e.target;\n      setFormData((prev) => ({\n        ...prev,\n        [name]: type === 'checkbox' ? checked : value,\n      }));\n      console.log('Updated formData (handleChange):', formData);\n    };\n\n  // 지역 선택 핸들러\n  const handleRegionSelect = (region) => {\n    setFormData((prev) => ({\n      ...prev,\n      requiredLocation : region,\n    }));\n    console.log('Updated formData (handleRegionSelect):', formData);\n    handleNext(); // 선택 후 다음 페이지로 이동\n  };\n  //선호도 조사 제출\n    const submitResult =  async () => {\n      console.log('Submitting formData:', formData);\n      try {\n        \n        const response = await fetch(`recommendationCourse/${id}`,{\n          method: `POST`,\n          body: JSON.stringify(formData),\n          headers: { 'Content-Type': 'application/json' },\n        },)\n        if(response.ok){\n          window.alert('제출되었습니다!');       \n        }\n        else{\n          window.alert('문제가 발생했습니다.잠시 후 다시 시도해주세요!');\n        }\n      }\n      catch (error) {\n        // 네트워크 오류 처리\n        console.error('Error occurred:', error);\n        window.alert('서버와 통신 중 문제가 발생했습니다. 다시 시도해주세요.');\n      }\n  }\n\n  // 페이지 렌더링 함수\n  const renderPage = () => {\n    switch (currentPage) {\n      case 1:\n        return React.createElement(\n          'div',\n          { className: 'form-page regions-page' },\n          React.createElement('h2', null, '지역을 선택하세요'),\n          React.createElement(\n            'div',\n            { className: 'region-grid' },\n            seoulRegions.map((region) =>\n              React.createElement(\n                'button',\n                {\n                  key: region,\n                  className: `region-button`,\n                  onClick: () => handleRegionSelect(region),\n                },\n                region\n              )\n            )\n          )\n        );\n      case 2:\n        return React.createElement(\n          'div',\n          { className: 'form-page' },\n          React.createElement('h2', null, '선호도 조사 - 사용자 취향'),          \n          React.createElement(\n            'label',\n            { className: 'inline-label' },\n            '액티비티 선호 여부 (선호 시 클릭)',\n            React.createElement(\n              'div',\n              { className: 'checkbox-wrapper' },\n              React.createElement('span', null, '예:'),\n              React.createElement('input', {\n                type: 'checkbox',\n                name: 'activityPreference',\n                checked: formData.activityPreference,\n                onChange: handleChange,\n              })\n            )\n          ),\n          React.createElement(\n            'div',\n            { className: 'form-page' },\n            React.createElement('h2', null, '선호도 조사 - 지역 및 코스'),\n            React.createElement(\n              'label',\n              null,\n              '필수 코스:',\n              React.createElement('input', {\n                type: 'text',\n                name: 'requiredCourse',\n                value: formData.requiredCourse,\n                onChange: (e) =>\n                  setFormData((prev) => ({\n                    ...prev,\n                    requiredCourse: e.target.value,\n                  })),\n                placeholder: '예: 롯데월드, 한강공원',\n              })\n            ),\n          )\n        );\n      case 3:\n        return React.createElement(\n          'div',\n          { className: 'form-page' },\n          React.createElement('h2', null, '선호도 조사 - 기타 정보'),\n          React.createElement(\n            'label',\n            null,\n            '교통수단:',\n            React.createElement(\n              'select',\n              {\n                name: 'transportation',\n                value: formData.transportType,\n                onChange: handleChange,\n              },\n              React.createElement('option', { value: '' }, '선택하세요'),\n              React.createElement('option', { value: '자가용' }, '자가용'),\n              React.createElement('option', { value: '대중교통' }, '대중교통'),\n              React.createElement('option', { value: '도보' }, '도보')\n            )\n          ),\n          React.createElement(\n            'label',\n            null,\n            '데이트 시작 시간:',\n            React.createElement('input', {\n              type: 'time',\n              name: 'startTime',\n              value: formData.startTime,\n              onChange: handleChange,\n            })\n          ),\n          React.createElement(\n            'label',\n            null,\n            '당일 예산 (단위:만원):',\n            React.createElement('input', {\n              type: 'number',\n              name: 'dayBudgetRange',\n              value: formData.dayBudgetRange,\n              onChange: handleChange,\n              placeholder: '예: 5',\n            })\n          )\n        );\n      default:\n        return null;\n    }\n  };\n\n  return React.createElement(\n    'div',\n    { className: 'survey-form' },\n    renderPage(),\n    React.createElement(\n      'div',\n      { className: 'navigation-buttons' },\n      currentPage > 1 &&\n        React.createElement('button', { className: 'prev-button', onClick: handleBack }, '뒤로'),\n      currentPage < 3 && currentPage > 1 &&\n        React.createElement(\n          'button',\n          { className: 'next-button', onClick: handleNext },\n          '다음'\n        ),\n      currentPage === 3 &&\n        React.createElement(\n          'button',\n          { className: 'commit-button', onClick: () => {\n            // 제출 시 동작\n              submitResult();\n              console.log(formData)\n            } \n          },\n          '제출'\n        )\n    )\n  );\n}\n\nexport default RecommendationCourse;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}