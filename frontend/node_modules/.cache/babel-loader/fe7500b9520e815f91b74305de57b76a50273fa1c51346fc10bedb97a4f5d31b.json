{"ast":null,"code":"var _s = $RefreshSig$();\n// import '../styles/MyPage.css';\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport '../styles/MyPage.css';\nfunction MyPage() {\n  _s();\n  const highlights = Array.from({\n    length: 5\n  }, (_, i) => ({\n    id: i + 1\n  })); // 하이라이트 아이콘 예시\n  const posts = Array.from({\n    length: 9\n  }, (_, i) => ({\n    id: i + 1\n  })); // 게시물 예시\n\n  const [userName, setUserName] = useState('');\n  const id = sessionStorage.getItem(\"ID\"); // 저장된 사용자 ID 가져오기\n  const [profileImagePath, setProfileImagePath] = React.useState(\"\");\n  const fallbackImagePath = \"/asset/Images/altImage/alt.png\"; // 대체 이미지 경로\n  if (id) {\n    fetch(`/userNameAndUserProfile/${id}`, {\n      // API 요청\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n        // 필요시 Authorization 헤더 추가\n        // 'Authorization': `Bearer ${sessionStorage.getItem('token')}`\n      }\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to fetch user data');\n      }\n      return response.json();\n    }).then(data => {\n      setProfileImagePath(data.profileImagePath);\n      setUserName(data.userName); // 사용자 이름 설정\n    }).catch(error => {\n      console.error('Error fetching user data:', error);\n    });\n  }\n  return /*#__PURE__*/React.createElement('div', {\n    className: 'mypage'\n  }, /*#__PURE__*/React.createElement('div', {\n    className: 'profile-section'\n  }, /*#__PURE__*/React.createElement('img', {\n    className: 'profile-picture',\n    src: profileImagePath ? `/asset/Images/userProfile/` + profileImagePath : fallbackImagePath,\n    onError: e => {\n      e.target.src = fallbackImagePath;\n    },\n    // 이미지 로드 실패 시 대체 이미지로 변경\n    alt: 'No Image'\n  }), /*#__PURE__*/React.createElement('div', {\n    className: 'profile-info'\n  }, /*#__PURE__*/React.createElement('h2', {\n    className: 'username'\n  }, userName), /*#__PURE__*/React.createElement('div', {\n    className: 'stats'\n  }, /*#__PURE__*/React.createElement('div', {\n    className: 'stat'\n  }, '게시물 0'), /*#__PURE__*/React.createElement('div', {\n    className: 'stat'\n  }, '팔로워 0'), /*#__PURE__*/React.createElement('div', {\n    className: 'stat'\n  }, '팔로우 0')))), /*#__PURE__*/React.createElement('div', {\n    className: 'highlight-section'\n  }, highlights.map(highlight => /*#__PURE__*/React.createElement('div', {\n    className: 'highlight',\n    key: highlight.id\n  }))), /*#__PURE__*/React.createElement('div', {\n    className: 'feed'\n  }, posts.map(post => /*#__PURE__*/React.createElement('div', {\n    className: 'feed-item',\n    key: post.id\n  }))));\n}\n_s(MyPage, \"YSkpWw3hjXyH0TLPQ/5xNxmH5qo=\");\n_c = MyPage;\nexport default MyPage;\nvar _c;\n$RefreshReg$(_c, \"MyPage\");","map":{"version":3,"names":["React","useState","useEffect","MyPage","_s","highlights","Array","from","length","_","i","id","posts","userName","setUserName","sessionStorage","getItem","profileImagePath","setProfileImagePath","fallbackImagePath","fetch","method","headers","then","response","ok","Error","json","data","catch","error","console","createElement","className","src","onError","e","target","alt","map","highlight","key","post","_c","$RefreshReg$"],"sources":["C:/Users/hsson/IdeaProjects/2024-2-CSC4004-6-Hotsix/frontend/src/components/MyPage.js"],"sourcesContent":["// import '../styles/MyPage.css';\r\nimport React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport '../styles/MyPage.css';\r\n\r\nfunction MyPage() {\r\n  const highlights = Array.from({ length: 5 }, (_, i) => ({ id: i + 1 })); // 하이라이트 아이콘 예시\r\n  const posts = Array.from({ length: 9 }, (_, i) => ({ id: i + 1 })); // 게시물 예시\r\n\r\n  const [userName, setUserName] = useState('');\r\n  const id = sessionStorage.getItem(\"ID\"); // 저장된 사용자 ID 가져오기\r\n  const [profileImagePath, setProfileImagePath] = React.useState(\"\");\r\n  const fallbackImagePath = \"/asset/Images/altImage/alt.png\"; // 대체 이미지 경로\r\n  if(id){\r\n      fetch(`/userNameAndUserProfile/${id}`, { // API 요청\r\n          method: 'GET',\r\n          headers: {\r\n              'Content-Type': 'application/json',\r\n              // 필요시 Authorization 헤더 추가\r\n              // 'Authorization': `Bearer ${sessionStorage.getItem('token')}`\r\n          },\r\n  } )\r\n      .then(response => {\r\n          if (!response.ok) {\r\n              throw new Error('Failed to fetch user data');\r\n          }\r\n          return response.json();\r\n      })\r\n      .then(data => {\r\n          setProfileImagePath(data.profileImagePath);\r\n          setUserName(data.userName); // 사용자 이름 설정\r\n      })\r\n      .catch(error => {\r\n          console.error('Error fetching user data:', error);\r\n      })\r\n\r\n}\r\n\r\n\r\n\r\nreturn (\r\n  React.createElement('div', { className: 'mypage' },\r\n    React.createElement('div', { className: 'profile-section' },\r\n      React.createElement('img', {  \r\n        className: 'profile-picture' , \r\n        src: profileImagePath ? `/asset/Images/userProfile/` + profileImagePath : fallbackImagePath,\r\n        onError: (e) => { e.target.src = fallbackImagePath; }, // 이미지 로드 실패 시 대체 이미지로 변경\r\n        alt: 'No Image'\r\n        }\r\n      ),\r\n      React.createElement('div', { className: 'profile-info' },\r\n        React.createElement('h2', { className: 'username' }, \r\n          userName\r\n        ),\r\n        React.createElement('div', { className: 'stats' },\r\n          React.createElement('div', { className: 'stat' }, '게시물 0'),\r\n          React.createElement('div', { className: 'stat' }, '팔로워 0'),\r\n          React.createElement('div', { className: 'stat' }, '팔로우 0')\r\n        )\r\n      )\r\n    ),\r\n    React.createElement('div', { className: 'highlight-section' },\r\n      highlights.map(highlight =>\r\n        React.createElement('div', { className: 'highlight', key: highlight.id })\r\n      )\r\n    ),\r\n    React.createElement('div', { className: 'feed' },\r\n      posts.map(post =>\r\n        React.createElement('div', { className: 'feed-item', key: post.id })\r\n      )\r\n    )\r\n  )\r\n);\r\n}\r\n  \r\n  export default MyPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}