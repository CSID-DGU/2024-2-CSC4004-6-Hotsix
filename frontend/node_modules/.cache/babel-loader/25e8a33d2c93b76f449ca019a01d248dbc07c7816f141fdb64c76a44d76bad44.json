{"ast":null,"code":"var _s = $RefreshSig$();\n// src/components/SurveyForm.js\n// import '../styles/SurveyForm.css'; \nimport React from 'react';\nimport '../styles/SurveyForm.css';\nfunction SurveyForm() {\n  _s();\n  const [formData, setFormData] = React.useState({\n    mbti: '',\n    meetingFrequency: '',\n    budgetRange: '',\n    relationshipDate: '',\n    activityPreference: '',\n    mustVisitCourse: '',\n    preferredCourse: '',\n    transportation: '',\n    startTime: '',\n    mustVisitArea: '',\n    preferredArea: ''\n  });\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log('Survey Data:', formData);\n    // 서버에 POST 요청 예제\n    fetch('/RecommandDateCourse', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(formData)\n    }).then(response => response.json()).then(data => console.log('성공:', data)).catch(error => console.error('에러:', error));\n  };\n  return /*#__PURE__*/React.createElement('div', {\n    className: 'survey-container'\n  }, /*#__PURE__*/React.createElement('form', {\n    className: 'survey-form',\n    onSubmit: handleSubmit\n  },\n  /*#__PURE__*/\n  // MBTI 입력\n  React.createElement('label', null, '1. MBTI'), /*#__PURE__*/React.createElement('input', {\n    type: 'text',\n    name: 'mbti',\n    value: formData.mbti,\n    onChange: handleChange,\n    placeholder: '예: ENFP',\n    required: true\n  }),\n  /*#__PURE__*/\n  // 주당 만남 횟수\n  React.createElement('label', null, '2. 주당 만남 횟수'), /*#__PURE__*/React.createElement('input', {\n    type: 'number',\n    name: 'meetingFrequency',\n    value: formData.meetingFrequency,\n    onChange: handleChange,\n    placeholder: '숫자 입력',\n    required: true\n  }),\n  /*#__PURE__*/\n  // 평균 예산 범위\n  React.createElement('label', null, '3. 평균 예산 범위'), /*#__PURE__*/React.createElement('input', {\n    type: 'text',\n    name: 'budgetRange',\n    value: formData.budgetRange,\n    onChange: handleChange,\n    placeholder: '예: 10만원~20만원',\n    required: true\n  }),\n  /*#__PURE__*/\n  // 사귄 날짜\n  React.createElement('label', null, '4. 사귄 날짜'), /*#__PURE__*/React.createElement('input', {\n    type: 'date',\n    name: 'relationshipDate',\n    value: formData.relationshipDate,\n    onChange: handleChange,\n    required: true\n  }),\n  /*#__PURE__*/\n  // 액티비티 선호 유무\n  React.createElement('label', null, '5. 액티비티 선호 유무'), /*#__PURE__*/React.createElement('select', {\n    name: 'activityPreference',\n    value: formData.activityPreference,\n    onChange: handleChange,\n    required: true\n  }, /*#__PURE__*/React.createElement('option', {\n    value: ''\n  }, '선택하세요'), /*#__PURE__*/React.createElement('option', {\n    value: 'yes'\n  }, '예'), /*#__PURE__*/React.createElement('option', {\n    value: 'no'\n  }, '아니요')),\n  /*#__PURE__*/\n  // 필수 코스\n  React.createElement('label', null, '6. 필수 코스'), /*#__PURE__*/React.createElement('textarea', {\n    name: 'mustVisitCourse',\n    value: formData.mustVisitCourse,\n    onChange: handleChange,\n    placeholder: '예: 롯데월드, 한강공원',\n    rows: 3,\n    required: true\n  }),\n  /*#__PURE__*/\n  // 선호 코스\n  React.createElement('label', null, '7. 선호 코스'), /*#__PURE__*/React.createElement('textarea', {\n    name: 'preferredCourse',\n    value: formData.preferredCourse,\n    onChange: handleChange,\n    placeholder: '예: 카페, 레스토랑',\n    rows: 3,\n    required: true\n  }),\n  /*#__PURE__*/\n  // 교통 수단\n  React.createElement('label', null, '8. 교통 수단'), /*#__PURE__*/React.createElement('select', {\n    name: 'transportation',\n    value: formData.transportation,\n    onChange: handleChange,\n    required: true\n  }, /*#__PURE__*/React.createElement('option', {\n    value: ''\n  }, '선택하세요'), /*#__PURE__*/React.createElement('option', {\n    value: 'car'\n  }, '자동차'), /*#__PURE__*/React.createElement('option', {\n    value: 'public'\n  }, '대중교통'), /*#__PURE__*/React.createElement('option', {\n    value: 'walk'\n  }, '도보')),\n  /*#__PURE__*/\n  // 데이트 시작 예정 시간\n  React.createElement('label', null, '9. 데이트 시작 예정 시간'), /*#__PURE__*/React.createElement('input', {\n    type: 'time',\n    name: 'startTime',\n    value: formData.startTime,\n    onChange: handleChange,\n    required: true\n  }),\n  /*#__PURE__*/\n  // 필수 지역\n  React.createElement('label', null, '10. 필수 지역'), /*#__PURE__*/React.createElement('textarea', {\n    name: 'mustVisitArea',\n    value: formData.mustVisitArea,\n    onChange: handleChange,\n    placeholder: '예: 강남, 홍대',\n    rows: 2,\n    required: true\n  }),\n  /*#__PURE__*/\n  // 선호 지역\n  React.createElement('label', null, '11. 선호 지역'), /*#__PURE__*/React.createElement('textarea', {\n    name: 'preferredArea',\n    value: formData.preferredArea,\n    onChange: handleChange,\n    placeholder: '예: 이태원, 신촌',\n    rows: 2,\n    required: true\n  }),\n  /*#__PURE__*/\n  // 저장 버튼\n  React.createElement('button', {\n    type: 'submit'\n  }, '저장')));\n}\n_s(SurveyForm, \"B5tc3Q8D7C6mF2lmUGfEkprjQrM=\");\n_c = SurveyForm;\nexport default SurveyForm;\nvar _c;\n$RefreshReg$(_c, \"SurveyForm\");","map":{"version":3,"names":["React","SurveyForm","_s","formData","setFormData","useState","mbti","meetingFrequency","budgetRange","relationshipDate","activityPreference","mustVisitCourse","preferredCourse","transportation","startTime","mustVisitArea","preferredArea","handleChange","event","name","value","target","handleSubmit","preventDefault","console","log","fetch","method","headers","body","JSON","stringify","then","response","json","data","catch","error","createElement","className","onSubmit","type","onChange","placeholder","required","rows","_c","$RefreshReg$"],"sources":["/Users/jinmyeonghun/Desktop/3-2/공소/2024-2-CSC4004-6-Hotsix/frontend/src/components/SurveyForm.js"],"sourcesContent":["// src/components/SurveyForm.js\n// import '../styles/SurveyForm.css'; \nimport React from 'react';\nimport '../styles/SurveyForm.css';\n\nfunction SurveyForm() {\n  const [formData, setFormData] = React.useState({\n   mbti: '',\n   meetingFrequency: '',\n   budgetRange: '',\n   relationshipDate: '',\n   activityPreference: '',\n   mustVisitCourse: '',\n   preferredCourse: '',\n   transportation: '',\n   startTime: '',\n   mustVisitArea: '',\n   preferredArea: '',\n  });\n  \n  const handleChange = (event) => {\n   const { name, value } = event.target;\n   setFormData({ ...formData, [name]: value });\n  };\n  \n  const handleSubmit = (event) => {\n   event.preventDefault();\n   console.log('Survey Data:', formData);\n   // 서버에 POST 요청 예제\n   fetch('/RecommandDateCourse', {\n     method: 'POST',\n     headers: { 'Content-Type': 'application/json' },\n     body: JSON.stringify(formData),\n   })\n     .then((response) => response.json())\n     .then((data) => console.log('성공:', data))\n     .catch((error) => console.error('에러:', error));\n  };\n  \n  return React.createElement(\n    'div',\n    { className: 'survey-container' },\n    React.createElement(\n      'form',\n      { className: 'survey-form'\n     , onSubmit: handleSubmit\n      },\n      // MBTI 입력\n      React.createElement('label', null, '1. MBTI'),\n      React.createElement('input', {\n        type: 'text',\n        name: 'mbti',\n       value: formData.mbti,\n       onChange: handleChange,\n        placeholder: '예: ENFP',\n        required: true,\n      }),\n  \n      // 주당 만남 횟수\n      React.createElement('label', null, '2. 주당 만남 횟수'),\n      React.createElement('input', {\n        type: 'number',\n        name: 'meetingFrequency',\n       value: formData.meetingFrequency,\n       onChange: handleChange,\n        placeholder: '숫자 입력',\n        required: true,\n      }),\n  \n      // 평균 예산 범위\n      React.createElement('label', null, '3. 평균 예산 범위'),\n      React.createElement('input', {\n        type: 'text',\n        name: 'budgetRange',\n       value: formData.budgetRange,\n       onChange: handleChange,\n        placeholder: '예: 10만원~20만원',\n        required: true,\n      }),\n  \n      // 사귄 날짜\n      React.createElement('label', null, '4. 사귄 날짜'),\n      React.createElement('input', {\n        type: 'date',\n        name: 'relationshipDate',\n       value: formData.relationshipDate,\n       onChange: handleChange,\n        required: true,\n      }),\n  \n      // 액티비티 선호 유무\n      React.createElement('label', null, '5. 액티비티 선호 유무'),\n      React.createElement(\n        'select',\n        {\n          name: 'activityPreference',\n         value: formData.activityPreference,\n         onChange: handleChange,\n          required: true,\n        },\n        React.createElement('option', { value: '' }, '선택하세요'),\n        React.createElement('option', { value: 'yes' }, '예'),\n        React.createElement('option', { value: 'no' }, '아니요')\n      ),\n  \n      // 필수 코스\n      React.createElement('label', null, '6. 필수 코스'),\n      React.createElement('textarea', {\n        name: 'mustVisitCourse',\n       value: formData.mustVisitCourse,\n       onChange: handleChange,\n        placeholder: '예: 롯데월드, 한강공원',\n        rows: 3,\n        required: true,\n      }),\n  \n      // 선호 코스\n      React.createElement('label', null, '7. 선호 코스'),\n      React.createElement('textarea', {\n        name: 'preferredCourse',\n       value: formData.preferredCourse,\n       onChange: handleChange,\n        placeholder: '예: 카페, 레스토랑',\n        rows: 3,\n        required: true,\n      }),\n  \n      // 교통 수단\n      React.createElement('label', null, '8. 교통 수단'),\n      React.createElement(\n        'select',\n        {\n          name: 'transportation',\n         value: formData.transportation,\n         onChange: handleChange,\n          required: true,\n        },\n        React.createElement('option', { value: '' }, '선택하세요'),\n        React.createElement('option', { value: 'car' }, '자동차'),\n        React.createElement('option', { value: 'public' }, '대중교통'),\n        React.createElement('option', { value: 'walk' }, '도보')\n      ),\n  \n      // 데이트 시작 예정 시간\n      React.createElement('label', null, '9. 데이트 시작 예정 시간'),\n      React.createElement('input', {\n        type: 'time',\n        name: 'startTime',\n       value: formData.startTime,\n       onChange: handleChange,\n        required: true,\n      }),\n  \n      // 필수 지역\n      React.createElement('label', null, '10. 필수 지역'),\n      React.createElement('textarea', {\n        name: 'mustVisitArea',\n       value: formData.mustVisitArea,\n       onChange: handleChange,\n        placeholder: '예: 강남, 홍대',\n        rows: 2,\n        required: true,\n      }),\n  \n      // 선호 지역\n      React.createElement('label', null, '11. 선호 지역'),\n      React.createElement('textarea', {\n        name: 'preferredArea',\n       value: formData.preferredArea,\n       onChange: handleChange,\n        placeholder: '예: 이태원, 신촌',\n        rows: 2,\n        required: true,\n      }),\n  \n      // 저장 버튼\n      React.createElement(\n        'button',\n        { type: 'submit' },\n        '저장'\n      )\n    )\n  );\n  }\n  \n  export default SurveyForm;\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}