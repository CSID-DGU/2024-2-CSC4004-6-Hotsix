{"ast":null,"code":"import React,{useState}from'react';import'../styles/RecommendationCourse.css';function RecommendationCourse(){const[currentPage,setCurrentPage]=useState(1);const[formData,setFormData]=useState({mbti:'',prefersActivity:false,favoriteCourse:'',transportation:'',startTime:'',budget:'',preferredRegions:[],mustVisitCourses:[],mustVisitRegion:''});// 지역 리스트\nconst seoulRegions=['종로','강북','의정부','노원','광화문','이태원','신촌','홍대','강남','건대','동작','용산'];// 페이지 이동 핸들러\nconst handleNext=()=>setCurrentPage(prev=>Math.min(prev+1,4));const handleBack=()=>setCurrentPage(prev=>Math.max(prev-1,1));// 폼 데이터 업데이트\nconst handleChange=e=>{const{name,value,type,checked}=e.target;setFormData(prev=>({...prev,[name]:type==='checkbox'?checked:value}));};// 지역 선택 핸들러\nconst handleRegionSelect=region=>{setFormData(prev=>({...prev,preferredRegions:[...prev.preferredRegions,region]}));handleNext();// 선택 후 다음 페이지로 이동\n};// 페이지 렌더링 함수\nconst renderPage=()=>{switch(currentPage){case 1:return/*#__PURE__*/React.createElement('div',{className:'form-page regions-page'},/*#__PURE__*/React.createElement('h2',null,'지역을 선택하세요'),/*#__PURE__*/React.createElement('div',{className:'region-grid'},seoulRegions.map(region=>/*#__PURE__*/React.createElement('button',{key:region,className:'region-button',onClick:()=>handleRegionSelect(region)},region))));case 2:return/*#__PURE__*/React.createElement('div',{className:'form-page'},/*#__PURE__*/React.createElement('h2',null,'선호도 조사 - 사용자 취향'),/*#__PURE__*/React.createElement('label',{className:'inline-label'},'액티비티 선호 여부 (선호 시 클릭)',/*#__PURE__*/React.createElement('div',{className:'checkbox-wrapper'},/*#__PURE__*/React.createElement('span',null,'예:'),/*#__PURE__*/React.createElement('input',{type:'checkbox',name:'prefersActivity',checked:formData.prefersActivity,onChange:handleChange}))),/*#__PURE__*/React.createElement('div',{className:'form-page'},/*#__PURE__*/React.createElement('h2',null,'선호도 조사 - 지역 및 코스'),/*#__PURE__*/React.createElement('label',null,'필수 코스:',/*#__PURE__*/React.createElement('input',{type:'text',name:'mustVisitCourses',value:formData.mustVisitCourses,onChange:e=>setFormData(prev=>({...prev,mustVisitCourses:e.target.value.split(',')})),placeholder:'예: 롯데월드, 한강공원'}))));case 3:return/*#__PURE__*/React.createElement('div',{className:'form-page'},/*#__PURE__*/React.createElement('h2',null,'선호도 조사 - 기타 정보'),/*#__PURE__*/React.createElement('label',null,'교통수단:',/*#__PURE__*/React.createElement('select',{name:'transportation',value:formData.transportation,onChange:handleChange},/*#__PURE__*/React.createElement('option',{value:''},'선택하세요'),/*#__PURE__*/React.createElement('option',{value:'자가용'},'자가용'),/*#__PURE__*/React.createElement('option',{value:'대중교통'},'대중교통'),/*#__PURE__*/React.createElement('option',{value:'도보'},'도보'))),/*#__PURE__*/React.createElement('label',null,'데이트 시작 시간:',/*#__PURE__*/React.createElement('input',{type:'time',name:'startTime',value:formData.startTime,onChange:handleChange})),/*#__PURE__*/React.createElement('label',null,'당일 예산 (단위:만원):',/*#__PURE__*/React.createElement('input',{type:'number',name:'budget',value:formData.budget,onChange:handleChange,placeholder:'예: 5'})));// case 4:\n//   return React.createElement(\n//     'div',\n//     { className: 'form-page' },\n//     React.createElement('h2', null, '선호도 조사 - 지역 및 코스'),\n//     React.createElement(\n//       'label',\n//       null,\n//       '필수 코스:',\n//       React.createElement('input', {\n//         type: 'text',\n//         name: 'mustVisitCourses',\n//         value: formData.mustVisitCourses,\n//         onChange: (e) =>\n//           setFormData((prev) => ({\n//             ...prev,\n//             mustVisitCourses: e.target.value.split(','),\n//           })),\n//         placeholder: '예: 롯데월드, 한강공원',\n//       })\n//     ),\n//   );\ndefault:return null;}};return/*#__PURE__*/React.createElement('div',{className:'survey-form'},renderPage(),/*#__PURE__*/React.createElement('div',{className:'navigation-buttons'},currentPage>1&&/*#__PURE__*/React.createElement('button',{className:'prev-button',onClick:handleBack},'뒤로'),currentPage<4&&currentPage>1&&/*#__PURE__*/React.createElement('button',{className:'next-button',onClick:handleNext},'다음')// currentPage === 4 &&\n//   React.createElement(\n//     'button',\n//     { className: 'commit-button', onClick: () => console.log(formData) },\n//     '제출'\n//   )\n));}export default RecommendationCourse;","map":{"version":3,"names":["React","useState","RecommendationCourse","currentPage","setCurrentPage","formData","setFormData","mbti","prefersActivity","favoriteCourse","transportation","startTime","budget","preferredRegions","mustVisitCourses","mustVisitRegion","seoulRegions","handleNext","prev","Math","min","handleBack","max","handleChange","e","name","value","type","checked","target","handleRegionSelect","region","renderPage","createElement","className","map","key","onClick","onChange","split","placeholder"],"sources":["C:/Users/hsson/IdeaProjects/2024-2-CSC4004-6-Hotsix/frontend/src/components/RecommendationCourse.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../styles/RecommendationCourse.css';\r\n\r\nfunction RecommendationCourse() {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [formData, setFormData] = useState({\r\n    mbti: '',\r\n    prefersActivity: false,\r\n    favoriteCourse: '',\r\n    transportation: '',\r\n    startTime: '',\r\n    budget: '',\r\n    preferredRegions: [],\r\n    mustVisitCourses: [],\r\n    mustVisitRegion: '',\r\n  });\r\n\r\n  // 지역 리스트\r\n  const seoulRegions = [\r\n    '종로', '강북', '의정부', '노원', '광화문', '이태원',\r\n    '신촌', '홍대', '강남', '건대', '동작', '용산',\r\n  ];\r\n\r\n  // 페이지 이동 핸들러\r\n  const handleNext = () => setCurrentPage((prev) => Math.min(prev + 1, 4));\r\n  const handleBack = () => setCurrentPage((prev) => Math.max(prev - 1, 1));\r\n\r\n  // 폼 데이터 업데이트\r\n  const handleChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      [name]: type === 'checkbox' ? checked : value,\r\n    }));\r\n  };\r\n\r\n  // 지역 선택 핸들러\r\n  const handleRegionSelect = (region) => {\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      preferredRegions: [...prev.preferredRegions, region],\r\n    }));\r\n    handleNext(); // 선택 후 다음 페이지로 이동\r\n  };\r\n\r\n  // 페이지 렌더링 함수\r\n  const renderPage = () => {\r\n    switch (currentPage) {\r\n      case 1:\r\n        return React.createElement(\r\n          'div',\r\n          { className: 'form-page regions-page' },\r\n          React.createElement('h2', null, '지역을 선택하세요'),\r\n          React.createElement(\r\n            'div',\r\n            { className: 'region-grid' },\r\n            seoulRegions.map((region) =>\r\n              React.createElement(\r\n                'button',\r\n                {\r\n                  key: region,\r\n                  className: 'region-button',\r\n                  onClick: () => handleRegionSelect(region),\r\n                },\r\n                region\r\n              )\r\n            )\r\n          )\r\n        );\r\n      case 2:\r\n        return React.createElement(\r\n          'div',\r\n          { className: 'form-page' },\r\n          React.createElement('h2', null, '선호도 조사 - 사용자 취향'),          \r\n          React.createElement(\r\n            'label',\r\n            { className: 'inline-label' },\r\n            '액티비티 선호 여부 (선호 시 클릭)',\r\n            React.createElement(\r\n              'div',\r\n              { className: 'checkbox-wrapper' },\r\n              React.createElement('span', null, '예:'),\r\n              React.createElement('input', {\r\n                type: 'checkbox',\r\n                name: 'prefersActivity',\r\n                checked: formData.prefersActivity,\r\n                onChange: handleChange,\r\n              })\r\n            )\r\n          ),\r\n          React.createElement(\r\n            'div',\r\n            { className: 'form-page' },\r\n            React.createElement('h2', null, '선호도 조사 - 지역 및 코스'),\r\n            React.createElement(\r\n              'label',\r\n              null,\r\n              '필수 코스:',\r\n              React.createElement('input', {\r\n                type: 'text',\r\n                name: 'mustVisitCourses',\r\n                value: formData.mustVisitCourses,\r\n                onChange: (e) =>\r\n                  setFormData((prev) => ({\r\n                    ...prev,\r\n                    mustVisitCourses: e.target.value.split(','),\r\n                  })),\r\n                placeholder: '예: 롯데월드, 한강공원',\r\n              })\r\n            ),\r\n          )\r\n        );\r\n      case 3:\r\n        return React.createElement(\r\n          'div',\r\n          { className: 'form-page' },\r\n          React.createElement('h2', null, '선호도 조사 - 기타 정보'),\r\n          React.createElement(\r\n            'label',\r\n            null,\r\n            '교통수단:',\r\n            React.createElement(\r\n              'select',\r\n              {\r\n                name: 'transportation',\r\n                value: formData.transportation,\r\n                onChange: handleChange,\r\n              },\r\n              React.createElement('option', { value: '' }, '선택하세요'),\r\n              React.createElement('option', { value: '자가용' }, '자가용'),\r\n              React.createElement('option', { value: '대중교통' }, '대중교통'),\r\n              React.createElement('option', { value: '도보' }, '도보')\r\n            )\r\n          ),\r\n          React.createElement(\r\n            'label',\r\n            null,\r\n            '데이트 시작 시간:',\r\n            React.createElement('input', {\r\n              type: 'time',\r\n              name: 'startTime',\r\n              value: formData.startTime,\r\n              onChange: handleChange,\r\n            })\r\n          ),\r\n          React.createElement(\r\n            'label',\r\n            null,\r\n            '당일 예산 (단위:만원):',\r\n            React.createElement('input', {\r\n              type: 'number',\r\n              name: 'budget',\r\n              value: formData.budget,\r\n              onChange: handleChange,\r\n              placeholder: '예: 5',\r\n            })\r\n          )\r\n        );\r\n      // case 4:\r\n      //   return React.createElement(\r\n      //     'div',\r\n      //     { className: 'form-page' },\r\n      //     React.createElement('h2', null, '선호도 조사 - 지역 및 코스'),\r\n      //     React.createElement(\r\n      //       'label',\r\n      //       null,\r\n      //       '필수 코스:',\r\n      //       React.createElement('input', {\r\n      //         type: 'text',\r\n      //         name: 'mustVisitCourses',\r\n      //         value: formData.mustVisitCourses,\r\n      //         onChange: (e) =>\r\n      //           setFormData((prev) => ({\r\n      //             ...prev,\r\n      //             mustVisitCourses: e.target.value.split(','),\r\n      //           })),\r\n      //         placeholder: '예: 롯데월드, 한강공원',\r\n      //       })\r\n      //     ),\r\n      //   );\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return React.createElement(\r\n    'div',\r\n    { className: 'survey-form' },\r\n    renderPage(),\r\n    React.createElement(\r\n      'div',\r\n      { className: 'navigation-buttons' },\r\n      currentPage > 1 &&\r\n        React.createElement('button', { className: 'prev-button', onClick: handleBack }, '뒤로'),\r\n      currentPage < 4 && currentPage > 1 &&\r\n        React.createElement(\r\n          'button',\r\n          { className: 'next-button', onClick: handleNext },\r\n          '다음'\r\n        ),\r\n      // currentPage === 4 &&\r\n      //   React.createElement(\r\n      //     'button',\r\n      //     { className: 'commit-button', onClick: () => console.log(formData) },\r\n      //     '제출'\r\n      //   )\r\n    )\r\n  );\r\n}\r\n\r\nexport default RecommendationCourse;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}